// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/segment.proto

package segment.v3;

public final class Segment {
  private Segment() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * <pre>
   * Map to the type of span
   * </pre>
   *
   * Protobuf enum {@code segment.v3.SpanType}
   */
  public enum SpanType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * Server side of RPC. Consumer side of MQ.
     * </pre>
     *
     * <code>Entry = 0;</code>
     */
    Entry(0),
    /**
     * <pre>
     * Client side of RPC. Producer side of MQ.
     * </pre>
     *
     * <code>Exit = 1;</code>
     */
    Exit(1),
    /**
     * <pre>
     * A common local code execution.
     * </pre>
     *
     * <code>Local = 2;</code>
     */
    Local(2),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * Server side of RPC. Consumer side of MQ.
     * </pre>
     *
     * <code>Entry = 0;</code>
     */
    public static final int Entry_VALUE = 0;
    /**
     * <pre>
     * Client side of RPC. Producer side of MQ.
     * </pre>
     *
     * <code>Exit = 1;</code>
     */
    public static final int Exit_VALUE = 1;
    /**
     * <pre>
     * A common local code execution.
     * </pre>
     *
     * <code>Local = 2;</code>
     */
    public static final int Local_VALUE = 2;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static SpanType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static SpanType forNumber(int value) {
      switch (value) {
        case 0: return Entry;
        case 1: return Exit;
        case 2: return Local;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<SpanType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        SpanType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<SpanType>() {
            public SpanType findValueByNumber(int number) {
              return SpanType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return segment.v3.Segment.getDescriptor().getEnumTypes().get(0);
    }

    private static final SpanType[] VALUES = values();

    public static SpanType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private SpanType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:segment.v3.SpanType)
  }

  /**
   * <pre>
   * Type of the reference
   * </pre>
   *
   * Protobuf enum {@code segment.v3.RefType}
   */
  public enum RefType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * Map to the reference targeting the segment in another OS process.
     * </pre>
     *
     * <code>CrossProcess = 0;</code>
     */
    CrossProcess(0),
    /**
     * <pre>
     * Map to the reference targeting the segment in the same process of the current one, just across thread.
     * This is only used when the coding language has the thread concept.
     * </pre>
     *
     * <code>CrossThread = 1;</code>
     */
    CrossThread(1),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * Map to the reference targeting the segment in another OS process.
     * </pre>
     *
     * <code>CrossProcess = 0;</code>
     */
    public static final int CrossProcess_VALUE = 0;
    /**
     * <pre>
     * Map to the reference targeting the segment in the same process of the current one, just across thread.
     * This is only used when the coding language has the thread concept.
     * </pre>
     *
     * <code>CrossThread = 1;</code>
     */
    public static final int CrossThread_VALUE = 1;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static RefType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static RefType forNumber(int value) {
      switch (value) {
        case 0: return CrossProcess;
        case 1: return CrossThread;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<RefType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        RefType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<RefType>() {
            public RefType findValueByNumber(int number) {
              return RefType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return segment.v3.Segment.getDescriptor().getEnumTypes().get(1);
    }

    private static final RefType[] VALUES = values();

    public static RefType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private RefType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:segment.v3.RefType)
  }

  /**
   * <pre>
   * Map to the layer of span
   * </pre>
   *
   * Protobuf enum {@code segment.v3.SpanLayer}
   */
  public enum SpanLayer
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * Unknown layer. Could be anything.
     * </pre>
     *
     * <code>Unknown = 0;</code>
     */
    Unknown(0),
    /**
     * <pre>
     * A database layer, used in tracing the database client component.
     * </pre>
     *
     * <code>Database = 1;</code>
     */
    Database(1),
    /**
     * <pre>
     * A RPC layer, used in both client and server sides of RPC component.
     * </pre>
     *
     * <code>RPCFramework = 2;</code>
     */
    RPCFramework(2),
    /**
     * <pre>
     * HTTP is a more specific RPCFramework.
     * </pre>
     *
     * <code>Http = 3;</code>
     */
    Http(3),
    /**
     * <pre>
     * A MQ layer, used in both producer and consumer sides of the MQ component.
     * </pre>
     *
     * <code>MQ = 4;</code>
     */
    MQ(4),
    /**
     * <pre>
     * A cache layer, used in tracing the cache client component.
     * </pre>
     *
     * <code>Cache = 5;</code>
     */
    Cache(5),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * Unknown layer. Could be anything.
     * </pre>
     *
     * <code>Unknown = 0;</code>
     */
    public static final int Unknown_VALUE = 0;
    /**
     * <pre>
     * A database layer, used in tracing the database client component.
     * </pre>
     *
     * <code>Database = 1;</code>
     */
    public static final int Database_VALUE = 1;
    /**
     * <pre>
     * A RPC layer, used in both client and server sides of RPC component.
     * </pre>
     *
     * <code>RPCFramework = 2;</code>
     */
    public static final int RPCFramework_VALUE = 2;
    /**
     * <pre>
     * HTTP is a more specific RPCFramework.
     * </pre>
     *
     * <code>Http = 3;</code>
     */
    public static final int Http_VALUE = 3;
    /**
     * <pre>
     * A MQ layer, used in both producer and consumer sides of the MQ component.
     * </pre>
     *
     * <code>MQ = 4;</code>
     */
    public static final int MQ_VALUE = 4;
    /**
     * <pre>
     * A cache layer, used in tracing the cache client component.
     * </pre>
     *
     * <code>Cache = 5;</code>
     */
    public static final int Cache_VALUE = 5;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static SpanLayer valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static SpanLayer forNumber(int value) {
      switch (value) {
        case 0: return Unknown;
        case 1: return Database;
        case 2: return RPCFramework;
        case 3: return Http;
        case 4: return MQ;
        case 5: return Cache;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<SpanLayer>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        SpanLayer> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<SpanLayer>() {
            public SpanLayer findValueByNumber(int number) {
              return SpanLayer.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return segment.v3.Segment.getDescriptor().getEnumTypes().get(2);
    }

    private static final SpanLayer[] VALUES = values();

    public static SpanLayer valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private SpanLayer(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:segment.v3.SpanLayer)
  }

  /**
   * <pre>
   * In most cases, detect point should be `server` or `client`.
   * Even in service mesh, this means `server`/`client` side sidecar
   * `proxy` is reserved only.
   * </pre>
   *
   * Protobuf enum {@code segment.v3.DetectPoint}
   */
  public enum DetectPoint
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>client = 0;</code>
     */
    client(0),
    /**
     * <code>server = 1;</code>
     */
    server(1),
    /**
     * <code>proxy = 2;</code>
     */
    proxy(2),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>client = 0;</code>
     */
    public static final int client_VALUE = 0;
    /**
     * <code>server = 1;</code>
     */
    public static final int server_VALUE = 1;
    /**
     * <code>proxy = 2;</code>
     */
    public static final int proxy_VALUE = 2;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static DetectPoint valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static DetectPoint forNumber(int value) {
      switch (value) {
        case 0: return client;
        case 1: return server;
        case 2: return proxy;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<DetectPoint>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        DetectPoint> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<DetectPoint>() {
            public DetectPoint findValueByNumber(int number) {
              return DetectPoint.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return segment.v3.Segment.getDescriptor().getEnumTypes().get(3);
    }

    private static final DetectPoint[] VALUES = values();

    public static DetectPoint valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private DetectPoint(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:segment.v3.DetectPoint)
  }

  public interface SegmentObjectOrBuilder extends
      // @@protoc_insertion_point(interface_extends:segment.v3.SegmentObject)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * A string id represents the whole trace.
     * </pre>
     *
     * <code>string traceId = 1;</code>
     * @return The traceId.
     */
    java.lang.String getTraceId();
    /**
     * <pre>
     * A string id represents the whole trace.
     * </pre>
     *
     * <code>string traceId = 1;</code>
     * @return The bytes for traceId.
     */
    com.google.protobuf.ByteString
        getTraceIdBytes();

    /**
     * <pre>
     * A unique id represents this segment. Other segments could use this id to reference as a child segment.
     * </pre>
     *
     * <code>string traceSegmentId = 2;</code>
     * @return The traceSegmentId.
     */
    java.lang.String getTraceSegmentId();
    /**
     * <pre>
     * A unique id represents this segment. Other segments could use this id to reference as a child segment.
     * </pre>
     *
     * <code>string traceSegmentId = 2;</code>
     * @return The bytes for traceSegmentId.
     */
    com.google.protobuf.ByteString
        getTraceSegmentIdBytes();

    /**
     * <pre>
     * Span collections included in this segment.
     * </pre>
     *
     * <code>repeated .segment.v3.SpanObject spans = 3;</code>
     */
    java.util.List<segment.v3.Segment.SpanObject> 
        getSpansList();
    /**
     * <pre>
     * Span collections included in this segment.
     * </pre>
     *
     * <code>repeated .segment.v3.SpanObject spans = 3;</code>
     */
    segment.v3.Segment.SpanObject getSpans(int index);
    /**
     * <pre>
     * Span collections included in this segment.
     * </pre>
     *
     * <code>repeated .segment.v3.SpanObject spans = 3;</code>
     */
    int getSpansCount();
    /**
     * <pre>
     * Span collections included in this segment.
     * </pre>
     *
     * <code>repeated .segment.v3.SpanObject spans = 3;</code>
     */
    java.util.List<? extends segment.v3.Segment.SpanObjectOrBuilder> 
        getSpansOrBuilderList();
    /**
     * <pre>
     * Span collections included in this segment.
     * </pre>
     *
     * <code>repeated .segment.v3.SpanObject spans = 3;</code>
     */
    segment.v3.Segment.SpanObjectOrBuilder getSpansOrBuilder(
        int index);

    /**
     * <pre>
     * **Service**. Represents a set/group of workloads which provide the same behaviours for incoming requests.
     * The logic name represents the service. This would show as a separate node in the topology.
     * The metrics analyzed from the spans, would be aggregated for this entity as the service level.
     * </pre>
     *
     * <code>string service = 4;</code>
     * @return The service.
     */
    java.lang.String getService();
    /**
     * <pre>
     * **Service**. Represents a set/group of workloads which provide the same behaviours for incoming requests.
     * The logic name represents the service. This would show as a separate node in the topology.
     * The metrics analyzed from the spans, would be aggregated for this entity as the service level.
     * </pre>
     *
     * <code>string service = 4;</code>
     * @return The bytes for service.
     */
    com.google.protobuf.ByteString
        getServiceBytes();

    /**
     * <pre>
     * **Service Instance**. Each individual workload in the Service group is known as an instance. Like `pods` in Kubernetes, it
     * doesn't need to be a single OS process, however, if you are using instrument agents, an instance is actually a real OS process.
     * The logic name represents the service instance. This would show as a separate node in the instance relationship.
     * The metrics analyzed from the spans, would be aggregated for this entity as the service instance level.
     * </pre>
     *
     * <code>string serviceInstance = 5;</code>
     * @return The serviceInstance.
     */
    java.lang.String getServiceInstance();
    /**
     * <pre>
     * **Service Instance**. Each individual workload in the Service group is known as an instance. Like `pods` in Kubernetes, it
     * doesn't need to be a single OS process, however, if you are using instrument agents, an instance is actually a real OS process.
     * The logic name represents the service instance. This would show as a separate node in the instance relationship.
     * The metrics analyzed from the spans, would be aggregated for this entity as the service instance level.
     * </pre>
     *
     * <code>string serviceInstance = 5;</code>
     * @return The bytes for serviceInstance.
     */
    com.google.protobuf.ByteString
        getServiceInstanceBytes();

    /**
     * <pre>
     * Whether the segment includes all tracked spans.
     * In the production environment tracked, some tasks could include too many spans for one request context, such as a batch update for a cache, or an async job.
     * The agent/SDK could optimize or ignore some tracked spans for better performance.
     * In this case, the value should be flagged as TRUE.
     * </pre>
     *
     * <code>bool isSizeLimited = 6;</code>
     * @return The isSizeLimited.
     */
    boolean getIsSizeLimited();
  }
  /**
   * <pre>
   * The segment is a collection of spans. It includes all collected spans in a simple one request context, such as a HTTP request process.
   * We recommend the agent/SDK report all tracked data of one request once for all, such as,
   * typically, such as in Java, one segment represent all tracked operations(spans) of one request context in the same thread.
   * At the same time, in some language there is not a clear concept like golang, it could represent all tracked operations of one request context.
   * </pre>
   *
   * Protobuf type {@code segment.v3.SegmentObject}
   */
  public static final class SegmentObject extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:segment.v3.SegmentObject)
      SegmentObjectOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SegmentObject.newBuilder() to construct.
    private SegmentObject(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SegmentObject() {
      traceId_ = "";
      traceSegmentId_ = "";
      spans_ = java.util.Collections.emptyList();
      service_ = "";
      serviceInstance_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new SegmentObject();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private SegmentObject(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              traceId_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              traceSegmentId_ = s;
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                spans_ = new java.util.ArrayList<segment.v3.Segment.SpanObject>();
                mutable_bitField0_ |= 0x00000001;
              }
              spans_.add(
                  input.readMessage(segment.v3.Segment.SpanObject.parser(), extensionRegistry));
              break;
            }
            case 34: {
              java.lang.String s = input.readStringRequireUtf8();

              service_ = s;
              break;
            }
            case 42: {
              java.lang.String s = input.readStringRequireUtf8();

              serviceInstance_ = s;
              break;
            }
            case 48: {

              isSizeLimited_ = input.readBool();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          spans_ = java.util.Collections.unmodifiableList(spans_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return segment.v3.Segment.internal_static_segment_v3_SegmentObject_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return segment.v3.Segment.internal_static_segment_v3_SegmentObject_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              segment.v3.Segment.SegmentObject.class, segment.v3.Segment.SegmentObject.Builder.class);
    }

    public static final int TRACEID_FIELD_NUMBER = 1;
    private volatile java.lang.Object traceId_;
    /**
     * <pre>
     * A string id represents the whole trace.
     * </pre>
     *
     * <code>string traceId = 1;</code>
     * @return The traceId.
     */
    @java.lang.Override
    public java.lang.String getTraceId() {
      java.lang.Object ref = traceId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        traceId_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * A string id represents the whole trace.
     * </pre>
     *
     * <code>string traceId = 1;</code>
     * @return The bytes for traceId.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getTraceIdBytes() {
      java.lang.Object ref = traceId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        traceId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TRACESEGMENTID_FIELD_NUMBER = 2;
    private volatile java.lang.Object traceSegmentId_;
    /**
     * <pre>
     * A unique id represents this segment. Other segments could use this id to reference as a child segment.
     * </pre>
     *
     * <code>string traceSegmentId = 2;</code>
     * @return The traceSegmentId.
     */
    @java.lang.Override
    public java.lang.String getTraceSegmentId() {
      java.lang.Object ref = traceSegmentId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        traceSegmentId_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * A unique id represents this segment. Other segments could use this id to reference as a child segment.
     * </pre>
     *
     * <code>string traceSegmentId = 2;</code>
     * @return The bytes for traceSegmentId.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getTraceSegmentIdBytes() {
      java.lang.Object ref = traceSegmentId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        traceSegmentId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SPANS_FIELD_NUMBER = 3;
    private java.util.List<segment.v3.Segment.SpanObject> spans_;
    /**
     * <pre>
     * Span collections included in this segment.
     * </pre>
     *
     * <code>repeated .segment.v3.SpanObject spans = 3;</code>
     */
    @java.lang.Override
    public java.util.List<segment.v3.Segment.SpanObject> getSpansList() {
      return spans_;
    }
    /**
     * <pre>
     * Span collections included in this segment.
     * </pre>
     *
     * <code>repeated .segment.v3.SpanObject spans = 3;</code>
     */
    @java.lang.Override
    public java.util.List<? extends segment.v3.Segment.SpanObjectOrBuilder> 
        getSpansOrBuilderList() {
      return spans_;
    }
    /**
     * <pre>
     * Span collections included in this segment.
     * </pre>
     *
     * <code>repeated .segment.v3.SpanObject spans = 3;</code>
     */
    @java.lang.Override
    public int getSpansCount() {
      return spans_.size();
    }
    /**
     * <pre>
     * Span collections included in this segment.
     * </pre>
     *
     * <code>repeated .segment.v3.SpanObject spans = 3;</code>
     */
    @java.lang.Override
    public segment.v3.Segment.SpanObject getSpans(int index) {
      return spans_.get(index);
    }
    /**
     * <pre>
     * Span collections included in this segment.
     * </pre>
     *
     * <code>repeated .segment.v3.SpanObject spans = 3;</code>
     */
    @java.lang.Override
    public segment.v3.Segment.SpanObjectOrBuilder getSpansOrBuilder(
        int index) {
      return spans_.get(index);
    }

    public static final int SERVICE_FIELD_NUMBER = 4;
    private volatile java.lang.Object service_;
    /**
     * <pre>
     * **Service**. Represents a set/group of workloads which provide the same behaviours for incoming requests.
     * The logic name represents the service. This would show as a separate node in the topology.
     * The metrics analyzed from the spans, would be aggregated for this entity as the service level.
     * </pre>
     *
     * <code>string service = 4;</code>
     * @return The service.
     */
    @java.lang.Override
    public java.lang.String getService() {
      java.lang.Object ref = service_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        service_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * **Service**. Represents a set/group of workloads which provide the same behaviours for incoming requests.
     * The logic name represents the service. This would show as a separate node in the topology.
     * The metrics analyzed from the spans, would be aggregated for this entity as the service level.
     * </pre>
     *
     * <code>string service = 4;</code>
     * @return The bytes for service.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getServiceBytes() {
      java.lang.Object ref = service_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        service_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SERVICEINSTANCE_FIELD_NUMBER = 5;
    private volatile java.lang.Object serviceInstance_;
    /**
     * <pre>
     * **Service Instance**. Each individual workload in the Service group is known as an instance. Like `pods` in Kubernetes, it
     * doesn't need to be a single OS process, however, if you are using instrument agents, an instance is actually a real OS process.
     * The logic name represents the service instance. This would show as a separate node in the instance relationship.
     * The metrics analyzed from the spans, would be aggregated for this entity as the service instance level.
     * </pre>
     *
     * <code>string serviceInstance = 5;</code>
     * @return The serviceInstance.
     */
    @java.lang.Override
    public java.lang.String getServiceInstance() {
      java.lang.Object ref = serviceInstance_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        serviceInstance_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * **Service Instance**. Each individual workload in the Service group is known as an instance. Like `pods` in Kubernetes, it
     * doesn't need to be a single OS process, however, if you are using instrument agents, an instance is actually a real OS process.
     * The logic name represents the service instance. This would show as a separate node in the instance relationship.
     * The metrics analyzed from the spans, would be aggregated for this entity as the service instance level.
     * </pre>
     *
     * <code>string serviceInstance = 5;</code>
     * @return The bytes for serviceInstance.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getServiceInstanceBytes() {
      java.lang.Object ref = serviceInstance_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        serviceInstance_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ISSIZELIMITED_FIELD_NUMBER = 6;
    private boolean isSizeLimited_;
    /**
     * <pre>
     * Whether the segment includes all tracked spans.
     * In the production environment tracked, some tasks could include too many spans for one request context, such as a batch update for a cache, or an async job.
     * The agent/SDK could optimize or ignore some tracked spans for better performance.
     * In this case, the value should be flagged as TRUE.
     * </pre>
     *
     * <code>bool isSizeLimited = 6;</code>
     * @return The isSizeLimited.
     */
    @java.lang.Override
    public boolean getIsSizeLimited() {
      return isSizeLimited_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(traceId_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, traceId_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(traceSegmentId_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, traceSegmentId_);
      }
      for (int i = 0; i < spans_.size(); i++) {
        output.writeMessage(3, spans_.get(i));
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(service_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, service_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(serviceInstance_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 5, serviceInstance_);
      }
      if (isSizeLimited_ != false) {
        output.writeBool(6, isSizeLimited_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(traceId_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, traceId_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(traceSegmentId_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, traceSegmentId_);
      }
      for (int i = 0; i < spans_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, spans_.get(i));
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(service_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, service_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(serviceInstance_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, serviceInstance_);
      }
      if (isSizeLimited_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(6, isSizeLimited_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof segment.v3.Segment.SegmentObject)) {
        return super.equals(obj);
      }
      segment.v3.Segment.SegmentObject other = (segment.v3.Segment.SegmentObject) obj;

      if (!getTraceId()
          .equals(other.getTraceId())) return false;
      if (!getTraceSegmentId()
          .equals(other.getTraceSegmentId())) return false;
      if (!getSpansList()
          .equals(other.getSpansList())) return false;
      if (!getService()
          .equals(other.getService())) return false;
      if (!getServiceInstance()
          .equals(other.getServiceInstance())) return false;
      if (getIsSizeLimited()
          != other.getIsSizeLimited()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TRACEID_FIELD_NUMBER;
      hash = (53 * hash) + getTraceId().hashCode();
      hash = (37 * hash) + TRACESEGMENTID_FIELD_NUMBER;
      hash = (53 * hash) + getTraceSegmentId().hashCode();
      if (getSpansCount() > 0) {
        hash = (37 * hash) + SPANS_FIELD_NUMBER;
        hash = (53 * hash) + getSpansList().hashCode();
      }
      hash = (37 * hash) + SERVICE_FIELD_NUMBER;
      hash = (53 * hash) + getService().hashCode();
      hash = (37 * hash) + SERVICEINSTANCE_FIELD_NUMBER;
      hash = (53 * hash) + getServiceInstance().hashCode();
      hash = (37 * hash) + ISSIZELIMITED_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getIsSizeLimited());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static segment.v3.Segment.SegmentObject parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static segment.v3.Segment.SegmentObject parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static segment.v3.Segment.SegmentObject parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static segment.v3.Segment.SegmentObject parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static segment.v3.Segment.SegmentObject parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static segment.v3.Segment.SegmentObject parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static segment.v3.Segment.SegmentObject parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static segment.v3.Segment.SegmentObject parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static segment.v3.Segment.SegmentObject parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static segment.v3.Segment.SegmentObject parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static segment.v3.Segment.SegmentObject parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static segment.v3.Segment.SegmentObject parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(segment.v3.Segment.SegmentObject prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * The segment is a collection of spans. It includes all collected spans in a simple one request context, such as a HTTP request process.
     * We recommend the agent/SDK report all tracked data of one request once for all, such as,
     * typically, such as in Java, one segment represent all tracked operations(spans) of one request context in the same thread.
     * At the same time, in some language there is not a clear concept like golang, it could represent all tracked operations of one request context.
     * </pre>
     *
     * Protobuf type {@code segment.v3.SegmentObject}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:segment.v3.SegmentObject)
        segment.v3.Segment.SegmentObjectOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return segment.v3.Segment.internal_static_segment_v3_SegmentObject_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return segment.v3.Segment.internal_static_segment_v3_SegmentObject_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                segment.v3.Segment.SegmentObject.class, segment.v3.Segment.SegmentObject.Builder.class);
      }

      // Construct using segment.v3.Segment.SegmentObject.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getSpansFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        traceId_ = "";

        traceSegmentId_ = "";

        if (spansBuilder_ == null) {
          spans_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          spansBuilder_.clear();
        }
        service_ = "";

        serviceInstance_ = "";

        isSizeLimited_ = false;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return segment.v3.Segment.internal_static_segment_v3_SegmentObject_descriptor;
      }

      @java.lang.Override
      public segment.v3.Segment.SegmentObject getDefaultInstanceForType() {
        return segment.v3.Segment.SegmentObject.getDefaultInstance();
      }

      @java.lang.Override
      public segment.v3.Segment.SegmentObject build() {
        segment.v3.Segment.SegmentObject result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public segment.v3.Segment.SegmentObject buildPartial() {
        segment.v3.Segment.SegmentObject result = new segment.v3.Segment.SegmentObject(this);
        int from_bitField0_ = bitField0_;
        result.traceId_ = traceId_;
        result.traceSegmentId_ = traceSegmentId_;
        if (spansBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            spans_ = java.util.Collections.unmodifiableList(spans_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.spans_ = spans_;
        } else {
          result.spans_ = spansBuilder_.build();
        }
        result.service_ = service_;
        result.serviceInstance_ = serviceInstance_;
        result.isSizeLimited_ = isSizeLimited_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof segment.v3.Segment.SegmentObject) {
          return mergeFrom((segment.v3.Segment.SegmentObject)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(segment.v3.Segment.SegmentObject other) {
        if (other == segment.v3.Segment.SegmentObject.getDefaultInstance()) return this;
        if (!other.getTraceId().isEmpty()) {
          traceId_ = other.traceId_;
          onChanged();
        }
        if (!other.getTraceSegmentId().isEmpty()) {
          traceSegmentId_ = other.traceSegmentId_;
          onChanged();
        }
        if (spansBuilder_ == null) {
          if (!other.spans_.isEmpty()) {
            if (spans_.isEmpty()) {
              spans_ = other.spans_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureSpansIsMutable();
              spans_.addAll(other.spans_);
            }
            onChanged();
          }
        } else {
          if (!other.spans_.isEmpty()) {
            if (spansBuilder_.isEmpty()) {
              spansBuilder_.dispose();
              spansBuilder_ = null;
              spans_ = other.spans_;
              bitField0_ = (bitField0_ & ~0x00000001);
              spansBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getSpansFieldBuilder() : null;
            } else {
              spansBuilder_.addAllMessages(other.spans_);
            }
          }
        }
        if (!other.getService().isEmpty()) {
          service_ = other.service_;
          onChanged();
        }
        if (!other.getServiceInstance().isEmpty()) {
          serviceInstance_ = other.serviceInstance_;
          onChanged();
        }
        if (other.getIsSizeLimited() != false) {
          setIsSizeLimited(other.getIsSizeLimited());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        segment.v3.Segment.SegmentObject parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (segment.v3.Segment.SegmentObject) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object traceId_ = "";
      /**
       * <pre>
       * A string id represents the whole trace.
       * </pre>
       *
       * <code>string traceId = 1;</code>
       * @return The traceId.
       */
      public java.lang.String getTraceId() {
        java.lang.Object ref = traceId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          traceId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * A string id represents the whole trace.
       * </pre>
       *
       * <code>string traceId = 1;</code>
       * @return The bytes for traceId.
       */
      public com.google.protobuf.ByteString
          getTraceIdBytes() {
        java.lang.Object ref = traceId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          traceId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * A string id represents the whole trace.
       * </pre>
       *
       * <code>string traceId = 1;</code>
       * @param value The traceId to set.
       * @return This builder for chaining.
       */
      public Builder setTraceId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        traceId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A string id represents the whole trace.
       * </pre>
       *
       * <code>string traceId = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearTraceId() {
        
        traceId_ = getDefaultInstance().getTraceId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A string id represents the whole trace.
       * </pre>
       *
       * <code>string traceId = 1;</code>
       * @param value The bytes for traceId to set.
       * @return This builder for chaining.
       */
      public Builder setTraceIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        traceId_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object traceSegmentId_ = "";
      /**
       * <pre>
       * A unique id represents this segment. Other segments could use this id to reference as a child segment.
       * </pre>
       *
       * <code>string traceSegmentId = 2;</code>
       * @return The traceSegmentId.
       */
      public java.lang.String getTraceSegmentId() {
        java.lang.Object ref = traceSegmentId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          traceSegmentId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * A unique id represents this segment. Other segments could use this id to reference as a child segment.
       * </pre>
       *
       * <code>string traceSegmentId = 2;</code>
       * @return The bytes for traceSegmentId.
       */
      public com.google.protobuf.ByteString
          getTraceSegmentIdBytes() {
        java.lang.Object ref = traceSegmentId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          traceSegmentId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * A unique id represents this segment. Other segments could use this id to reference as a child segment.
       * </pre>
       *
       * <code>string traceSegmentId = 2;</code>
       * @param value The traceSegmentId to set.
       * @return This builder for chaining.
       */
      public Builder setTraceSegmentId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        traceSegmentId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A unique id represents this segment. Other segments could use this id to reference as a child segment.
       * </pre>
       *
       * <code>string traceSegmentId = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearTraceSegmentId() {
        
        traceSegmentId_ = getDefaultInstance().getTraceSegmentId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A unique id represents this segment. Other segments could use this id to reference as a child segment.
       * </pre>
       *
       * <code>string traceSegmentId = 2;</code>
       * @param value The bytes for traceSegmentId to set.
       * @return This builder for chaining.
       */
      public Builder setTraceSegmentIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        traceSegmentId_ = value;
        onChanged();
        return this;
      }

      private java.util.List<segment.v3.Segment.SpanObject> spans_ =
        java.util.Collections.emptyList();
      private void ensureSpansIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          spans_ = new java.util.ArrayList<segment.v3.Segment.SpanObject>(spans_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          segment.v3.Segment.SpanObject, segment.v3.Segment.SpanObject.Builder, segment.v3.Segment.SpanObjectOrBuilder> spansBuilder_;

      /**
       * <pre>
       * Span collections included in this segment.
       * </pre>
       *
       * <code>repeated .segment.v3.SpanObject spans = 3;</code>
       */
      public java.util.List<segment.v3.Segment.SpanObject> getSpansList() {
        if (spansBuilder_ == null) {
          return java.util.Collections.unmodifiableList(spans_);
        } else {
          return spansBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * Span collections included in this segment.
       * </pre>
       *
       * <code>repeated .segment.v3.SpanObject spans = 3;</code>
       */
      public int getSpansCount() {
        if (spansBuilder_ == null) {
          return spans_.size();
        } else {
          return spansBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * Span collections included in this segment.
       * </pre>
       *
       * <code>repeated .segment.v3.SpanObject spans = 3;</code>
       */
      public segment.v3.Segment.SpanObject getSpans(int index) {
        if (spansBuilder_ == null) {
          return spans_.get(index);
        } else {
          return spansBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * Span collections included in this segment.
       * </pre>
       *
       * <code>repeated .segment.v3.SpanObject spans = 3;</code>
       */
      public Builder setSpans(
          int index, segment.v3.Segment.SpanObject value) {
        if (spansBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSpansIsMutable();
          spans_.set(index, value);
          onChanged();
        } else {
          spansBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Span collections included in this segment.
       * </pre>
       *
       * <code>repeated .segment.v3.SpanObject spans = 3;</code>
       */
      public Builder setSpans(
          int index, segment.v3.Segment.SpanObject.Builder builderForValue) {
        if (spansBuilder_ == null) {
          ensureSpansIsMutable();
          spans_.set(index, builderForValue.build());
          onChanged();
        } else {
          spansBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Span collections included in this segment.
       * </pre>
       *
       * <code>repeated .segment.v3.SpanObject spans = 3;</code>
       */
      public Builder addSpans(segment.v3.Segment.SpanObject value) {
        if (spansBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSpansIsMutable();
          spans_.add(value);
          onChanged();
        } else {
          spansBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * Span collections included in this segment.
       * </pre>
       *
       * <code>repeated .segment.v3.SpanObject spans = 3;</code>
       */
      public Builder addSpans(
          int index, segment.v3.Segment.SpanObject value) {
        if (spansBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSpansIsMutable();
          spans_.add(index, value);
          onChanged();
        } else {
          spansBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Span collections included in this segment.
       * </pre>
       *
       * <code>repeated .segment.v3.SpanObject spans = 3;</code>
       */
      public Builder addSpans(
          segment.v3.Segment.SpanObject.Builder builderForValue) {
        if (spansBuilder_ == null) {
          ensureSpansIsMutable();
          spans_.add(builderForValue.build());
          onChanged();
        } else {
          spansBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Span collections included in this segment.
       * </pre>
       *
       * <code>repeated .segment.v3.SpanObject spans = 3;</code>
       */
      public Builder addSpans(
          int index, segment.v3.Segment.SpanObject.Builder builderForValue) {
        if (spansBuilder_ == null) {
          ensureSpansIsMutable();
          spans_.add(index, builderForValue.build());
          onChanged();
        } else {
          spansBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Span collections included in this segment.
       * </pre>
       *
       * <code>repeated .segment.v3.SpanObject spans = 3;</code>
       */
      public Builder addAllSpans(
          java.lang.Iterable<? extends segment.v3.Segment.SpanObject> values) {
        if (spansBuilder_ == null) {
          ensureSpansIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, spans_);
          onChanged();
        } else {
          spansBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * Span collections included in this segment.
       * </pre>
       *
       * <code>repeated .segment.v3.SpanObject spans = 3;</code>
       */
      public Builder clearSpans() {
        if (spansBuilder_ == null) {
          spans_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          spansBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Span collections included in this segment.
       * </pre>
       *
       * <code>repeated .segment.v3.SpanObject spans = 3;</code>
       */
      public Builder removeSpans(int index) {
        if (spansBuilder_ == null) {
          ensureSpansIsMutable();
          spans_.remove(index);
          onChanged();
        } else {
          spansBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * Span collections included in this segment.
       * </pre>
       *
       * <code>repeated .segment.v3.SpanObject spans = 3;</code>
       */
      public segment.v3.Segment.SpanObject.Builder getSpansBuilder(
          int index) {
        return getSpansFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * Span collections included in this segment.
       * </pre>
       *
       * <code>repeated .segment.v3.SpanObject spans = 3;</code>
       */
      public segment.v3.Segment.SpanObjectOrBuilder getSpansOrBuilder(
          int index) {
        if (spansBuilder_ == null) {
          return spans_.get(index);  } else {
          return spansBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * Span collections included in this segment.
       * </pre>
       *
       * <code>repeated .segment.v3.SpanObject spans = 3;</code>
       */
      public java.util.List<? extends segment.v3.Segment.SpanObjectOrBuilder> 
           getSpansOrBuilderList() {
        if (spansBuilder_ != null) {
          return spansBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(spans_);
        }
      }
      /**
       * <pre>
       * Span collections included in this segment.
       * </pre>
       *
       * <code>repeated .segment.v3.SpanObject spans = 3;</code>
       */
      public segment.v3.Segment.SpanObject.Builder addSpansBuilder() {
        return getSpansFieldBuilder().addBuilder(
            segment.v3.Segment.SpanObject.getDefaultInstance());
      }
      /**
       * <pre>
       * Span collections included in this segment.
       * </pre>
       *
       * <code>repeated .segment.v3.SpanObject spans = 3;</code>
       */
      public segment.v3.Segment.SpanObject.Builder addSpansBuilder(
          int index) {
        return getSpansFieldBuilder().addBuilder(
            index, segment.v3.Segment.SpanObject.getDefaultInstance());
      }
      /**
       * <pre>
       * Span collections included in this segment.
       * </pre>
       *
       * <code>repeated .segment.v3.SpanObject spans = 3;</code>
       */
      public java.util.List<segment.v3.Segment.SpanObject.Builder> 
           getSpansBuilderList() {
        return getSpansFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          segment.v3.Segment.SpanObject, segment.v3.Segment.SpanObject.Builder, segment.v3.Segment.SpanObjectOrBuilder> 
          getSpansFieldBuilder() {
        if (spansBuilder_ == null) {
          spansBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              segment.v3.Segment.SpanObject, segment.v3.Segment.SpanObject.Builder, segment.v3.Segment.SpanObjectOrBuilder>(
                  spans_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          spans_ = null;
        }
        return spansBuilder_;
      }

      private java.lang.Object service_ = "";
      /**
       * <pre>
       * **Service**. Represents a set/group of workloads which provide the same behaviours for incoming requests.
       * The logic name represents the service. This would show as a separate node in the topology.
       * The metrics analyzed from the spans, would be aggregated for this entity as the service level.
       * </pre>
       *
       * <code>string service = 4;</code>
       * @return The service.
       */
      public java.lang.String getService() {
        java.lang.Object ref = service_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          service_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * **Service**. Represents a set/group of workloads which provide the same behaviours for incoming requests.
       * The logic name represents the service. This would show as a separate node in the topology.
       * The metrics analyzed from the spans, would be aggregated for this entity as the service level.
       * </pre>
       *
       * <code>string service = 4;</code>
       * @return The bytes for service.
       */
      public com.google.protobuf.ByteString
          getServiceBytes() {
        java.lang.Object ref = service_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          service_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * **Service**. Represents a set/group of workloads which provide the same behaviours for incoming requests.
       * The logic name represents the service. This would show as a separate node in the topology.
       * The metrics analyzed from the spans, would be aggregated for this entity as the service level.
       * </pre>
       *
       * <code>string service = 4;</code>
       * @param value The service to set.
       * @return This builder for chaining.
       */
      public Builder setService(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        service_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * **Service**. Represents a set/group of workloads which provide the same behaviours for incoming requests.
       * The logic name represents the service. This would show as a separate node in the topology.
       * The metrics analyzed from the spans, would be aggregated for this entity as the service level.
       * </pre>
       *
       * <code>string service = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearService() {
        
        service_ = getDefaultInstance().getService();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * **Service**. Represents a set/group of workloads which provide the same behaviours for incoming requests.
       * The logic name represents the service. This would show as a separate node in the topology.
       * The metrics analyzed from the spans, would be aggregated for this entity as the service level.
       * </pre>
       *
       * <code>string service = 4;</code>
       * @param value The bytes for service to set.
       * @return This builder for chaining.
       */
      public Builder setServiceBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        service_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object serviceInstance_ = "";
      /**
       * <pre>
       * **Service Instance**. Each individual workload in the Service group is known as an instance. Like `pods` in Kubernetes, it
       * doesn't need to be a single OS process, however, if you are using instrument agents, an instance is actually a real OS process.
       * The logic name represents the service instance. This would show as a separate node in the instance relationship.
       * The metrics analyzed from the spans, would be aggregated for this entity as the service instance level.
       * </pre>
       *
       * <code>string serviceInstance = 5;</code>
       * @return The serviceInstance.
       */
      public java.lang.String getServiceInstance() {
        java.lang.Object ref = serviceInstance_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          serviceInstance_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * **Service Instance**. Each individual workload in the Service group is known as an instance. Like `pods` in Kubernetes, it
       * doesn't need to be a single OS process, however, if you are using instrument agents, an instance is actually a real OS process.
       * The logic name represents the service instance. This would show as a separate node in the instance relationship.
       * The metrics analyzed from the spans, would be aggregated for this entity as the service instance level.
       * </pre>
       *
       * <code>string serviceInstance = 5;</code>
       * @return The bytes for serviceInstance.
       */
      public com.google.protobuf.ByteString
          getServiceInstanceBytes() {
        java.lang.Object ref = serviceInstance_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          serviceInstance_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * **Service Instance**. Each individual workload in the Service group is known as an instance. Like `pods` in Kubernetes, it
       * doesn't need to be a single OS process, however, if you are using instrument agents, an instance is actually a real OS process.
       * The logic name represents the service instance. This would show as a separate node in the instance relationship.
       * The metrics analyzed from the spans, would be aggregated for this entity as the service instance level.
       * </pre>
       *
       * <code>string serviceInstance = 5;</code>
       * @param value The serviceInstance to set.
       * @return This builder for chaining.
       */
      public Builder setServiceInstance(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        serviceInstance_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * **Service Instance**. Each individual workload in the Service group is known as an instance. Like `pods` in Kubernetes, it
       * doesn't need to be a single OS process, however, if you are using instrument agents, an instance is actually a real OS process.
       * The logic name represents the service instance. This would show as a separate node in the instance relationship.
       * The metrics analyzed from the spans, would be aggregated for this entity as the service instance level.
       * </pre>
       *
       * <code>string serviceInstance = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearServiceInstance() {
        
        serviceInstance_ = getDefaultInstance().getServiceInstance();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * **Service Instance**. Each individual workload in the Service group is known as an instance. Like `pods` in Kubernetes, it
       * doesn't need to be a single OS process, however, if you are using instrument agents, an instance is actually a real OS process.
       * The logic name represents the service instance. This would show as a separate node in the instance relationship.
       * The metrics analyzed from the spans, would be aggregated for this entity as the service instance level.
       * </pre>
       *
       * <code>string serviceInstance = 5;</code>
       * @param value The bytes for serviceInstance to set.
       * @return This builder for chaining.
       */
      public Builder setServiceInstanceBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        serviceInstance_ = value;
        onChanged();
        return this;
      }

      private boolean isSizeLimited_ ;
      /**
       * <pre>
       * Whether the segment includes all tracked spans.
       * In the production environment tracked, some tasks could include too many spans for one request context, such as a batch update for a cache, or an async job.
       * The agent/SDK could optimize or ignore some tracked spans for better performance.
       * In this case, the value should be flagged as TRUE.
       * </pre>
       *
       * <code>bool isSizeLimited = 6;</code>
       * @return The isSizeLimited.
       */
      @java.lang.Override
      public boolean getIsSizeLimited() {
        return isSizeLimited_;
      }
      /**
       * <pre>
       * Whether the segment includes all tracked spans.
       * In the production environment tracked, some tasks could include too many spans for one request context, such as a batch update for a cache, or an async job.
       * The agent/SDK could optimize or ignore some tracked spans for better performance.
       * In this case, the value should be flagged as TRUE.
       * </pre>
       *
       * <code>bool isSizeLimited = 6;</code>
       * @param value The isSizeLimited to set.
       * @return This builder for chaining.
       */
      public Builder setIsSizeLimited(boolean value) {
        
        isSizeLimited_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Whether the segment includes all tracked spans.
       * In the production environment tracked, some tasks could include too many spans for one request context, such as a batch update for a cache, or an async job.
       * The agent/SDK could optimize or ignore some tracked spans for better performance.
       * In this case, the value should be flagged as TRUE.
       * </pre>
       *
       * <code>bool isSizeLimited = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearIsSizeLimited() {
        
        isSizeLimited_ = false;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:segment.v3.SegmentObject)
    }

    // @@protoc_insertion_point(class_scope:segment.v3.SegmentObject)
    private static final segment.v3.Segment.SegmentObject DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new segment.v3.Segment.SegmentObject();
    }

    public static segment.v3.Segment.SegmentObject getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SegmentObject>
        PARSER = new com.google.protobuf.AbstractParser<SegmentObject>() {
      @java.lang.Override
      public SegmentObject parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SegmentObject(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SegmentObject> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SegmentObject> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public segment.v3.Segment.SegmentObject getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SegmentReferenceOrBuilder extends
      // @@protoc_insertion_point(interface_extends:segment.v3.SegmentReference)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Represent the reference type. It could be across thread or across process.
     * Across process means there is a downstream RPC call for this.
     * Typically, refType == CrossProcess means SpanObject#spanType = entry.
     * </pre>
     *
     * <code>.segment.v3.RefType refType = 1;</code>
     * @return The enum numeric value on the wire for refType.
     */
    int getRefTypeValue();
    /**
     * <pre>
     * Represent the reference type. It could be across thread or across process.
     * Across process means there is a downstream RPC call for this.
     * Typically, refType == CrossProcess means SpanObject#spanType = entry.
     * </pre>
     *
     * <code>.segment.v3.RefType refType = 1;</code>
     * @return The refType.
     */
    segment.v3.Segment.RefType getRefType();

    /**
     * <pre>
     * A string id represents the whole trace.
     * </pre>
     *
     * <code>string traceId = 2;</code>
     * @return The traceId.
     */
    java.lang.String getTraceId();
    /**
     * <pre>
     * A string id represents the whole trace.
     * </pre>
     *
     * <code>string traceId = 2;</code>
     * @return The bytes for traceId.
     */
    com.google.protobuf.ByteString
        getTraceIdBytes();

    /**
     * <pre>
     * Another segment id as the parent.
     * </pre>
     *
     * <code>string parentTraceSegmentId = 3;</code>
     * @return The parentTraceSegmentId.
     */
    java.lang.String getParentTraceSegmentId();
    /**
     * <pre>
     * Another segment id as the parent.
     * </pre>
     *
     * <code>string parentTraceSegmentId = 3;</code>
     * @return The bytes for parentTraceSegmentId.
     */
    com.google.protobuf.ByteString
        getParentTraceSegmentIdBytes();

    /**
     * <pre>
     * The span id in the parent trace segment.
     * </pre>
     *
     * <code>int32 parentSpanId = 4;</code>
     * @return The parentSpanId.
     */
    int getParentSpanId();

    /**
     * <pre>
     * The service logic name of the parent segment.
     * If refType == CrossThread, this name is as same as the trace segment.
     * </pre>
     *
     * <code>string parentService = 5;</code>
     * @return The parentService.
     */
    java.lang.String getParentService();
    /**
     * <pre>
     * The service logic name of the parent segment.
     * If refType == CrossThread, this name is as same as the trace segment.
     * </pre>
     *
     * <code>string parentService = 5;</code>
     * @return The bytes for parentService.
     */
    com.google.protobuf.ByteString
        getParentServiceBytes();

    /**
     * <pre>
     * The service logic name instance of the parent segment.
     * If refType == CrossThread, this name is as same as the trace segment.
     * </pre>
     *
     * <code>string parentServiceInstance = 6;</code>
     * @return The parentServiceInstance.
     */
    java.lang.String getParentServiceInstance();
    /**
     * <pre>
     * The service logic name instance of the parent segment.
     * If refType == CrossThread, this name is as same as the trace segment.
     * </pre>
     *
     * <code>string parentServiceInstance = 6;</code>
     * @return The bytes for parentServiceInstance.
     */
    com.google.protobuf.ByteString
        getParentServiceInstanceBytes();

    /**
     * <pre>
     * The endpoint name of the parent segment.
     * **Endpoint**. A path in a service for incoming requests, such as an HTTP URI path or a gRPC service class + method signature.
     * In a trace segment, the endpoint name is the name of first entry span.
     * </pre>
     *
     * <code>string parentEndpoint = 7;</code>
     * @return The parentEndpoint.
     */
    java.lang.String getParentEndpoint();
    /**
     * <pre>
     * The endpoint name of the parent segment.
     * **Endpoint**. A path in a service for incoming requests, such as an HTTP URI path or a gRPC service class + method signature.
     * In a trace segment, the endpoint name is the name of first entry span.
     * </pre>
     *
     * <code>string parentEndpoint = 7;</code>
     * @return The bytes for parentEndpoint.
     */
    com.google.protobuf.ByteString
        getParentEndpointBytes();

    /**
     * <pre>
     * The network address, including ip/hostname and port, which is used in the client side.
     * Such as Client --&gt; use 127.0.11.8:913 -&gt; Server
     * then, in the reference of entry span reported by Server, the value of this field is 127.0.11.8:913.
     * This plays the important role in the SkyWalking STAM(Streaming Topology Analysis Method)
     * For more details, read https://wu-sheng.github.io/STAM/
     * </pre>
     *
     * <code>string networkAddressUsedAtPeer = 8;</code>
     * @return The networkAddressUsedAtPeer.
     */
    java.lang.String getNetworkAddressUsedAtPeer();
    /**
     * <pre>
     * The network address, including ip/hostname and port, which is used in the client side.
     * Such as Client --&gt; use 127.0.11.8:913 -&gt; Server
     * then, in the reference of entry span reported by Server, the value of this field is 127.0.11.8:913.
     * This plays the important role in the SkyWalking STAM(Streaming Topology Analysis Method)
     * For more details, read https://wu-sheng.github.io/STAM/
     * </pre>
     *
     * <code>string networkAddressUsedAtPeer = 8;</code>
     * @return The bytes for networkAddressUsedAtPeer.
     */
    com.google.protobuf.ByteString
        getNetworkAddressUsedAtPeerBytes();
  }
  /**
   * <pre>
   * Segment reference represents the link between two existing segment.
   * </pre>
   *
   * Protobuf type {@code segment.v3.SegmentReference}
   */
  public static final class SegmentReference extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:segment.v3.SegmentReference)
      SegmentReferenceOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SegmentReference.newBuilder() to construct.
    private SegmentReference(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SegmentReference() {
      refType_ = 0;
      traceId_ = "";
      parentTraceSegmentId_ = "";
      parentService_ = "";
      parentServiceInstance_ = "";
      parentEndpoint_ = "";
      networkAddressUsedAtPeer_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new SegmentReference();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private SegmentReference(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              int rawValue = input.readEnum();

              refType_ = rawValue;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              traceId_ = s;
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              parentTraceSegmentId_ = s;
              break;
            }
            case 32: {

              parentSpanId_ = input.readInt32();
              break;
            }
            case 42: {
              java.lang.String s = input.readStringRequireUtf8();

              parentService_ = s;
              break;
            }
            case 50: {
              java.lang.String s = input.readStringRequireUtf8();

              parentServiceInstance_ = s;
              break;
            }
            case 58: {
              java.lang.String s = input.readStringRequireUtf8();

              parentEndpoint_ = s;
              break;
            }
            case 66: {
              java.lang.String s = input.readStringRequireUtf8();

              networkAddressUsedAtPeer_ = s;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return segment.v3.Segment.internal_static_segment_v3_SegmentReference_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return segment.v3.Segment.internal_static_segment_v3_SegmentReference_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              segment.v3.Segment.SegmentReference.class, segment.v3.Segment.SegmentReference.Builder.class);
    }

    public static final int REFTYPE_FIELD_NUMBER = 1;
    private int refType_;
    /**
     * <pre>
     * Represent the reference type. It could be across thread or across process.
     * Across process means there is a downstream RPC call for this.
     * Typically, refType == CrossProcess means SpanObject#spanType = entry.
     * </pre>
     *
     * <code>.segment.v3.RefType refType = 1;</code>
     * @return The enum numeric value on the wire for refType.
     */
    @java.lang.Override public int getRefTypeValue() {
      return refType_;
    }
    /**
     * <pre>
     * Represent the reference type. It could be across thread or across process.
     * Across process means there is a downstream RPC call for this.
     * Typically, refType == CrossProcess means SpanObject#spanType = entry.
     * </pre>
     *
     * <code>.segment.v3.RefType refType = 1;</code>
     * @return The refType.
     */
    @java.lang.Override public segment.v3.Segment.RefType getRefType() {
      @SuppressWarnings("deprecation")
      segment.v3.Segment.RefType result = segment.v3.Segment.RefType.valueOf(refType_);
      return result == null ? segment.v3.Segment.RefType.UNRECOGNIZED : result;
    }

    public static final int TRACEID_FIELD_NUMBER = 2;
    private volatile java.lang.Object traceId_;
    /**
     * <pre>
     * A string id represents the whole trace.
     * </pre>
     *
     * <code>string traceId = 2;</code>
     * @return The traceId.
     */
    @java.lang.Override
    public java.lang.String getTraceId() {
      java.lang.Object ref = traceId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        traceId_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * A string id represents the whole trace.
     * </pre>
     *
     * <code>string traceId = 2;</code>
     * @return The bytes for traceId.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getTraceIdBytes() {
      java.lang.Object ref = traceId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        traceId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PARENTTRACESEGMENTID_FIELD_NUMBER = 3;
    private volatile java.lang.Object parentTraceSegmentId_;
    /**
     * <pre>
     * Another segment id as the parent.
     * </pre>
     *
     * <code>string parentTraceSegmentId = 3;</code>
     * @return The parentTraceSegmentId.
     */
    @java.lang.Override
    public java.lang.String getParentTraceSegmentId() {
      java.lang.Object ref = parentTraceSegmentId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        parentTraceSegmentId_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Another segment id as the parent.
     * </pre>
     *
     * <code>string parentTraceSegmentId = 3;</code>
     * @return The bytes for parentTraceSegmentId.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getParentTraceSegmentIdBytes() {
      java.lang.Object ref = parentTraceSegmentId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        parentTraceSegmentId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PARENTSPANID_FIELD_NUMBER = 4;
    private int parentSpanId_;
    /**
     * <pre>
     * The span id in the parent trace segment.
     * </pre>
     *
     * <code>int32 parentSpanId = 4;</code>
     * @return The parentSpanId.
     */
    @java.lang.Override
    public int getParentSpanId() {
      return parentSpanId_;
    }

    public static final int PARENTSERVICE_FIELD_NUMBER = 5;
    private volatile java.lang.Object parentService_;
    /**
     * <pre>
     * The service logic name of the parent segment.
     * If refType == CrossThread, this name is as same as the trace segment.
     * </pre>
     *
     * <code>string parentService = 5;</code>
     * @return The parentService.
     */
    @java.lang.Override
    public java.lang.String getParentService() {
      java.lang.Object ref = parentService_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        parentService_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The service logic name of the parent segment.
     * If refType == CrossThread, this name is as same as the trace segment.
     * </pre>
     *
     * <code>string parentService = 5;</code>
     * @return The bytes for parentService.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getParentServiceBytes() {
      java.lang.Object ref = parentService_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        parentService_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PARENTSERVICEINSTANCE_FIELD_NUMBER = 6;
    private volatile java.lang.Object parentServiceInstance_;
    /**
     * <pre>
     * The service logic name instance of the parent segment.
     * If refType == CrossThread, this name is as same as the trace segment.
     * </pre>
     *
     * <code>string parentServiceInstance = 6;</code>
     * @return The parentServiceInstance.
     */
    @java.lang.Override
    public java.lang.String getParentServiceInstance() {
      java.lang.Object ref = parentServiceInstance_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        parentServiceInstance_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The service logic name instance of the parent segment.
     * If refType == CrossThread, this name is as same as the trace segment.
     * </pre>
     *
     * <code>string parentServiceInstance = 6;</code>
     * @return The bytes for parentServiceInstance.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getParentServiceInstanceBytes() {
      java.lang.Object ref = parentServiceInstance_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        parentServiceInstance_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PARENTENDPOINT_FIELD_NUMBER = 7;
    private volatile java.lang.Object parentEndpoint_;
    /**
     * <pre>
     * The endpoint name of the parent segment.
     * **Endpoint**. A path in a service for incoming requests, such as an HTTP URI path or a gRPC service class + method signature.
     * In a trace segment, the endpoint name is the name of first entry span.
     * </pre>
     *
     * <code>string parentEndpoint = 7;</code>
     * @return The parentEndpoint.
     */
    @java.lang.Override
    public java.lang.String getParentEndpoint() {
      java.lang.Object ref = parentEndpoint_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        parentEndpoint_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The endpoint name of the parent segment.
     * **Endpoint**. A path in a service for incoming requests, such as an HTTP URI path or a gRPC service class + method signature.
     * In a trace segment, the endpoint name is the name of first entry span.
     * </pre>
     *
     * <code>string parentEndpoint = 7;</code>
     * @return The bytes for parentEndpoint.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getParentEndpointBytes() {
      java.lang.Object ref = parentEndpoint_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        parentEndpoint_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int NETWORKADDRESSUSEDATPEER_FIELD_NUMBER = 8;
    private volatile java.lang.Object networkAddressUsedAtPeer_;
    /**
     * <pre>
     * The network address, including ip/hostname and port, which is used in the client side.
     * Such as Client --&gt; use 127.0.11.8:913 -&gt; Server
     * then, in the reference of entry span reported by Server, the value of this field is 127.0.11.8:913.
     * This plays the important role in the SkyWalking STAM(Streaming Topology Analysis Method)
     * For more details, read https://wu-sheng.github.io/STAM/
     * </pre>
     *
     * <code>string networkAddressUsedAtPeer = 8;</code>
     * @return The networkAddressUsedAtPeer.
     */
    @java.lang.Override
    public java.lang.String getNetworkAddressUsedAtPeer() {
      java.lang.Object ref = networkAddressUsedAtPeer_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        networkAddressUsedAtPeer_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The network address, including ip/hostname and port, which is used in the client side.
     * Such as Client --&gt; use 127.0.11.8:913 -&gt; Server
     * then, in the reference of entry span reported by Server, the value of this field is 127.0.11.8:913.
     * This plays the important role in the SkyWalking STAM(Streaming Topology Analysis Method)
     * For more details, read https://wu-sheng.github.io/STAM/
     * </pre>
     *
     * <code>string networkAddressUsedAtPeer = 8;</code>
     * @return The bytes for networkAddressUsedAtPeer.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getNetworkAddressUsedAtPeerBytes() {
      java.lang.Object ref = networkAddressUsedAtPeer_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        networkAddressUsedAtPeer_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (refType_ != segment.v3.Segment.RefType.CrossProcess.getNumber()) {
        output.writeEnum(1, refType_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(traceId_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, traceId_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(parentTraceSegmentId_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, parentTraceSegmentId_);
      }
      if (parentSpanId_ != 0) {
        output.writeInt32(4, parentSpanId_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(parentService_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 5, parentService_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(parentServiceInstance_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 6, parentServiceInstance_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(parentEndpoint_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 7, parentEndpoint_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(networkAddressUsedAtPeer_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 8, networkAddressUsedAtPeer_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (refType_ != segment.v3.Segment.RefType.CrossProcess.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, refType_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(traceId_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, traceId_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(parentTraceSegmentId_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, parentTraceSegmentId_);
      }
      if (parentSpanId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, parentSpanId_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(parentService_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, parentService_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(parentServiceInstance_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, parentServiceInstance_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(parentEndpoint_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(7, parentEndpoint_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(networkAddressUsedAtPeer_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(8, networkAddressUsedAtPeer_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof segment.v3.Segment.SegmentReference)) {
        return super.equals(obj);
      }
      segment.v3.Segment.SegmentReference other = (segment.v3.Segment.SegmentReference) obj;

      if (refType_ != other.refType_) return false;
      if (!getTraceId()
          .equals(other.getTraceId())) return false;
      if (!getParentTraceSegmentId()
          .equals(other.getParentTraceSegmentId())) return false;
      if (getParentSpanId()
          != other.getParentSpanId()) return false;
      if (!getParentService()
          .equals(other.getParentService())) return false;
      if (!getParentServiceInstance()
          .equals(other.getParentServiceInstance())) return false;
      if (!getParentEndpoint()
          .equals(other.getParentEndpoint())) return false;
      if (!getNetworkAddressUsedAtPeer()
          .equals(other.getNetworkAddressUsedAtPeer())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + REFTYPE_FIELD_NUMBER;
      hash = (53 * hash) + refType_;
      hash = (37 * hash) + TRACEID_FIELD_NUMBER;
      hash = (53 * hash) + getTraceId().hashCode();
      hash = (37 * hash) + PARENTTRACESEGMENTID_FIELD_NUMBER;
      hash = (53 * hash) + getParentTraceSegmentId().hashCode();
      hash = (37 * hash) + PARENTSPANID_FIELD_NUMBER;
      hash = (53 * hash) + getParentSpanId();
      hash = (37 * hash) + PARENTSERVICE_FIELD_NUMBER;
      hash = (53 * hash) + getParentService().hashCode();
      hash = (37 * hash) + PARENTSERVICEINSTANCE_FIELD_NUMBER;
      hash = (53 * hash) + getParentServiceInstance().hashCode();
      hash = (37 * hash) + PARENTENDPOINT_FIELD_NUMBER;
      hash = (53 * hash) + getParentEndpoint().hashCode();
      hash = (37 * hash) + NETWORKADDRESSUSEDATPEER_FIELD_NUMBER;
      hash = (53 * hash) + getNetworkAddressUsedAtPeer().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static segment.v3.Segment.SegmentReference parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static segment.v3.Segment.SegmentReference parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static segment.v3.Segment.SegmentReference parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static segment.v3.Segment.SegmentReference parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static segment.v3.Segment.SegmentReference parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static segment.v3.Segment.SegmentReference parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static segment.v3.Segment.SegmentReference parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static segment.v3.Segment.SegmentReference parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static segment.v3.Segment.SegmentReference parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static segment.v3.Segment.SegmentReference parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static segment.v3.Segment.SegmentReference parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static segment.v3.Segment.SegmentReference parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(segment.v3.Segment.SegmentReference prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Segment reference represents the link between two existing segment.
     * </pre>
     *
     * Protobuf type {@code segment.v3.SegmentReference}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:segment.v3.SegmentReference)
        segment.v3.Segment.SegmentReferenceOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return segment.v3.Segment.internal_static_segment_v3_SegmentReference_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return segment.v3.Segment.internal_static_segment_v3_SegmentReference_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                segment.v3.Segment.SegmentReference.class, segment.v3.Segment.SegmentReference.Builder.class);
      }

      // Construct using segment.v3.Segment.SegmentReference.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        refType_ = 0;

        traceId_ = "";

        parentTraceSegmentId_ = "";

        parentSpanId_ = 0;

        parentService_ = "";

        parentServiceInstance_ = "";

        parentEndpoint_ = "";

        networkAddressUsedAtPeer_ = "";

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return segment.v3.Segment.internal_static_segment_v3_SegmentReference_descriptor;
      }

      @java.lang.Override
      public segment.v3.Segment.SegmentReference getDefaultInstanceForType() {
        return segment.v3.Segment.SegmentReference.getDefaultInstance();
      }

      @java.lang.Override
      public segment.v3.Segment.SegmentReference build() {
        segment.v3.Segment.SegmentReference result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public segment.v3.Segment.SegmentReference buildPartial() {
        segment.v3.Segment.SegmentReference result = new segment.v3.Segment.SegmentReference(this);
        result.refType_ = refType_;
        result.traceId_ = traceId_;
        result.parentTraceSegmentId_ = parentTraceSegmentId_;
        result.parentSpanId_ = parentSpanId_;
        result.parentService_ = parentService_;
        result.parentServiceInstance_ = parentServiceInstance_;
        result.parentEndpoint_ = parentEndpoint_;
        result.networkAddressUsedAtPeer_ = networkAddressUsedAtPeer_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof segment.v3.Segment.SegmentReference) {
          return mergeFrom((segment.v3.Segment.SegmentReference)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(segment.v3.Segment.SegmentReference other) {
        if (other == segment.v3.Segment.SegmentReference.getDefaultInstance()) return this;
        if (other.refType_ != 0) {
          setRefTypeValue(other.getRefTypeValue());
        }
        if (!other.getTraceId().isEmpty()) {
          traceId_ = other.traceId_;
          onChanged();
        }
        if (!other.getParentTraceSegmentId().isEmpty()) {
          parentTraceSegmentId_ = other.parentTraceSegmentId_;
          onChanged();
        }
        if (other.getParentSpanId() != 0) {
          setParentSpanId(other.getParentSpanId());
        }
        if (!other.getParentService().isEmpty()) {
          parentService_ = other.parentService_;
          onChanged();
        }
        if (!other.getParentServiceInstance().isEmpty()) {
          parentServiceInstance_ = other.parentServiceInstance_;
          onChanged();
        }
        if (!other.getParentEndpoint().isEmpty()) {
          parentEndpoint_ = other.parentEndpoint_;
          onChanged();
        }
        if (!other.getNetworkAddressUsedAtPeer().isEmpty()) {
          networkAddressUsedAtPeer_ = other.networkAddressUsedAtPeer_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        segment.v3.Segment.SegmentReference parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (segment.v3.Segment.SegmentReference) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int refType_ = 0;
      /**
       * <pre>
       * Represent the reference type. It could be across thread or across process.
       * Across process means there is a downstream RPC call for this.
       * Typically, refType == CrossProcess means SpanObject#spanType = entry.
       * </pre>
       *
       * <code>.segment.v3.RefType refType = 1;</code>
       * @return The enum numeric value on the wire for refType.
       */
      @java.lang.Override public int getRefTypeValue() {
        return refType_;
      }
      /**
       * <pre>
       * Represent the reference type. It could be across thread or across process.
       * Across process means there is a downstream RPC call for this.
       * Typically, refType == CrossProcess means SpanObject#spanType = entry.
       * </pre>
       *
       * <code>.segment.v3.RefType refType = 1;</code>
       * @param value The enum numeric value on the wire for refType to set.
       * @return This builder for chaining.
       */
      public Builder setRefTypeValue(int value) {
        
        refType_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Represent the reference type. It could be across thread or across process.
       * Across process means there is a downstream RPC call for this.
       * Typically, refType == CrossProcess means SpanObject#spanType = entry.
       * </pre>
       *
       * <code>.segment.v3.RefType refType = 1;</code>
       * @return The refType.
       */
      @java.lang.Override
      public segment.v3.Segment.RefType getRefType() {
        @SuppressWarnings("deprecation")
        segment.v3.Segment.RefType result = segment.v3.Segment.RefType.valueOf(refType_);
        return result == null ? segment.v3.Segment.RefType.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * Represent the reference type. It could be across thread or across process.
       * Across process means there is a downstream RPC call for this.
       * Typically, refType == CrossProcess means SpanObject#spanType = entry.
       * </pre>
       *
       * <code>.segment.v3.RefType refType = 1;</code>
       * @param value The refType to set.
       * @return This builder for chaining.
       */
      public Builder setRefType(segment.v3.Segment.RefType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        refType_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Represent the reference type. It could be across thread or across process.
       * Across process means there is a downstream RPC call for this.
       * Typically, refType == CrossProcess means SpanObject#spanType = entry.
       * </pre>
       *
       * <code>.segment.v3.RefType refType = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearRefType() {
        
        refType_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object traceId_ = "";
      /**
       * <pre>
       * A string id represents the whole trace.
       * </pre>
       *
       * <code>string traceId = 2;</code>
       * @return The traceId.
       */
      public java.lang.String getTraceId() {
        java.lang.Object ref = traceId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          traceId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * A string id represents the whole trace.
       * </pre>
       *
       * <code>string traceId = 2;</code>
       * @return The bytes for traceId.
       */
      public com.google.protobuf.ByteString
          getTraceIdBytes() {
        java.lang.Object ref = traceId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          traceId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * A string id represents the whole trace.
       * </pre>
       *
       * <code>string traceId = 2;</code>
       * @param value The traceId to set.
       * @return This builder for chaining.
       */
      public Builder setTraceId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        traceId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A string id represents the whole trace.
       * </pre>
       *
       * <code>string traceId = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearTraceId() {
        
        traceId_ = getDefaultInstance().getTraceId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A string id represents the whole trace.
       * </pre>
       *
       * <code>string traceId = 2;</code>
       * @param value The bytes for traceId to set.
       * @return This builder for chaining.
       */
      public Builder setTraceIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        traceId_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object parentTraceSegmentId_ = "";
      /**
       * <pre>
       * Another segment id as the parent.
       * </pre>
       *
       * <code>string parentTraceSegmentId = 3;</code>
       * @return The parentTraceSegmentId.
       */
      public java.lang.String getParentTraceSegmentId() {
        java.lang.Object ref = parentTraceSegmentId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          parentTraceSegmentId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Another segment id as the parent.
       * </pre>
       *
       * <code>string parentTraceSegmentId = 3;</code>
       * @return The bytes for parentTraceSegmentId.
       */
      public com.google.protobuf.ByteString
          getParentTraceSegmentIdBytes() {
        java.lang.Object ref = parentTraceSegmentId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          parentTraceSegmentId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Another segment id as the parent.
       * </pre>
       *
       * <code>string parentTraceSegmentId = 3;</code>
       * @param value The parentTraceSegmentId to set.
       * @return This builder for chaining.
       */
      public Builder setParentTraceSegmentId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        parentTraceSegmentId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Another segment id as the parent.
       * </pre>
       *
       * <code>string parentTraceSegmentId = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearParentTraceSegmentId() {
        
        parentTraceSegmentId_ = getDefaultInstance().getParentTraceSegmentId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Another segment id as the parent.
       * </pre>
       *
       * <code>string parentTraceSegmentId = 3;</code>
       * @param value The bytes for parentTraceSegmentId to set.
       * @return This builder for chaining.
       */
      public Builder setParentTraceSegmentIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        parentTraceSegmentId_ = value;
        onChanged();
        return this;
      }

      private int parentSpanId_ ;
      /**
       * <pre>
       * The span id in the parent trace segment.
       * </pre>
       *
       * <code>int32 parentSpanId = 4;</code>
       * @return The parentSpanId.
       */
      @java.lang.Override
      public int getParentSpanId() {
        return parentSpanId_;
      }
      /**
       * <pre>
       * The span id in the parent trace segment.
       * </pre>
       *
       * <code>int32 parentSpanId = 4;</code>
       * @param value The parentSpanId to set.
       * @return This builder for chaining.
       */
      public Builder setParentSpanId(int value) {
        
        parentSpanId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The span id in the parent trace segment.
       * </pre>
       *
       * <code>int32 parentSpanId = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearParentSpanId() {
        
        parentSpanId_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object parentService_ = "";
      /**
       * <pre>
       * The service logic name of the parent segment.
       * If refType == CrossThread, this name is as same as the trace segment.
       * </pre>
       *
       * <code>string parentService = 5;</code>
       * @return The parentService.
       */
      public java.lang.String getParentService() {
        java.lang.Object ref = parentService_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          parentService_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The service logic name of the parent segment.
       * If refType == CrossThread, this name is as same as the trace segment.
       * </pre>
       *
       * <code>string parentService = 5;</code>
       * @return The bytes for parentService.
       */
      public com.google.protobuf.ByteString
          getParentServiceBytes() {
        java.lang.Object ref = parentService_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          parentService_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The service logic name of the parent segment.
       * If refType == CrossThread, this name is as same as the trace segment.
       * </pre>
       *
       * <code>string parentService = 5;</code>
       * @param value The parentService to set.
       * @return This builder for chaining.
       */
      public Builder setParentService(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        parentService_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The service logic name of the parent segment.
       * If refType == CrossThread, this name is as same as the trace segment.
       * </pre>
       *
       * <code>string parentService = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearParentService() {
        
        parentService_ = getDefaultInstance().getParentService();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The service logic name of the parent segment.
       * If refType == CrossThread, this name is as same as the trace segment.
       * </pre>
       *
       * <code>string parentService = 5;</code>
       * @param value The bytes for parentService to set.
       * @return This builder for chaining.
       */
      public Builder setParentServiceBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        parentService_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object parentServiceInstance_ = "";
      /**
       * <pre>
       * The service logic name instance of the parent segment.
       * If refType == CrossThread, this name is as same as the trace segment.
       * </pre>
       *
       * <code>string parentServiceInstance = 6;</code>
       * @return The parentServiceInstance.
       */
      public java.lang.String getParentServiceInstance() {
        java.lang.Object ref = parentServiceInstance_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          parentServiceInstance_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The service logic name instance of the parent segment.
       * If refType == CrossThread, this name is as same as the trace segment.
       * </pre>
       *
       * <code>string parentServiceInstance = 6;</code>
       * @return The bytes for parentServiceInstance.
       */
      public com.google.protobuf.ByteString
          getParentServiceInstanceBytes() {
        java.lang.Object ref = parentServiceInstance_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          parentServiceInstance_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The service logic name instance of the parent segment.
       * If refType == CrossThread, this name is as same as the trace segment.
       * </pre>
       *
       * <code>string parentServiceInstance = 6;</code>
       * @param value The parentServiceInstance to set.
       * @return This builder for chaining.
       */
      public Builder setParentServiceInstance(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        parentServiceInstance_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The service logic name instance of the parent segment.
       * If refType == CrossThread, this name is as same as the trace segment.
       * </pre>
       *
       * <code>string parentServiceInstance = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearParentServiceInstance() {
        
        parentServiceInstance_ = getDefaultInstance().getParentServiceInstance();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The service logic name instance of the parent segment.
       * If refType == CrossThread, this name is as same as the trace segment.
       * </pre>
       *
       * <code>string parentServiceInstance = 6;</code>
       * @param value The bytes for parentServiceInstance to set.
       * @return This builder for chaining.
       */
      public Builder setParentServiceInstanceBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        parentServiceInstance_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object parentEndpoint_ = "";
      /**
       * <pre>
       * The endpoint name of the parent segment.
       * **Endpoint**. A path in a service for incoming requests, such as an HTTP URI path or a gRPC service class + method signature.
       * In a trace segment, the endpoint name is the name of first entry span.
       * </pre>
       *
       * <code>string parentEndpoint = 7;</code>
       * @return The parentEndpoint.
       */
      public java.lang.String getParentEndpoint() {
        java.lang.Object ref = parentEndpoint_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          parentEndpoint_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The endpoint name of the parent segment.
       * **Endpoint**. A path in a service for incoming requests, such as an HTTP URI path or a gRPC service class + method signature.
       * In a trace segment, the endpoint name is the name of first entry span.
       * </pre>
       *
       * <code>string parentEndpoint = 7;</code>
       * @return The bytes for parentEndpoint.
       */
      public com.google.protobuf.ByteString
          getParentEndpointBytes() {
        java.lang.Object ref = parentEndpoint_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          parentEndpoint_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The endpoint name of the parent segment.
       * **Endpoint**. A path in a service for incoming requests, such as an HTTP URI path or a gRPC service class + method signature.
       * In a trace segment, the endpoint name is the name of first entry span.
       * </pre>
       *
       * <code>string parentEndpoint = 7;</code>
       * @param value The parentEndpoint to set.
       * @return This builder for chaining.
       */
      public Builder setParentEndpoint(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        parentEndpoint_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The endpoint name of the parent segment.
       * **Endpoint**. A path in a service for incoming requests, such as an HTTP URI path or a gRPC service class + method signature.
       * In a trace segment, the endpoint name is the name of first entry span.
       * </pre>
       *
       * <code>string parentEndpoint = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearParentEndpoint() {
        
        parentEndpoint_ = getDefaultInstance().getParentEndpoint();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The endpoint name of the parent segment.
       * **Endpoint**. A path in a service for incoming requests, such as an HTTP URI path or a gRPC service class + method signature.
       * In a trace segment, the endpoint name is the name of first entry span.
       * </pre>
       *
       * <code>string parentEndpoint = 7;</code>
       * @param value The bytes for parentEndpoint to set.
       * @return This builder for chaining.
       */
      public Builder setParentEndpointBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        parentEndpoint_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object networkAddressUsedAtPeer_ = "";
      /**
       * <pre>
       * The network address, including ip/hostname and port, which is used in the client side.
       * Such as Client --&gt; use 127.0.11.8:913 -&gt; Server
       * then, in the reference of entry span reported by Server, the value of this field is 127.0.11.8:913.
       * This plays the important role in the SkyWalking STAM(Streaming Topology Analysis Method)
       * For more details, read https://wu-sheng.github.io/STAM/
       * </pre>
       *
       * <code>string networkAddressUsedAtPeer = 8;</code>
       * @return The networkAddressUsedAtPeer.
       */
      public java.lang.String getNetworkAddressUsedAtPeer() {
        java.lang.Object ref = networkAddressUsedAtPeer_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          networkAddressUsedAtPeer_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The network address, including ip/hostname and port, which is used in the client side.
       * Such as Client --&gt; use 127.0.11.8:913 -&gt; Server
       * then, in the reference of entry span reported by Server, the value of this field is 127.0.11.8:913.
       * This plays the important role in the SkyWalking STAM(Streaming Topology Analysis Method)
       * For more details, read https://wu-sheng.github.io/STAM/
       * </pre>
       *
       * <code>string networkAddressUsedAtPeer = 8;</code>
       * @return The bytes for networkAddressUsedAtPeer.
       */
      public com.google.protobuf.ByteString
          getNetworkAddressUsedAtPeerBytes() {
        java.lang.Object ref = networkAddressUsedAtPeer_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          networkAddressUsedAtPeer_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The network address, including ip/hostname and port, which is used in the client side.
       * Such as Client --&gt; use 127.0.11.8:913 -&gt; Server
       * then, in the reference of entry span reported by Server, the value of this field is 127.0.11.8:913.
       * This plays the important role in the SkyWalking STAM(Streaming Topology Analysis Method)
       * For more details, read https://wu-sheng.github.io/STAM/
       * </pre>
       *
       * <code>string networkAddressUsedAtPeer = 8;</code>
       * @param value The networkAddressUsedAtPeer to set.
       * @return This builder for chaining.
       */
      public Builder setNetworkAddressUsedAtPeer(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        networkAddressUsedAtPeer_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The network address, including ip/hostname and port, which is used in the client side.
       * Such as Client --&gt; use 127.0.11.8:913 -&gt; Server
       * then, in the reference of entry span reported by Server, the value of this field is 127.0.11.8:913.
       * This plays the important role in the SkyWalking STAM(Streaming Topology Analysis Method)
       * For more details, read https://wu-sheng.github.io/STAM/
       * </pre>
       *
       * <code>string networkAddressUsedAtPeer = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearNetworkAddressUsedAtPeer() {
        
        networkAddressUsedAtPeer_ = getDefaultInstance().getNetworkAddressUsedAtPeer();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The network address, including ip/hostname and port, which is used in the client side.
       * Such as Client --&gt; use 127.0.11.8:913 -&gt; Server
       * then, in the reference of entry span reported by Server, the value of this field is 127.0.11.8:913.
       * This plays the important role in the SkyWalking STAM(Streaming Topology Analysis Method)
       * For more details, read https://wu-sheng.github.io/STAM/
       * </pre>
       *
       * <code>string networkAddressUsedAtPeer = 8;</code>
       * @param value The bytes for networkAddressUsedAtPeer to set.
       * @return This builder for chaining.
       */
      public Builder setNetworkAddressUsedAtPeerBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        networkAddressUsedAtPeer_ = value;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:segment.v3.SegmentReference)
    }

    // @@protoc_insertion_point(class_scope:segment.v3.SegmentReference)
    private static final segment.v3.Segment.SegmentReference DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new segment.v3.Segment.SegmentReference();
    }

    public static segment.v3.Segment.SegmentReference getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SegmentReference>
        PARSER = new com.google.protobuf.AbstractParser<SegmentReference>() {
      @java.lang.Override
      public SegmentReference parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SegmentReference(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SegmentReference> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SegmentReference> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public segment.v3.Segment.SegmentReference getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SpanObjectOrBuilder extends
      // @@protoc_insertion_point(interface_extends:segment.v3.SpanObject)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The number id of the span. Should be unique in the whole segment.
     * Starting at 0.
     * </pre>
     *
     * <code>int32 spanId = 1;</code>
     * @return The spanId.
     */
    int getSpanId();

    /**
     * <pre>
     * The number id of the parent span in the whole segment.
     * -1 represents no parent span.
     * Also, be known as the root/first span of the segment.
     * </pre>
     *
     * <code>int32 parentSpanId = 2;</code>
     * @return The parentSpanId.
     */
    int getParentSpanId();

    /**
     * <pre>
     * Start timestamp in milliseconds of this span,
     * measured between the current time and midnight, January 1, 1970 UTC.
     * </pre>
     *
     * <code>int64 startTime = 3;</code>
     * @return The startTime.
     */
    long getStartTime();

    /**
     * <pre>
     * End timestamp in milliseconds of this span,
     * measured between the current time and midnight, January 1, 1970 UTC.
     * </pre>
     *
     * <code>int64 endTime = 4;</code>
     * @return The endTime.
     */
    long getEndTime();

    /**
     * <pre>
     * &lt;Optional&gt;
     * In the across thread and across process, these references targeting the parent segments.
     * The references usually have only one element, but in batch consumer case, such as in MQ or async batch process, it could be multiple.
     * </pre>
     *
     * <code>repeated .segment.v3.SegmentReference refs = 5;</code>
     */
    java.util.List<segment.v3.Segment.SegmentReference> 
        getRefsList();
    /**
     * <pre>
     * &lt;Optional&gt;
     * In the across thread and across process, these references targeting the parent segments.
     * The references usually have only one element, but in batch consumer case, such as in MQ or async batch process, it could be multiple.
     * </pre>
     *
     * <code>repeated .segment.v3.SegmentReference refs = 5;</code>
     */
    segment.v3.Segment.SegmentReference getRefs(int index);
    /**
     * <pre>
     * &lt;Optional&gt;
     * In the across thread and across process, these references targeting the parent segments.
     * The references usually have only one element, but in batch consumer case, such as in MQ or async batch process, it could be multiple.
     * </pre>
     *
     * <code>repeated .segment.v3.SegmentReference refs = 5;</code>
     */
    int getRefsCount();
    /**
     * <pre>
     * &lt;Optional&gt;
     * In the across thread and across process, these references targeting the parent segments.
     * The references usually have only one element, but in batch consumer case, such as in MQ or async batch process, it could be multiple.
     * </pre>
     *
     * <code>repeated .segment.v3.SegmentReference refs = 5;</code>
     */
    java.util.List<? extends segment.v3.Segment.SegmentReferenceOrBuilder> 
        getRefsOrBuilderList();
    /**
     * <pre>
     * &lt;Optional&gt;
     * In the across thread and across process, these references targeting the parent segments.
     * The references usually have only one element, but in batch consumer case, such as in MQ or async batch process, it could be multiple.
     * </pre>
     *
     * <code>repeated .segment.v3.SegmentReference refs = 5;</code>
     */
    segment.v3.Segment.SegmentReferenceOrBuilder getRefsOrBuilder(
        int index);

    /**
     * <pre>
     * A logic name represents this span.
     * We don't recommend to include the parameter, such as HTTP request parameters, as a part of the operation, especially this is the name of the entry span.
     * All statistic for the endpoints are aggregated base on this name. Those parameters should be added in the tags if necessary.
     * If in some cases, it have to be a part of the operation name,
     * users should use the Group Parameterized Endpoints capability at the backend to get the meaningful metrics.
     * Read https://github.com/apache/skywalking/blob/master/docs/en/setup/backend/endpoint-grouping-rules.md
     * </pre>
     *
     * <code>string operationName = 6;</code>
     * @return The operationName.
     */
    java.lang.String getOperationName();
    /**
     * <pre>
     * A logic name represents this span.
     * We don't recommend to include the parameter, such as HTTP request parameters, as a part of the operation, especially this is the name of the entry span.
     * All statistic for the endpoints are aggregated base on this name. Those parameters should be added in the tags if necessary.
     * If in some cases, it have to be a part of the operation name,
     * users should use the Group Parameterized Endpoints capability at the backend to get the meaningful metrics.
     * Read https://github.com/apache/skywalking/blob/master/docs/en/setup/backend/endpoint-grouping-rules.md
     * </pre>
     *
     * <code>string operationName = 6;</code>
     * @return The bytes for operationName.
     */
    com.google.protobuf.ByteString
        getOperationNameBytes();

    /**
     * <pre>
     * Remote address of the peer in RPC/MQ case.
     * This is required when spanType = Exit, as it is a part of the SkyWalking STAM(Streaming Topology Analysis Method).
     * For more details, read https://wu-sheng.github.io/STAM/
     * </pre>
     *
     * <code>string peer = 7;</code>
     * @return The peer.
     */
    java.lang.String getPeer();
    /**
     * <pre>
     * Remote address of the peer in RPC/MQ case.
     * This is required when spanType = Exit, as it is a part of the SkyWalking STAM(Streaming Topology Analysis Method).
     * For more details, read https://wu-sheng.github.io/STAM/
     * </pre>
     *
     * <code>string peer = 7;</code>
     * @return The bytes for peer.
     */
    com.google.protobuf.ByteString
        getPeerBytes();

    /**
     * <pre>
     * Span type represents the role in the RPC context.
     * </pre>
     *
     * <code>.segment.v3.SpanType spanType = 8;</code>
     * @return The enum numeric value on the wire for spanType.
     */
    int getSpanTypeValue();
    /**
     * <pre>
     * Span type represents the role in the RPC context.
     * </pre>
     *
     * <code>.segment.v3.SpanType spanType = 8;</code>
     * @return The spanType.
     */
    segment.v3.Segment.SpanType getSpanType();

    /**
     * <pre>
     * Span layer represent the component tech stack, related to the network tech.
     * </pre>
     *
     * <code>.segment.v3.SpanLayer spanLayer = 9;</code>
     * @return The enum numeric value on the wire for spanLayer.
     */
    int getSpanLayerValue();
    /**
     * <pre>
     * Span layer represent the component tech stack, related to the network tech.
     * </pre>
     *
     * <code>.segment.v3.SpanLayer spanLayer = 9;</code>
     * @return The spanLayer.
     */
    segment.v3.Segment.SpanLayer getSpanLayer();

    /**
     * <pre>
     * Component id is a predefined number id in the SkyWalking.
     * It represents the framework, tech stack used by this tracked span, such as Spring.
     * All IDs are defined in the https://github.com/apache/skywalking/blob/master/oap-server/server-bootstrap/src/main/resources/component-libraries.yml
     * Send a pull request if you want to add languages, components or mapping definitions,
     * all public components could be accepted.
     * Follow this doc for more details, https://github.com/apache/skywalking/blob/master/docs/en/guides/Component-library-settings.md
     * </pre>
     *
     * <code>int32 componentId = 10;</code>
     * @return The componentId.
     */
    int getComponentId();

    /**
     * <pre>
     * The status of the span. False means the tracked execution ends in the unexpected status.
     * This affects the successful rate statistic in the backend.
     * Exception or error code happened in the tracked process doesn't mean isError == true, the implementations of agent plugin and tracing SDK make the final decision.
     * </pre>
     *
     * <code>bool isError = 11;</code>
     * @return The isError.
     */
    boolean getIsError();

    /**
     * <pre>
     * String key, String value pair.
     * Tags provides more information, includes parameters.
     * In the OAP backend analysis, some special tag or tag combination could provide other advanced features.
     * https://github.com/apache/skywalking/blob/master/docs/en/guides/Java-Plugin-Development-Guide.md#special-span-tags
     * </pre>
     *
     * <code>repeated .segment.v3.KeyStringValuePair tags = 12;</code>
     */
    java.util.List<segment.v3.Segment.KeyStringValuePair> 
        getTagsList();
    /**
     * <pre>
     * String key, String value pair.
     * Tags provides more information, includes parameters.
     * In the OAP backend analysis, some special tag or tag combination could provide other advanced features.
     * https://github.com/apache/skywalking/blob/master/docs/en/guides/Java-Plugin-Development-Guide.md#special-span-tags
     * </pre>
     *
     * <code>repeated .segment.v3.KeyStringValuePair tags = 12;</code>
     */
    segment.v3.Segment.KeyStringValuePair getTags(int index);
    /**
     * <pre>
     * String key, String value pair.
     * Tags provides more information, includes parameters.
     * In the OAP backend analysis, some special tag or tag combination could provide other advanced features.
     * https://github.com/apache/skywalking/blob/master/docs/en/guides/Java-Plugin-Development-Guide.md#special-span-tags
     * </pre>
     *
     * <code>repeated .segment.v3.KeyStringValuePair tags = 12;</code>
     */
    int getTagsCount();
    /**
     * <pre>
     * String key, String value pair.
     * Tags provides more information, includes parameters.
     * In the OAP backend analysis, some special tag or tag combination could provide other advanced features.
     * https://github.com/apache/skywalking/blob/master/docs/en/guides/Java-Plugin-Development-Guide.md#special-span-tags
     * </pre>
     *
     * <code>repeated .segment.v3.KeyStringValuePair tags = 12;</code>
     */
    java.util.List<? extends segment.v3.Segment.KeyStringValuePairOrBuilder> 
        getTagsOrBuilderList();
    /**
     * <pre>
     * String key, String value pair.
     * Tags provides more information, includes parameters.
     * In the OAP backend analysis, some special tag or tag combination could provide other advanced features.
     * https://github.com/apache/skywalking/blob/master/docs/en/guides/Java-Plugin-Development-Guide.md#special-span-tags
     * </pre>
     *
     * <code>repeated .segment.v3.KeyStringValuePair tags = 12;</code>
     */
    segment.v3.Segment.KeyStringValuePairOrBuilder getTagsOrBuilder(
        int index);

    /**
     * <pre>
     * String key, String value pair with an accurate timestamp.
     * Logging some events happening in the context of the span duration.
     * </pre>
     *
     * <code>repeated .segment.v3.Log logs = 13;</code>
     */
    java.util.List<segment.v3.Segment.Log> 
        getLogsList();
    /**
     * <pre>
     * String key, String value pair with an accurate timestamp.
     * Logging some events happening in the context of the span duration.
     * </pre>
     *
     * <code>repeated .segment.v3.Log logs = 13;</code>
     */
    segment.v3.Segment.Log getLogs(int index);
    /**
     * <pre>
     * String key, String value pair with an accurate timestamp.
     * Logging some events happening in the context of the span duration.
     * </pre>
     *
     * <code>repeated .segment.v3.Log logs = 13;</code>
     */
    int getLogsCount();
    /**
     * <pre>
     * String key, String value pair with an accurate timestamp.
     * Logging some events happening in the context of the span duration.
     * </pre>
     *
     * <code>repeated .segment.v3.Log logs = 13;</code>
     */
    java.util.List<? extends segment.v3.Segment.LogOrBuilder> 
        getLogsOrBuilderList();
    /**
     * <pre>
     * String key, String value pair with an accurate timestamp.
     * Logging some events happening in the context of the span duration.
     * </pre>
     *
     * <code>repeated .segment.v3.Log logs = 13;</code>
     */
    segment.v3.Segment.LogOrBuilder getLogsOrBuilder(
        int index);

    /**
     * <pre>
     * Force the backend don't do analysis, if the value is TRUE.
     * The backend has its own configurations to follow or override this.
     * Use this mostly because the agent/SDK could know more context of the service role.
     * </pre>
     *
     * <code>bool skipAnalysis = 14;</code>
     * @return The skipAnalysis.
     */
    boolean getSkipAnalysis();
  }
  /**
   * <pre>
   * Span represents a execution unit in the system, with duration and many other attributes.
   * Span could be a method, a RPC, MQ message produce or consume.
   * In the practice, the span should be added when it is really necessary, to avoid payload overhead.
   * We recommend to creating spans in across process(client/server of RPC/MQ) and across thread cases only.
   * </pre>
   *
   * Protobuf type {@code segment.v3.SpanObject}
   */
  public static final class SpanObject extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:segment.v3.SpanObject)
      SpanObjectOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SpanObject.newBuilder() to construct.
    private SpanObject(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SpanObject() {
      refs_ = java.util.Collections.emptyList();
      operationName_ = "";
      peer_ = "";
      spanType_ = 0;
      spanLayer_ = 0;
      tags_ = java.util.Collections.emptyList();
      logs_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new SpanObject();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private SpanObject(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              spanId_ = input.readInt32();
              break;
            }
            case 16: {

              parentSpanId_ = input.readInt32();
              break;
            }
            case 24: {

              startTime_ = input.readInt64();
              break;
            }
            case 32: {

              endTime_ = input.readInt64();
              break;
            }
            case 42: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                refs_ = new java.util.ArrayList<segment.v3.Segment.SegmentReference>();
                mutable_bitField0_ |= 0x00000001;
              }
              refs_.add(
                  input.readMessage(segment.v3.Segment.SegmentReference.parser(), extensionRegistry));
              break;
            }
            case 50: {
              java.lang.String s = input.readStringRequireUtf8();

              operationName_ = s;
              break;
            }
            case 58: {
              java.lang.String s = input.readStringRequireUtf8();

              peer_ = s;
              break;
            }
            case 64: {
              int rawValue = input.readEnum();

              spanType_ = rawValue;
              break;
            }
            case 72: {
              int rawValue = input.readEnum();

              spanLayer_ = rawValue;
              break;
            }
            case 80: {

              componentId_ = input.readInt32();
              break;
            }
            case 88: {

              isError_ = input.readBool();
              break;
            }
            case 98: {
              if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                tags_ = new java.util.ArrayList<segment.v3.Segment.KeyStringValuePair>();
                mutable_bitField0_ |= 0x00000002;
              }
              tags_.add(
                  input.readMessage(segment.v3.Segment.KeyStringValuePair.parser(), extensionRegistry));
              break;
            }
            case 106: {
              if (!((mutable_bitField0_ & 0x00000004) != 0)) {
                logs_ = new java.util.ArrayList<segment.v3.Segment.Log>();
                mutable_bitField0_ |= 0x00000004;
              }
              logs_.add(
                  input.readMessage(segment.v3.Segment.Log.parser(), extensionRegistry));
              break;
            }
            case 112: {

              skipAnalysis_ = input.readBool();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          refs_ = java.util.Collections.unmodifiableList(refs_);
        }
        if (((mutable_bitField0_ & 0x00000002) != 0)) {
          tags_ = java.util.Collections.unmodifiableList(tags_);
        }
        if (((mutable_bitField0_ & 0x00000004) != 0)) {
          logs_ = java.util.Collections.unmodifiableList(logs_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return segment.v3.Segment.internal_static_segment_v3_SpanObject_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return segment.v3.Segment.internal_static_segment_v3_SpanObject_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              segment.v3.Segment.SpanObject.class, segment.v3.Segment.SpanObject.Builder.class);
    }

    public static final int SPANID_FIELD_NUMBER = 1;
    private int spanId_;
    /**
     * <pre>
     * The number id of the span. Should be unique in the whole segment.
     * Starting at 0.
     * </pre>
     *
     * <code>int32 spanId = 1;</code>
     * @return The spanId.
     */
    @java.lang.Override
    public int getSpanId() {
      return spanId_;
    }

    public static final int PARENTSPANID_FIELD_NUMBER = 2;
    private int parentSpanId_;
    /**
     * <pre>
     * The number id of the parent span in the whole segment.
     * -1 represents no parent span.
     * Also, be known as the root/first span of the segment.
     * </pre>
     *
     * <code>int32 parentSpanId = 2;</code>
     * @return The parentSpanId.
     */
    @java.lang.Override
    public int getParentSpanId() {
      return parentSpanId_;
    }

    public static final int STARTTIME_FIELD_NUMBER = 3;
    private long startTime_;
    /**
     * <pre>
     * Start timestamp in milliseconds of this span,
     * measured between the current time and midnight, January 1, 1970 UTC.
     * </pre>
     *
     * <code>int64 startTime = 3;</code>
     * @return The startTime.
     */
    @java.lang.Override
    public long getStartTime() {
      return startTime_;
    }

    public static final int ENDTIME_FIELD_NUMBER = 4;
    private long endTime_;
    /**
     * <pre>
     * End timestamp in milliseconds of this span,
     * measured between the current time and midnight, January 1, 1970 UTC.
     * </pre>
     *
     * <code>int64 endTime = 4;</code>
     * @return The endTime.
     */
    @java.lang.Override
    public long getEndTime() {
      return endTime_;
    }

    public static final int REFS_FIELD_NUMBER = 5;
    private java.util.List<segment.v3.Segment.SegmentReference> refs_;
    /**
     * <pre>
     * &lt;Optional&gt;
     * In the across thread and across process, these references targeting the parent segments.
     * The references usually have only one element, but in batch consumer case, such as in MQ or async batch process, it could be multiple.
     * </pre>
     *
     * <code>repeated .segment.v3.SegmentReference refs = 5;</code>
     */
    @java.lang.Override
    public java.util.List<segment.v3.Segment.SegmentReference> getRefsList() {
      return refs_;
    }
    /**
     * <pre>
     * &lt;Optional&gt;
     * In the across thread and across process, these references targeting the parent segments.
     * The references usually have only one element, but in batch consumer case, such as in MQ or async batch process, it could be multiple.
     * </pre>
     *
     * <code>repeated .segment.v3.SegmentReference refs = 5;</code>
     */
    @java.lang.Override
    public java.util.List<? extends segment.v3.Segment.SegmentReferenceOrBuilder> 
        getRefsOrBuilderList() {
      return refs_;
    }
    /**
     * <pre>
     * &lt;Optional&gt;
     * In the across thread and across process, these references targeting the parent segments.
     * The references usually have only one element, but in batch consumer case, such as in MQ or async batch process, it could be multiple.
     * </pre>
     *
     * <code>repeated .segment.v3.SegmentReference refs = 5;</code>
     */
    @java.lang.Override
    public int getRefsCount() {
      return refs_.size();
    }
    /**
     * <pre>
     * &lt;Optional&gt;
     * In the across thread and across process, these references targeting the parent segments.
     * The references usually have only one element, but in batch consumer case, such as in MQ or async batch process, it could be multiple.
     * </pre>
     *
     * <code>repeated .segment.v3.SegmentReference refs = 5;</code>
     */
    @java.lang.Override
    public segment.v3.Segment.SegmentReference getRefs(int index) {
      return refs_.get(index);
    }
    /**
     * <pre>
     * &lt;Optional&gt;
     * In the across thread and across process, these references targeting the parent segments.
     * The references usually have only one element, but in batch consumer case, such as in MQ or async batch process, it could be multiple.
     * </pre>
     *
     * <code>repeated .segment.v3.SegmentReference refs = 5;</code>
     */
    @java.lang.Override
    public segment.v3.Segment.SegmentReferenceOrBuilder getRefsOrBuilder(
        int index) {
      return refs_.get(index);
    }

    public static final int OPERATIONNAME_FIELD_NUMBER = 6;
    private volatile java.lang.Object operationName_;
    /**
     * <pre>
     * A logic name represents this span.
     * We don't recommend to include the parameter, such as HTTP request parameters, as a part of the operation, especially this is the name of the entry span.
     * All statistic for the endpoints are aggregated base on this name. Those parameters should be added in the tags if necessary.
     * If in some cases, it have to be a part of the operation name,
     * users should use the Group Parameterized Endpoints capability at the backend to get the meaningful metrics.
     * Read https://github.com/apache/skywalking/blob/master/docs/en/setup/backend/endpoint-grouping-rules.md
     * </pre>
     *
     * <code>string operationName = 6;</code>
     * @return The operationName.
     */
    @java.lang.Override
    public java.lang.String getOperationName() {
      java.lang.Object ref = operationName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        operationName_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * A logic name represents this span.
     * We don't recommend to include the parameter, such as HTTP request parameters, as a part of the operation, especially this is the name of the entry span.
     * All statistic for the endpoints are aggregated base on this name. Those parameters should be added in the tags if necessary.
     * If in some cases, it have to be a part of the operation name,
     * users should use the Group Parameterized Endpoints capability at the backend to get the meaningful metrics.
     * Read https://github.com/apache/skywalking/blob/master/docs/en/setup/backend/endpoint-grouping-rules.md
     * </pre>
     *
     * <code>string operationName = 6;</code>
     * @return The bytes for operationName.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getOperationNameBytes() {
      java.lang.Object ref = operationName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        operationName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PEER_FIELD_NUMBER = 7;
    private volatile java.lang.Object peer_;
    /**
     * <pre>
     * Remote address of the peer in RPC/MQ case.
     * This is required when spanType = Exit, as it is a part of the SkyWalking STAM(Streaming Topology Analysis Method).
     * For more details, read https://wu-sheng.github.io/STAM/
     * </pre>
     *
     * <code>string peer = 7;</code>
     * @return The peer.
     */
    @java.lang.Override
    public java.lang.String getPeer() {
      java.lang.Object ref = peer_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        peer_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Remote address of the peer in RPC/MQ case.
     * This is required when spanType = Exit, as it is a part of the SkyWalking STAM(Streaming Topology Analysis Method).
     * For more details, read https://wu-sheng.github.io/STAM/
     * </pre>
     *
     * <code>string peer = 7;</code>
     * @return The bytes for peer.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getPeerBytes() {
      java.lang.Object ref = peer_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        peer_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SPANTYPE_FIELD_NUMBER = 8;
    private int spanType_;
    /**
     * <pre>
     * Span type represents the role in the RPC context.
     * </pre>
     *
     * <code>.segment.v3.SpanType spanType = 8;</code>
     * @return The enum numeric value on the wire for spanType.
     */
    @java.lang.Override public int getSpanTypeValue() {
      return spanType_;
    }
    /**
     * <pre>
     * Span type represents the role in the RPC context.
     * </pre>
     *
     * <code>.segment.v3.SpanType spanType = 8;</code>
     * @return The spanType.
     */
    @java.lang.Override public segment.v3.Segment.SpanType getSpanType() {
      @SuppressWarnings("deprecation")
      segment.v3.Segment.SpanType result = segment.v3.Segment.SpanType.valueOf(spanType_);
      return result == null ? segment.v3.Segment.SpanType.UNRECOGNIZED : result;
    }

    public static final int SPANLAYER_FIELD_NUMBER = 9;
    private int spanLayer_;
    /**
     * <pre>
     * Span layer represent the component tech stack, related to the network tech.
     * </pre>
     *
     * <code>.segment.v3.SpanLayer spanLayer = 9;</code>
     * @return The enum numeric value on the wire for spanLayer.
     */
    @java.lang.Override public int getSpanLayerValue() {
      return spanLayer_;
    }
    /**
     * <pre>
     * Span layer represent the component tech stack, related to the network tech.
     * </pre>
     *
     * <code>.segment.v3.SpanLayer spanLayer = 9;</code>
     * @return The spanLayer.
     */
    @java.lang.Override public segment.v3.Segment.SpanLayer getSpanLayer() {
      @SuppressWarnings("deprecation")
      segment.v3.Segment.SpanLayer result = segment.v3.Segment.SpanLayer.valueOf(spanLayer_);
      return result == null ? segment.v3.Segment.SpanLayer.UNRECOGNIZED : result;
    }

    public static final int COMPONENTID_FIELD_NUMBER = 10;
    private int componentId_;
    /**
     * <pre>
     * Component id is a predefined number id in the SkyWalking.
     * It represents the framework, tech stack used by this tracked span, such as Spring.
     * All IDs are defined in the https://github.com/apache/skywalking/blob/master/oap-server/server-bootstrap/src/main/resources/component-libraries.yml
     * Send a pull request if you want to add languages, components or mapping definitions,
     * all public components could be accepted.
     * Follow this doc for more details, https://github.com/apache/skywalking/blob/master/docs/en/guides/Component-library-settings.md
     * </pre>
     *
     * <code>int32 componentId = 10;</code>
     * @return The componentId.
     */
    @java.lang.Override
    public int getComponentId() {
      return componentId_;
    }

    public static final int ISERROR_FIELD_NUMBER = 11;
    private boolean isError_;
    /**
     * <pre>
     * The status of the span. False means the tracked execution ends in the unexpected status.
     * This affects the successful rate statistic in the backend.
     * Exception or error code happened in the tracked process doesn't mean isError == true, the implementations of agent plugin and tracing SDK make the final decision.
     * </pre>
     *
     * <code>bool isError = 11;</code>
     * @return The isError.
     */
    @java.lang.Override
    public boolean getIsError() {
      return isError_;
    }

    public static final int TAGS_FIELD_NUMBER = 12;
    private java.util.List<segment.v3.Segment.KeyStringValuePair> tags_;
    /**
     * <pre>
     * String key, String value pair.
     * Tags provides more information, includes parameters.
     * In the OAP backend analysis, some special tag or tag combination could provide other advanced features.
     * https://github.com/apache/skywalking/blob/master/docs/en/guides/Java-Plugin-Development-Guide.md#special-span-tags
     * </pre>
     *
     * <code>repeated .segment.v3.KeyStringValuePair tags = 12;</code>
     */
    @java.lang.Override
    public java.util.List<segment.v3.Segment.KeyStringValuePair> getTagsList() {
      return tags_;
    }
    /**
     * <pre>
     * String key, String value pair.
     * Tags provides more information, includes parameters.
     * In the OAP backend analysis, some special tag or tag combination could provide other advanced features.
     * https://github.com/apache/skywalking/blob/master/docs/en/guides/Java-Plugin-Development-Guide.md#special-span-tags
     * </pre>
     *
     * <code>repeated .segment.v3.KeyStringValuePair tags = 12;</code>
     */
    @java.lang.Override
    public java.util.List<? extends segment.v3.Segment.KeyStringValuePairOrBuilder> 
        getTagsOrBuilderList() {
      return tags_;
    }
    /**
     * <pre>
     * String key, String value pair.
     * Tags provides more information, includes parameters.
     * In the OAP backend analysis, some special tag or tag combination could provide other advanced features.
     * https://github.com/apache/skywalking/blob/master/docs/en/guides/Java-Plugin-Development-Guide.md#special-span-tags
     * </pre>
     *
     * <code>repeated .segment.v3.KeyStringValuePair tags = 12;</code>
     */
    @java.lang.Override
    public int getTagsCount() {
      return tags_.size();
    }
    /**
     * <pre>
     * String key, String value pair.
     * Tags provides more information, includes parameters.
     * In the OAP backend analysis, some special tag or tag combination could provide other advanced features.
     * https://github.com/apache/skywalking/blob/master/docs/en/guides/Java-Plugin-Development-Guide.md#special-span-tags
     * </pre>
     *
     * <code>repeated .segment.v3.KeyStringValuePair tags = 12;</code>
     */
    @java.lang.Override
    public segment.v3.Segment.KeyStringValuePair getTags(int index) {
      return tags_.get(index);
    }
    /**
     * <pre>
     * String key, String value pair.
     * Tags provides more information, includes parameters.
     * In the OAP backend analysis, some special tag or tag combination could provide other advanced features.
     * https://github.com/apache/skywalking/blob/master/docs/en/guides/Java-Plugin-Development-Guide.md#special-span-tags
     * </pre>
     *
     * <code>repeated .segment.v3.KeyStringValuePair tags = 12;</code>
     */
    @java.lang.Override
    public segment.v3.Segment.KeyStringValuePairOrBuilder getTagsOrBuilder(
        int index) {
      return tags_.get(index);
    }

    public static final int LOGS_FIELD_NUMBER = 13;
    private java.util.List<segment.v3.Segment.Log> logs_;
    /**
     * <pre>
     * String key, String value pair with an accurate timestamp.
     * Logging some events happening in the context of the span duration.
     * </pre>
     *
     * <code>repeated .segment.v3.Log logs = 13;</code>
     */
    @java.lang.Override
    public java.util.List<segment.v3.Segment.Log> getLogsList() {
      return logs_;
    }
    /**
     * <pre>
     * String key, String value pair with an accurate timestamp.
     * Logging some events happening in the context of the span duration.
     * </pre>
     *
     * <code>repeated .segment.v3.Log logs = 13;</code>
     */
    @java.lang.Override
    public java.util.List<? extends segment.v3.Segment.LogOrBuilder> 
        getLogsOrBuilderList() {
      return logs_;
    }
    /**
     * <pre>
     * String key, String value pair with an accurate timestamp.
     * Logging some events happening in the context of the span duration.
     * </pre>
     *
     * <code>repeated .segment.v3.Log logs = 13;</code>
     */
    @java.lang.Override
    public int getLogsCount() {
      return logs_.size();
    }
    /**
     * <pre>
     * String key, String value pair with an accurate timestamp.
     * Logging some events happening in the context of the span duration.
     * </pre>
     *
     * <code>repeated .segment.v3.Log logs = 13;</code>
     */
    @java.lang.Override
    public segment.v3.Segment.Log getLogs(int index) {
      return logs_.get(index);
    }
    /**
     * <pre>
     * String key, String value pair with an accurate timestamp.
     * Logging some events happening in the context of the span duration.
     * </pre>
     *
     * <code>repeated .segment.v3.Log logs = 13;</code>
     */
    @java.lang.Override
    public segment.v3.Segment.LogOrBuilder getLogsOrBuilder(
        int index) {
      return logs_.get(index);
    }

    public static final int SKIPANALYSIS_FIELD_NUMBER = 14;
    private boolean skipAnalysis_;
    /**
     * <pre>
     * Force the backend don't do analysis, if the value is TRUE.
     * The backend has its own configurations to follow or override this.
     * Use this mostly because the agent/SDK could know more context of the service role.
     * </pre>
     *
     * <code>bool skipAnalysis = 14;</code>
     * @return The skipAnalysis.
     */
    @java.lang.Override
    public boolean getSkipAnalysis() {
      return skipAnalysis_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (spanId_ != 0) {
        output.writeInt32(1, spanId_);
      }
      if (parentSpanId_ != 0) {
        output.writeInt32(2, parentSpanId_);
      }
      if (startTime_ != 0L) {
        output.writeInt64(3, startTime_);
      }
      if (endTime_ != 0L) {
        output.writeInt64(4, endTime_);
      }
      for (int i = 0; i < refs_.size(); i++) {
        output.writeMessage(5, refs_.get(i));
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(operationName_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 6, operationName_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(peer_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 7, peer_);
      }
      if (spanType_ != segment.v3.Segment.SpanType.Entry.getNumber()) {
        output.writeEnum(8, spanType_);
      }
      if (spanLayer_ != segment.v3.Segment.SpanLayer.Unknown.getNumber()) {
        output.writeEnum(9, spanLayer_);
      }
      if (componentId_ != 0) {
        output.writeInt32(10, componentId_);
      }
      if (isError_ != false) {
        output.writeBool(11, isError_);
      }
      for (int i = 0; i < tags_.size(); i++) {
        output.writeMessage(12, tags_.get(i));
      }
      for (int i = 0; i < logs_.size(); i++) {
        output.writeMessage(13, logs_.get(i));
      }
      if (skipAnalysis_ != false) {
        output.writeBool(14, skipAnalysis_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (spanId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, spanId_);
      }
      if (parentSpanId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, parentSpanId_);
      }
      if (startTime_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(3, startTime_);
      }
      if (endTime_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(4, endTime_);
      }
      for (int i = 0; i < refs_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, refs_.get(i));
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(operationName_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, operationName_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(peer_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(7, peer_);
      }
      if (spanType_ != segment.v3.Segment.SpanType.Entry.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(8, spanType_);
      }
      if (spanLayer_ != segment.v3.Segment.SpanLayer.Unknown.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(9, spanLayer_);
      }
      if (componentId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, componentId_);
      }
      if (isError_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(11, isError_);
      }
      for (int i = 0; i < tags_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(12, tags_.get(i));
      }
      for (int i = 0; i < logs_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(13, logs_.get(i));
      }
      if (skipAnalysis_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(14, skipAnalysis_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof segment.v3.Segment.SpanObject)) {
        return super.equals(obj);
      }
      segment.v3.Segment.SpanObject other = (segment.v3.Segment.SpanObject) obj;

      if (getSpanId()
          != other.getSpanId()) return false;
      if (getParentSpanId()
          != other.getParentSpanId()) return false;
      if (getStartTime()
          != other.getStartTime()) return false;
      if (getEndTime()
          != other.getEndTime()) return false;
      if (!getRefsList()
          .equals(other.getRefsList())) return false;
      if (!getOperationName()
          .equals(other.getOperationName())) return false;
      if (!getPeer()
          .equals(other.getPeer())) return false;
      if (spanType_ != other.spanType_) return false;
      if (spanLayer_ != other.spanLayer_) return false;
      if (getComponentId()
          != other.getComponentId()) return false;
      if (getIsError()
          != other.getIsError()) return false;
      if (!getTagsList()
          .equals(other.getTagsList())) return false;
      if (!getLogsList()
          .equals(other.getLogsList())) return false;
      if (getSkipAnalysis()
          != other.getSkipAnalysis()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + SPANID_FIELD_NUMBER;
      hash = (53 * hash) + getSpanId();
      hash = (37 * hash) + PARENTSPANID_FIELD_NUMBER;
      hash = (53 * hash) + getParentSpanId();
      hash = (37 * hash) + STARTTIME_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getStartTime());
      hash = (37 * hash) + ENDTIME_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getEndTime());
      if (getRefsCount() > 0) {
        hash = (37 * hash) + REFS_FIELD_NUMBER;
        hash = (53 * hash) + getRefsList().hashCode();
      }
      hash = (37 * hash) + OPERATIONNAME_FIELD_NUMBER;
      hash = (53 * hash) + getOperationName().hashCode();
      hash = (37 * hash) + PEER_FIELD_NUMBER;
      hash = (53 * hash) + getPeer().hashCode();
      hash = (37 * hash) + SPANTYPE_FIELD_NUMBER;
      hash = (53 * hash) + spanType_;
      hash = (37 * hash) + SPANLAYER_FIELD_NUMBER;
      hash = (53 * hash) + spanLayer_;
      hash = (37 * hash) + COMPONENTID_FIELD_NUMBER;
      hash = (53 * hash) + getComponentId();
      hash = (37 * hash) + ISERROR_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getIsError());
      if (getTagsCount() > 0) {
        hash = (37 * hash) + TAGS_FIELD_NUMBER;
        hash = (53 * hash) + getTagsList().hashCode();
      }
      if (getLogsCount() > 0) {
        hash = (37 * hash) + LOGS_FIELD_NUMBER;
        hash = (53 * hash) + getLogsList().hashCode();
      }
      hash = (37 * hash) + SKIPANALYSIS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getSkipAnalysis());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static segment.v3.Segment.SpanObject parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static segment.v3.Segment.SpanObject parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static segment.v3.Segment.SpanObject parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static segment.v3.Segment.SpanObject parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static segment.v3.Segment.SpanObject parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static segment.v3.Segment.SpanObject parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static segment.v3.Segment.SpanObject parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static segment.v3.Segment.SpanObject parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static segment.v3.Segment.SpanObject parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static segment.v3.Segment.SpanObject parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static segment.v3.Segment.SpanObject parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static segment.v3.Segment.SpanObject parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(segment.v3.Segment.SpanObject prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Span represents a execution unit in the system, with duration and many other attributes.
     * Span could be a method, a RPC, MQ message produce or consume.
     * In the practice, the span should be added when it is really necessary, to avoid payload overhead.
     * We recommend to creating spans in across process(client/server of RPC/MQ) and across thread cases only.
     * </pre>
     *
     * Protobuf type {@code segment.v3.SpanObject}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:segment.v3.SpanObject)
        segment.v3.Segment.SpanObjectOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return segment.v3.Segment.internal_static_segment_v3_SpanObject_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return segment.v3.Segment.internal_static_segment_v3_SpanObject_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                segment.v3.Segment.SpanObject.class, segment.v3.Segment.SpanObject.Builder.class);
      }

      // Construct using segment.v3.Segment.SpanObject.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getRefsFieldBuilder();
          getTagsFieldBuilder();
          getLogsFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        spanId_ = 0;

        parentSpanId_ = 0;

        startTime_ = 0L;

        endTime_ = 0L;

        if (refsBuilder_ == null) {
          refs_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          refsBuilder_.clear();
        }
        operationName_ = "";

        peer_ = "";

        spanType_ = 0;

        spanLayer_ = 0;

        componentId_ = 0;

        isError_ = false;

        if (tagsBuilder_ == null) {
          tags_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          tagsBuilder_.clear();
        }
        if (logsBuilder_ == null) {
          logs_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          logsBuilder_.clear();
        }
        skipAnalysis_ = false;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return segment.v3.Segment.internal_static_segment_v3_SpanObject_descriptor;
      }

      @java.lang.Override
      public segment.v3.Segment.SpanObject getDefaultInstanceForType() {
        return segment.v3.Segment.SpanObject.getDefaultInstance();
      }

      @java.lang.Override
      public segment.v3.Segment.SpanObject build() {
        segment.v3.Segment.SpanObject result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public segment.v3.Segment.SpanObject buildPartial() {
        segment.v3.Segment.SpanObject result = new segment.v3.Segment.SpanObject(this);
        int from_bitField0_ = bitField0_;
        result.spanId_ = spanId_;
        result.parentSpanId_ = parentSpanId_;
        result.startTime_ = startTime_;
        result.endTime_ = endTime_;
        if (refsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            refs_ = java.util.Collections.unmodifiableList(refs_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.refs_ = refs_;
        } else {
          result.refs_ = refsBuilder_.build();
        }
        result.operationName_ = operationName_;
        result.peer_ = peer_;
        result.spanType_ = spanType_;
        result.spanLayer_ = spanLayer_;
        result.componentId_ = componentId_;
        result.isError_ = isError_;
        if (tagsBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0)) {
            tags_ = java.util.Collections.unmodifiableList(tags_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.tags_ = tags_;
        } else {
          result.tags_ = tagsBuilder_.build();
        }
        if (logsBuilder_ == null) {
          if (((bitField0_ & 0x00000004) != 0)) {
            logs_ = java.util.Collections.unmodifiableList(logs_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.logs_ = logs_;
        } else {
          result.logs_ = logsBuilder_.build();
        }
        result.skipAnalysis_ = skipAnalysis_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof segment.v3.Segment.SpanObject) {
          return mergeFrom((segment.v3.Segment.SpanObject)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(segment.v3.Segment.SpanObject other) {
        if (other == segment.v3.Segment.SpanObject.getDefaultInstance()) return this;
        if (other.getSpanId() != 0) {
          setSpanId(other.getSpanId());
        }
        if (other.getParentSpanId() != 0) {
          setParentSpanId(other.getParentSpanId());
        }
        if (other.getStartTime() != 0L) {
          setStartTime(other.getStartTime());
        }
        if (other.getEndTime() != 0L) {
          setEndTime(other.getEndTime());
        }
        if (refsBuilder_ == null) {
          if (!other.refs_.isEmpty()) {
            if (refs_.isEmpty()) {
              refs_ = other.refs_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureRefsIsMutable();
              refs_.addAll(other.refs_);
            }
            onChanged();
          }
        } else {
          if (!other.refs_.isEmpty()) {
            if (refsBuilder_.isEmpty()) {
              refsBuilder_.dispose();
              refsBuilder_ = null;
              refs_ = other.refs_;
              bitField0_ = (bitField0_ & ~0x00000001);
              refsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getRefsFieldBuilder() : null;
            } else {
              refsBuilder_.addAllMessages(other.refs_);
            }
          }
        }
        if (!other.getOperationName().isEmpty()) {
          operationName_ = other.operationName_;
          onChanged();
        }
        if (!other.getPeer().isEmpty()) {
          peer_ = other.peer_;
          onChanged();
        }
        if (other.spanType_ != 0) {
          setSpanTypeValue(other.getSpanTypeValue());
        }
        if (other.spanLayer_ != 0) {
          setSpanLayerValue(other.getSpanLayerValue());
        }
        if (other.getComponentId() != 0) {
          setComponentId(other.getComponentId());
        }
        if (other.getIsError() != false) {
          setIsError(other.getIsError());
        }
        if (tagsBuilder_ == null) {
          if (!other.tags_.isEmpty()) {
            if (tags_.isEmpty()) {
              tags_ = other.tags_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureTagsIsMutable();
              tags_.addAll(other.tags_);
            }
            onChanged();
          }
        } else {
          if (!other.tags_.isEmpty()) {
            if (tagsBuilder_.isEmpty()) {
              tagsBuilder_.dispose();
              tagsBuilder_ = null;
              tags_ = other.tags_;
              bitField0_ = (bitField0_ & ~0x00000002);
              tagsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getTagsFieldBuilder() : null;
            } else {
              tagsBuilder_.addAllMessages(other.tags_);
            }
          }
        }
        if (logsBuilder_ == null) {
          if (!other.logs_.isEmpty()) {
            if (logs_.isEmpty()) {
              logs_ = other.logs_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureLogsIsMutable();
              logs_.addAll(other.logs_);
            }
            onChanged();
          }
        } else {
          if (!other.logs_.isEmpty()) {
            if (logsBuilder_.isEmpty()) {
              logsBuilder_.dispose();
              logsBuilder_ = null;
              logs_ = other.logs_;
              bitField0_ = (bitField0_ & ~0x00000004);
              logsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getLogsFieldBuilder() : null;
            } else {
              logsBuilder_.addAllMessages(other.logs_);
            }
          }
        }
        if (other.getSkipAnalysis() != false) {
          setSkipAnalysis(other.getSkipAnalysis());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        segment.v3.Segment.SpanObject parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (segment.v3.Segment.SpanObject) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int spanId_ ;
      /**
       * <pre>
       * The number id of the span. Should be unique in the whole segment.
       * Starting at 0.
       * </pre>
       *
       * <code>int32 spanId = 1;</code>
       * @return The spanId.
       */
      @java.lang.Override
      public int getSpanId() {
        return spanId_;
      }
      /**
       * <pre>
       * The number id of the span. Should be unique in the whole segment.
       * Starting at 0.
       * </pre>
       *
       * <code>int32 spanId = 1;</code>
       * @param value The spanId to set.
       * @return This builder for chaining.
       */
      public Builder setSpanId(int value) {
        
        spanId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The number id of the span. Should be unique in the whole segment.
       * Starting at 0.
       * </pre>
       *
       * <code>int32 spanId = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearSpanId() {
        
        spanId_ = 0;
        onChanged();
        return this;
      }

      private int parentSpanId_ ;
      /**
       * <pre>
       * The number id of the parent span in the whole segment.
       * -1 represents no parent span.
       * Also, be known as the root/first span of the segment.
       * </pre>
       *
       * <code>int32 parentSpanId = 2;</code>
       * @return The parentSpanId.
       */
      @java.lang.Override
      public int getParentSpanId() {
        return parentSpanId_;
      }
      /**
       * <pre>
       * The number id of the parent span in the whole segment.
       * -1 represents no parent span.
       * Also, be known as the root/first span of the segment.
       * </pre>
       *
       * <code>int32 parentSpanId = 2;</code>
       * @param value The parentSpanId to set.
       * @return This builder for chaining.
       */
      public Builder setParentSpanId(int value) {
        
        parentSpanId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The number id of the parent span in the whole segment.
       * -1 represents no parent span.
       * Also, be known as the root/first span of the segment.
       * </pre>
       *
       * <code>int32 parentSpanId = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearParentSpanId() {
        
        parentSpanId_ = 0;
        onChanged();
        return this;
      }

      private long startTime_ ;
      /**
       * <pre>
       * Start timestamp in milliseconds of this span,
       * measured between the current time and midnight, January 1, 1970 UTC.
       * </pre>
       *
       * <code>int64 startTime = 3;</code>
       * @return The startTime.
       */
      @java.lang.Override
      public long getStartTime() {
        return startTime_;
      }
      /**
       * <pre>
       * Start timestamp in milliseconds of this span,
       * measured between the current time and midnight, January 1, 1970 UTC.
       * </pre>
       *
       * <code>int64 startTime = 3;</code>
       * @param value The startTime to set.
       * @return This builder for chaining.
       */
      public Builder setStartTime(long value) {
        
        startTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Start timestamp in milliseconds of this span,
       * measured between the current time and midnight, January 1, 1970 UTC.
       * </pre>
       *
       * <code>int64 startTime = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearStartTime() {
        
        startTime_ = 0L;
        onChanged();
        return this;
      }

      private long endTime_ ;
      /**
       * <pre>
       * End timestamp in milliseconds of this span,
       * measured between the current time and midnight, January 1, 1970 UTC.
       * </pre>
       *
       * <code>int64 endTime = 4;</code>
       * @return The endTime.
       */
      @java.lang.Override
      public long getEndTime() {
        return endTime_;
      }
      /**
       * <pre>
       * End timestamp in milliseconds of this span,
       * measured between the current time and midnight, January 1, 1970 UTC.
       * </pre>
       *
       * <code>int64 endTime = 4;</code>
       * @param value The endTime to set.
       * @return This builder for chaining.
       */
      public Builder setEndTime(long value) {
        
        endTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * End timestamp in milliseconds of this span,
       * measured between the current time and midnight, January 1, 1970 UTC.
       * </pre>
       *
       * <code>int64 endTime = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearEndTime() {
        
        endTime_ = 0L;
        onChanged();
        return this;
      }

      private java.util.List<segment.v3.Segment.SegmentReference> refs_ =
        java.util.Collections.emptyList();
      private void ensureRefsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          refs_ = new java.util.ArrayList<segment.v3.Segment.SegmentReference>(refs_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          segment.v3.Segment.SegmentReference, segment.v3.Segment.SegmentReference.Builder, segment.v3.Segment.SegmentReferenceOrBuilder> refsBuilder_;

      /**
       * <pre>
       * &lt;Optional&gt;
       * In the across thread and across process, these references targeting the parent segments.
       * The references usually have only one element, but in batch consumer case, such as in MQ or async batch process, it could be multiple.
       * </pre>
       *
       * <code>repeated .segment.v3.SegmentReference refs = 5;</code>
       */
      public java.util.List<segment.v3.Segment.SegmentReference> getRefsList() {
        if (refsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(refs_);
        } else {
          return refsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * &lt;Optional&gt;
       * In the across thread and across process, these references targeting the parent segments.
       * The references usually have only one element, but in batch consumer case, such as in MQ or async batch process, it could be multiple.
       * </pre>
       *
       * <code>repeated .segment.v3.SegmentReference refs = 5;</code>
       */
      public int getRefsCount() {
        if (refsBuilder_ == null) {
          return refs_.size();
        } else {
          return refsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * &lt;Optional&gt;
       * In the across thread and across process, these references targeting the parent segments.
       * The references usually have only one element, but in batch consumer case, such as in MQ or async batch process, it could be multiple.
       * </pre>
       *
       * <code>repeated .segment.v3.SegmentReference refs = 5;</code>
       */
      public segment.v3.Segment.SegmentReference getRefs(int index) {
        if (refsBuilder_ == null) {
          return refs_.get(index);
        } else {
          return refsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * &lt;Optional&gt;
       * In the across thread and across process, these references targeting the parent segments.
       * The references usually have only one element, but in batch consumer case, such as in MQ or async batch process, it could be multiple.
       * </pre>
       *
       * <code>repeated .segment.v3.SegmentReference refs = 5;</code>
       */
      public Builder setRefs(
          int index, segment.v3.Segment.SegmentReference value) {
        if (refsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRefsIsMutable();
          refs_.set(index, value);
          onChanged();
        } else {
          refsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * &lt;Optional&gt;
       * In the across thread and across process, these references targeting the parent segments.
       * The references usually have only one element, but in batch consumer case, such as in MQ or async batch process, it could be multiple.
       * </pre>
       *
       * <code>repeated .segment.v3.SegmentReference refs = 5;</code>
       */
      public Builder setRefs(
          int index, segment.v3.Segment.SegmentReference.Builder builderForValue) {
        if (refsBuilder_ == null) {
          ensureRefsIsMutable();
          refs_.set(index, builderForValue.build());
          onChanged();
        } else {
          refsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * &lt;Optional&gt;
       * In the across thread and across process, these references targeting the parent segments.
       * The references usually have only one element, but in batch consumer case, such as in MQ or async batch process, it could be multiple.
       * </pre>
       *
       * <code>repeated .segment.v3.SegmentReference refs = 5;</code>
       */
      public Builder addRefs(segment.v3.Segment.SegmentReference value) {
        if (refsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRefsIsMutable();
          refs_.add(value);
          onChanged();
        } else {
          refsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * &lt;Optional&gt;
       * In the across thread and across process, these references targeting the parent segments.
       * The references usually have only one element, but in batch consumer case, such as in MQ or async batch process, it could be multiple.
       * </pre>
       *
       * <code>repeated .segment.v3.SegmentReference refs = 5;</code>
       */
      public Builder addRefs(
          int index, segment.v3.Segment.SegmentReference value) {
        if (refsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRefsIsMutable();
          refs_.add(index, value);
          onChanged();
        } else {
          refsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * &lt;Optional&gt;
       * In the across thread and across process, these references targeting the parent segments.
       * The references usually have only one element, but in batch consumer case, such as in MQ or async batch process, it could be multiple.
       * </pre>
       *
       * <code>repeated .segment.v3.SegmentReference refs = 5;</code>
       */
      public Builder addRefs(
          segment.v3.Segment.SegmentReference.Builder builderForValue) {
        if (refsBuilder_ == null) {
          ensureRefsIsMutable();
          refs_.add(builderForValue.build());
          onChanged();
        } else {
          refsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * &lt;Optional&gt;
       * In the across thread and across process, these references targeting the parent segments.
       * The references usually have only one element, but in batch consumer case, such as in MQ or async batch process, it could be multiple.
       * </pre>
       *
       * <code>repeated .segment.v3.SegmentReference refs = 5;</code>
       */
      public Builder addRefs(
          int index, segment.v3.Segment.SegmentReference.Builder builderForValue) {
        if (refsBuilder_ == null) {
          ensureRefsIsMutable();
          refs_.add(index, builderForValue.build());
          onChanged();
        } else {
          refsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * &lt;Optional&gt;
       * In the across thread and across process, these references targeting the parent segments.
       * The references usually have only one element, but in batch consumer case, such as in MQ or async batch process, it could be multiple.
       * </pre>
       *
       * <code>repeated .segment.v3.SegmentReference refs = 5;</code>
       */
      public Builder addAllRefs(
          java.lang.Iterable<? extends segment.v3.Segment.SegmentReference> values) {
        if (refsBuilder_ == null) {
          ensureRefsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, refs_);
          onChanged();
        } else {
          refsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * &lt;Optional&gt;
       * In the across thread and across process, these references targeting the parent segments.
       * The references usually have only one element, but in batch consumer case, such as in MQ or async batch process, it could be multiple.
       * </pre>
       *
       * <code>repeated .segment.v3.SegmentReference refs = 5;</code>
       */
      public Builder clearRefs() {
        if (refsBuilder_ == null) {
          refs_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          refsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * &lt;Optional&gt;
       * In the across thread and across process, these references targeting the parent segments.
       * The references usually have only one element, but in batch consumer case, such as in MQ or async batch process, it could be multiple.
       * </pre>
       *
       * <code>repeated .segment.v3.SegmentReference refs = 5;</code>
       */
      public Builder removeRefs(int index) {
        if (refsBuilder_ == null) {
          ensureRefsIsMutable();
          refs_.remove(index);
          onChanged();
        } else {
          refsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * &lt;Optional&gt;
       * In the across thread and across process, these references targeting the parent segments.
       * The references usually have only one element, but in batch consumer case, such as in MQ or async batch process, it could be multiple.
       * </pre>
       *
       * <code>repeated .segment.v3.SegmentReference refs = 5;</code>
       */
      public segment.v3.Segment.SegmentReference.Builder getRefsBuilder(
          int index) {
        return getRefsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * &lt;Optional&gt;
       * In the across thread and across process, these references targeting the parent segments.
       * The references usually have only one element, but in batch consumer case, such as in MQ or async batch process, it could be multiple.
       * </pre>
       *
       * <code>repeated .segment.v3.SegmentReference refs = 5;</code>
       */
      public segment.v3.Segment.SegmentReferenceOrBuilder getRefsOrBuilder(
          int index) {
        if (refsBuilder_ == null) {
          return refs_.get(index);  } else {
          return refsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * &lt;Optional&gt;
       * In the across thread and across process, these references targeting the parent segments.
       * The references usually have only one element, but in batch consumer case, such as in MQ or async batch process, it could be multiple.
       * </pre>
       *
       * <code>repeated .segment.v3.SegmentReference refs = 5;</code>
       */
      public java.util.List<? extends segment.v3.Segment.SegmentReferenceOrBuilder> 
           getRefsOrBuilderList() {
        if (refsBuilder_ != null) {
          return refsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(refs_);
        }
      }
      /**
       * <pre>
       * &lt;Optional&gt;
       * In the across thread and across process, these references targeting the parent segments.
       * The references usually have only one element, but in batch consumer case, such as in MQ or async batch process, it could be multiple.
       * </pre>
       *
       * <code>repeated .segment.v3.SegmentReference refs = 5;</code>
       */
      public segment.v3.Segment.SegmentReference.Builder addRefsBuilder() {
        return getRefsFieldBuilder().addBuilder(
            segment.v3.Segment.SegmentReference.getDefaultInstance());
      }
      /**
       * <pre>
       * &lt;Optional&gt;
       * In the across thread and across process, these references targeting the parent segments.
       * The references usually have only one element, but in batch consumer case, such as in MQ or async batch process, it could be multiple.
       * </pre>
       *
       * <code>repeated .segment.v3.SegmentReference refs = 5;</code>
       */
      public segment.v3.Segment.SegmentReference.Builder addRefsBuilder(
          int index) {
        return getRefsFieldBuilder().addBuilder(
            index, segment.v3.Segment.SegmentReference.getDefaultInstance());
      }
      /**
       * <pre>
       * &lt;Optional&gt;
       * In the across thread and across process, these references targeting the parent segments.
       * The references usually have only one element, but in batch consumer case, such as in MQ or async batch process, it could be multiple.
       * </pre>
       *
       * <code>repeated .segment.v3.SegmentReference refs = 5;</code>
       */
      public java.util.List<segment.v3.Segment.SegmentReference.Builder> 
           getRefsBuilderList() {
        return getRefsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          segment.v3.Segment.SegmentReference, segment.v3.Segment.SegmentReference.Builder, segment.v3.Segment.SegmentReferenceOrBuilder> 
          getRefsFieldBuilder() {
        if (refsBuilder_ == null) {
          refsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              segment.v3.Segment.SegmentReference, segment.v3.Segment.SegmentReference.Builder, segment.v3.Segment.SegmentReferenceOrBuilder>(
                  refs_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          refs_ = null;
        }
        return refsBuilder_;
      }

      private java.lang.Object operationName_ = "";
      /**
       * <pre>
       * A logic name represents this span.
       * We don't recommend to include the parameter, such as HTTP request parameters, as a part of the operation, especially this is the name of the entry span.
       * All statistic for the endpoints are aggregated base on this name. Those parameters should be added in the tags if necessary.
       * If in some cases, it have to be a part of the operation name,
       * users should use the Group Parameterized Endpoints capability at the backend to get the meaningful metrics.
       * Read https://github.com/apache/skywalking/blob/master/docs/en/setup/backend/endpoint-grouping-rules.md
       * </pre>
       *
       * <code>string operationName = 6;</code>
       * @return The operationName.
       */
      public java.lang.String getOperationName() {
        java.lang.Object ref = operationName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          operationName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * A logic name represents this span.
       * We don't recommend to include the parameter, such as HTTP request parameters, as a part of the operation, especially this is the name of the entry span.
       * All statistic for the endpoints are aggregated base on this name. Those parameters should be added in the tags if necessary.
       * If in some cases, it have to be a part of the operation name,
       * users should use the Group Parameterized Endpoints capability at the backend to get the meaningful metrics.
       * Read https://github.com/apache/skywalking/blob/master/docs/en/setup/backend/endpoint-grouping-rules.md
       * </pre>
       *
       * <code>string operationName = 6;</code>
       * @return The bytes for operationName.
       */
      public com.google.protobuf.ByteString
          getOperationNameBytes() {
        java.lang.Object ref = operationName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          operationName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * A logic name represents this span.
       * We don't recommend to include the parameter, such as HTTP request parameters, as a part of the operation, especially this is the name of the entry span.
       * All statistic for the endpoints are aggregated base on this name. Those parameters should be added in the tags if necessary.
       * If in some cases, it have to be a part of the operation name,
       * users should use the Group Parameterized Endpoints capability at the backend to get the meaningful metrics.
       * Read https://github.com/apache/skywalking/blob/master/docs/en/setup/backend/endpoint-grouping-rules.md
       * </pre>
       *
       * <code>string operationName = 6;</code>
       * @param value The operationName to set.
       * @return This builder for chaining.
       */
      public Builder setOperationName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        operationName_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A logic name represents this span.
       * We don't recommend to include the parameter, such as HTTP request parameters, as a part of the operation, especially this is the name of the entry span.
       * All statistic for the endpoints are aggregated base on this name. Those parameters should be added in the tags if necessary.
       * If in some cases, it have to be a part of the operation name,
       * users should use the Group Parameterized Endpoints capability at the backend to get the meaningful metrics.
       * Read https://github.com/apache/skywalking/blob/master/docs/en/setup/backend/endpoint-grouping-rules.md
       * </pre>
       *
       * <code>string operationName = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearOperationName() {
        
        operationName_ = getDefaultInstance().getOperationName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A logic name represents this span.
       * We don't recommend to include the parameter, such as HTTP request parameters, as a part of the operation, especially this is the name of the entry span.
       * All statistic for the endpoints are aggregated base on this name. Those parameters should be added in the tags if necessary.
       * If in some cases, it have to be a part of the operation name,
       * users should use the Group Parameterized Endpoints capability at the backend to get the meaningful metrics.
       * Read https://github.com/apache/skywalking/blob/master/docs/en/setup/backend/endpoint-grouping-rules.md
       * </pre>
       *
       * <code>string operationName = 6;</code>
       * @param value The bytes for operationName to set.
       * @return This builder for chaining.
       */
      public Builder setOperationNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        operationName_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object peer_ = "";
      /**
       * <pre>
       * Remote address of the peer in RPC/MQ case.
       * This is required when spanType = Exit, as it is a part of the SkyWalking STAM(Streaming Topology Analysis Method).
       * For more details, read https://wu-sheng.github.io/STAM/
       * </pre>
       *
       * <code>string peer = 7;</code>
       * @return The peer.
       */
      public java.lang.String getPeer() {
        java.lang.Object ref = peer_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          peer_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Remote address of the peer in RPC/MQ case.
       * This is required when spanType = Exit, as it is a part of the SkyWalking STAM(Streaming Topology Analysis Method).
       * For more details, read https://wu-sheng.github.io/STAM/
       * </pre>
       *
       * <code>string peer = 7;</code>
       * @return The bytes for peer.
       */
      public com.google.protobuf.ByteString
          getPeerBytes() {
        java.lang.Object ref = peer_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          peer_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Remote address of the peer in RPC/MQ case.
       * This is required when spanType = Exit, as it is a part of the SkyWalking STAM(Streaming Topology Analysis Method).
       * For more details, read https://wu-sheng.github.io/STAM/
       * </pre>
       *
       * <code>string peer = 7;</code>
       * @param value The peer to set.
       * @return This builder for chaining.
       */
      public Builder setPeer(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        peer_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Remote address of the peer in RPC/MQ case.
       * This is required when spanType = Exit, as it is a part of the SkyWalking STAM(Streaming Topology Analysis Method).
       * For more details, read https://wu-sheng.github.io/STAM/
       * </pre>
       *
       * <code>string peer = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearPeer() {
        
        peer_ = getDefaultInstance().getPeer();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Remote address of the peer in RPC/MQ case.
       * This is required when spanType = Exit, as it is a part of the SkyWalking STAM(Streaming Topology Analysis Method).
       * For more details, read https://wu-sheng.github.io/STAM/
       * </pre>
       *
       * <code>string peer = 7;</code>
       * @param value The bytes for peer to set.
       * @return This builder for chaining.
       */
      public Builder setPeerBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        peer_ = value;
        onChanged();
        return this;
      }

      private int spanType_ = 0;
      /**
       * <pre>
       * Span type represents the role in the RPC context.
       * </pre>
       *
       * <code>.segment.v3.SpanType spanType = 8;</code>
       * @return The enum numeric value on the wire for spanType.
       */
      @java.lang.Override public int getSpanTypeValue() {
        return spanType_;
      }
      /**
       * <pre>
       * Span type represents the role in the RPC context.
       * </pre>
       *
       * <code>.segment.v3.SpanType spanType = 8;</code>
       * @param value The enum numeric value on the wire for spanType to set.
       * @return This builder for chaining.
       */
      public Builder setSpanTypeValue(int value) {
        
        spanType_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Span type represents the role in the RPC context.
       * </pre>
       *
       * <code>.segment.v3.SpanType spanType = 8;</code>
       * @return The spanType.
       */
      @java.lang.Override
      public segment.v3.Segment.SpanType getSpanType() {
        @SuppressWarnings("deprecation")
        segment.v3.Segment.SpanType result = segment.v3.Segment.SpanType.valueOf(spanType_);
        return result == null ? segment.v3.Segment.SpanType.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * Span type represents the role in the RPC context.
       * </pre>
       *
       * <code>.segment.v3.SpanType spanType = 8;</code>
       * @param value The spanType to set.
       * @return This builder for chaining.
       */
      public Builder setSpanType(segment.v3.Segment.SpanType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        spanType_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Span type represents the role in the RPC context.
       * </pre>
       *
       * <code>.segment.v3.SpanType spanType = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearSpanType() {
        
        spanType_ = 0;
        onChanged();
        return this;
      }

      private int spanLayer_ = 0;
      /**
       * <pre>
       * Span layer represent the component tech stack, related to the network tech.
       * </pre>
       *
       * <code>.segment.v3.SpanLayer spanLayer = 9;</code>
       * @return The enum numeric value on the wire for spanLayer.
       */
      @java.lang.Override public int getSpanLayerValue() {
        return spanLayer_;
      }
      /**
       * <pre>
       * Span layer represent the component tech stack, related to the network tech.
       * </pre>
       *
       * <code>.segment.v3.SpanLayer spanLayer = 9;</code>
       * @param value The enum numeric value on the wire for spanLayer to set.
       * @return This builder for chaining.
       */
      public Builder setSpanLayerValue(int value) {
        
        spanLayer_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Span layer represent the component tech stack, related to the network tech.
       * </pre>
       *
       * <code>.segment.v3.SpanLayer spanLayer = 9;</code>
       * @return The spanLayer.
       */
      @java.lang.Override
      public segment.v3.Segment.SpanLayer getSpanLayer() {
        @SuppressWarnings("deprecation")
        segment.v3.Segment.SpanLayer result = segment.v3.Segment.SpanLayer.valueOf(spanLayer_);
        return result == null ? segment.v3.Segment.SpanLayer.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * Span layer represent the component tech stack, related to the network tech.
       * </pre>
       *
       * <code>.segment.v3.SpanLayer spanLayer = 9;</code>
       * @param value The spanLayer to set.
       * @return This builder for chaining.
       */
      public Builder setSpanLayer(segment.v3.Segment.SpanLayer value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        spanLayer_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Span layer represent the component tech stack, related to the network tech.
       * </pre>
       *
       * <code>.segment.v3.SpanLayer spanLayer = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearSpanLayer() {
        
        spanLayer_ = 0;
        onChanged();
        return this;
      }

      private int componentId_ ;
      /**
       * <pre>
       * Component id is a predefined number id in the SkyWalking.
       * It represents the framework, tech stack used by this tracked span, such as Spring.
       * All IDs are defined in the https://github.com/apache/skywalking/blob/master/oap-server/server-bootstrap/src/main/resources/component-libraries.yml
       * Send a pull request if you want to add languages, components or mapping definitions,
       * all public components could be accepted.
       * Follow this doc for more details, https://github.com/apache/skywalking/blob/master/docs/en/guides/Component-library-settings.md
       * </pre>
       *
       * <code>int32 componentId = 10;</code>
       * @return The componentId.
       */
      @java.lang.Override
      public int getComponentId() {
        return componentId_;
      }
      /**
       * <pre>
       * Component id is a predefined number id in the SkyWalking.
       * It represents the framework, tech stack used by this tracked span, such as Spring.
       * All IDs are defined in the https://github.com/apache/skywalking/blob/master/oap-server/server-bootstrap/src/main/resources/component-libraries.yml
       * Send a pull request if you want to add languages, components or mapping definitions,
       * all public components could be accepted.
       * Follow this doc for more details, https://github.com/apache/skywalking/blob/master/docs/en/guides/Component-library-settings.md
       * </pre>
       *
       * <code>int32 componentId = 10;</code>
       * @param value The componentId to set.
       * @return This builder for chaining.
       */
      public Builder setComponentId(int value) {
        
        componentId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Component id is a predefined number id in the SkyWalking.
       * It represents the framework, tech stack used by this tracked span, such as Spring.
       * All IDs are defined in the https://github.com/apache/skywalking/blob/master/oap-server/server-bootstrap/src/main/resources/component-libraries.yml
       * Send a pull request if you want to add languages, components or mapping definitions,
       * all public components could be accepted.
       * Follow this doc for more details, https://github.com/apache/skywalking/blob/master/docs/en/guides/Component-library-settings.md
       * </pre>
       *
       * <code>int32 componentId = 10;</code>
       * @return This builder for chaining.
       */
      public Builder clearComponentId() {
        
        componentId_ = 0;
        onChanged();
        return this;
      }

      private boolean isError_ ;
      /**
       * <pre>
       * The status of the span. False means the tracked execution ends in the unexpected status.
       * This affects the successful rate statistic in the backend.
       * Exception or error code happened in the tracked process doesn't mean isError == true, the implementations of agent plugin and tracing SDK make the final decision.
       * </pre>
       *
       * <code>bool isError = 11;</code>
       * @return The isError.
       */
      @java.lang.Override
      public boolean getIsError() {
        return isError_;
      }
      /**
       * <pre>
       * The status of the span. False means the tracked execution ends in the unexpected status.
       * This affects the successful rate statistic in the backend.
       * Exception or error code happened in the tracked process doesn't mean isError == true, the implementations of agent plugin and tracing SDK make the final decision.
       * </pre>
       *
       * <code>bool isError = 11;</code>
       * @param value The isError to set.
       * @return This builder for chaining.
       */
      public Builder setIsError(boolean value) {
        
        isError_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The status of the span. False means the tracked execution ends in the unexpected status.
       * This affects the successful rate statistic in the backend.
       * Exception or error code happened in the tracked process doesn't mean isError == true, the implementations of agent plugin and tracing SDK make the final decision.
       * </pre>
       *
       * <code>bool isError = 11;</code>
       * @return This builder for chaining.
       */
      public Builder clearIsError() {
        
        isError_ = false;
        onChanged();
        return this;
      }

      private java.util.List<segment.v3.Segment.KeyStringValuePair> tags_ =
        java.util.Collections.emptyList();
      private void ensureTagsIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          tags_ = new java.util.ArrayList<segment.v3.Segment.KeyStringValuePair>(tags_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          segment.v3.Segment.KeyStringValuePair, segment.v3.Segment.KeyStringValuePair.Builder, segment.v3.Segment.KeyStringValuePairOrBuilder> tagsBuilder_;

      /**
       * <pre>
       * String key, String value pair.
       * Tags provides more information, includes parameters.
       * In the OAP backend analysis, some special tag or tag combination could provide other advanced features.
       * https://github.com/apache/skywalking/blob/master/docs/en/guides/Java-Plugin-Development-Guide.md#special-span-tags
       * </pre>
       *
       * <code>repeated .segment.v3.KeyStringValuePair tags = 12;</code>
       */
      public java.util.List<segment.v3.Segment.KeyStringValuePair> getTagsList() {
        if (tagsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(tags_);
        } else {
          return tagsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * String key, String value pair.
       * Tags provides more information, includes parameters.
       * In the OAP backend analysis, some special tag or tag combination could provide other advanced features.
       * https://github.com/apache/skywalking/blob/master/docs/en/guides/Java-Plugin-Development-Guide.md#special-span-tags
       * </pre>
       *
       * <code>repeated .segment.v3.KeyStringValuePair tags = 12;</code>
       */
      public int getTagsCount() {
        if (tagsBuilder_ == null) {
          return tags_.size();
        } else {
          return tagsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * String key, String value pair.
       * Tags provides more information, includes parameters.
       * In the OAP backend analysis, some special tag or tag combination could provide other advanced features.
       * https://github.com/apache/skywalking/blob/master/docs/en/guides/Java-Plugin-Development-Guide.md#special-span-tags
       * </pre>
       *
       * <code>repeated .segment.v3.KeyStringValuePair tags = 12;</code>
       */
      public segment.v3.Segment.KeyStringValuePair getTags(int index) {
        if (tagsBuilder_ == null) {
          return tags_.get(index);
        } else {
          return tagsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * String key, String value pair.
       * Tags provides more information, includes parameters.
       * In the OAP backend analysis, some special tag or tag combination could provide other advanced features.
       * https://github.com/apache/skywalking/blob/master/docs/en/guides/Java-Plugin-Development-Guide.md#special-span-tags
       * </pre>
       *
       * <code>repeated .segment.v3.KeyStringValuePair tags = 12;</code>
       */
      public Builder setTags(
          int index, segment.v3.Segment.KeyStringValuePair value) {
        if (tagsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTagsIsMutable();
          tags_.set(index, value);
          onChanged();
        } else {
          tagsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * String key, String value pair.
       * Tags provides more information, includes parameters.
       * In the OAP backend analysis, some special tag or tag combination could provide other advanced features.
       * https://github.com/apache/skywalking/blob/master/docs/en/guides/Java-Plugin-Development-Guide.md#special-span-tags
       * </pre>
       *
       * <code>repeated .segment.v3.KeyStringValuePair tags = 12;</code>
       */
      public Builder setTags(
          int index, segment.v3.Segment.KeyStringValuePair.Builder builderForValue) {
        if (tagsBuilder_ == null) {
          ensureTagsIsMutable();
          tags_.set(index, builderForValue.build());
          onChanged();
        } else {
          tagsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * String key, String value pair.
       * Tags provides more information, includes parameters.
       * In the OAP backend analysis, some special tag or tag combination could provide other advanced features.
       * https://github.com/apache/skywalking/blob/master/docs/en/guides/Java-Plugin-Development-Guide.md#special-span-tags
       * </pre>
       *
       * <code>repeated .segment.v3.KeyStringValuePair tags = 12;</code>
       */
      public Builder addTags(segment.v3.Segment.KeyStringValuePair value) {
        if (tagsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTagsIsMutable();
          tags_.add(value);
          onChanged();
        } else {
          tagsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * String key, String value pair.
       * Tags provides more information, includes parameters.
       * In the OAP backend analysis, some special tag or tag combination could provide other advanced features.
       * https://github.com/apache/skywalking/blob/master/docs/en/guides/Java-Plugin-Development-Guide.md#special-span-tags
       * </pre>
       *
       * <code>repeated .segment.v3.KeyStringValuePair tags = 12;</code>
       */
      public Builder addTags(
          int index, segment.v3.Segment.KeyStringValuePair value) {
        if (tagsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTagsIsMutable();
          tags_.add(index, value);
          onChanged();
        } else {
          tagsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * String key, String value pair.
       * Tags provides more information, includes parameters.
       * In the OAP backend analysis, some special tag or tag combination could provide other advanced features.
       * https://github.com/apache/skywalking/blob/master/docs/en/guides/Java-Plugin-Development-Guide.md#special-span-tags
       * </pre>
       *
       * <code>repeated .segment.v3.KeyStringValuePair tags = 12;</code>
       */
      public Builder addTags(
          segment.v3.Segment.KeyStringValuePair.Builder builderForValue) {
        if (tagsBuilder_ == null) {
          ensureTagsIsMutable();
          tags_.add(builderForValue.build());
          onChanged();
        } else {
          tagsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * String key, String value pair.
       * Tags provides more information, includes parameters.
       * In the OAP backend analysis, some special tag or tag combination could provide other advanced features.
       * https://github.com/apache/skywalking/blob/master/docs/en/guides/Java-Plugin-Development-Guide.md#special-span-tags
       * </pre>
       *
       * <code>repeated .segment.v3.KeyStringValuePair tags = 12;</code>
       */
      public Builder addTags(
          int index, segment.v3.Segment.KeyStringValuePair.Builder builderForValue) {
        if (tagsBuilder_ == null) {
          ensureTagsIsMutable();
          tags_.add(index, builderForValue.build());
          onChanged();
        } else {
          tagsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * String key, String value pair.
       * Tags provides more information, includes parameters.
       * In the OAP backend analysis, some special tag or tag combination could provide other advanced features.
       * https://github.com/apache/skywalking/blob/master/docs/en/guides/Java-Plugin-Development-Guide.md#special-span-tags
       * </pre>
       *
       * <code>repeated .segment.v3.KeyStringValuePair tags = 12;</code>
       */
      public Builder addAllTags(
          java.lang.Iterable<? extends segment.v3.Segment.KeyStringValuePair> values) {
        if (tagsBuilder_ == null) {
          ensureTagsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, tags_);
          onChanged();
        } else {
          tagsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * String key, String value pair.
       * Tags provides more information, includes parameters.
       * In the OAP backend analysis, some special tag or tag combination could provide other advanced features.
       * https://github.com/apache/skywalking/blob/master/docs/en/guides/Java-Plugin-Development-Guide.md#special-span-tags
       * </pre>
       *
       * <code>repeated .segment.v3.KeyStringValuePair tags = 12;</code>
       */
      public Builder clearTags() {
        if (tagsBuilder_ == null) {
          tags_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          tagsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * String key, String value pair.
       * Tags provides more information, includes parameters.
       * In the OAP backend analysis, some special tag or tag combination could provide other advanced features.
       * https://github.com/apache/skywalking/blob/master/docs/en/guides/Java-Plugin-Development-Guide.md#special-span-tags
       * </pre>
       *
       * <code>repeated .segment.v3.KeyStringValuePair tags = 12;</code>
       */
      public Builder removeTags(int index) {
        if (tagsBuilder_ == null) {
          ensureTagsIsMutable();
          tags_.remove(index);
          onChanged();
        } else {
          tagsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * String key, String value pair.
       * Tags provides more information, includes parameters.
       * In the OAP backend analysis, some special tag or tag combination could provide other advanced features.
       * https://github.com/apache/skywalking/blob/master/docs/en/guides/Java-Plugin-Development-Guide.md#special-span-tags
       * </pre>
       *
       * <code>repeated .segment.v3.KeyStringValuePair tags = 12;</code>
       */
      public segment.v3.Segment.KeyStringValuePair.Builder getTagsBuilder(
          int index) {
        return getTagsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * String key, String value pair.
       * Tags provides more information, includes parameters.
       * In the OAP backend analysis, some special tag or tag combination could provide other advanced features.
       * https://github.com/apache/skywalking/blob/master/docs/en/guides/Java-Plugin-Development-Guide.md#special-span-tags
       * </pre>
       *
       * <code>repeated .segment.v3.KeyStringValuePair tags = 12;</code>
       */
      public segment.v3.Segment.KeyStringValuePairOrBuilder getTagsOrBuilder(
          int index) {
        if (tagsBuilder_ == null) {
          return tags_.get(index);  } else {
          return tagsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * String key, String value pair.
       * Tags provides more information, includes parameters.
       * In the OAP backend analysis, some special tag or tag combination could provide other advanced features.
       * https://github.com/apache/skywalking/blob/master/docs/en/guides/Java-Plugin-Development-Guide.md#special-span-tags
       * </pre>
       *
       * <code>repeated .segment.v3.KeyStringValuePair tags = 12;</code>
       */
      public java.util.List<? extends segment.v3.Segment.KeyStringValuePairOrBuilder> 
           getTagsOrBuilderList() {
        if (tagsBuilder_ != null) {
          return tagsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(tags_);
        }
      }
      /**
       * <pre>
       * String key, String value pair.
       * Tags provides more information, includes parameters.
       * In the OAP backend analysis, some special tag or tag combination could provide other advanced features.
       * https://github.com/apache/skywalking/blob/master/docs/en/guides/Java-Plugin-Development-Guide.md#special-span-tags
       * </pre>
       *
       * <code>repeated .segment.v3.KeyStringValuePair tags = 12;</code>
       */
      public segment.v3.Segment.KeyStringValuePair.Builder addTagsBuilder() {
        return getTagsFieldBuilder().addBuilder(
            segment.v3.Segment.KeyStringValuePair.getDefaultInstance());
      }
      /**
       * <pre>
       * String key, String value pair.
       * Tags provides more information, includes parameters.
       * In the OAP backend analysis, some special tag or tag combination could provide other advanced features.
       * https://github.com/apache/skywalking/blob/master/docs/en/guides/Java-Plugin-Development-Guide.md#special-span-tags
       * </pre>
       *
       * <code>repeated .segment.v3.KeyStringValuePair tags = 12;</code>
       */
      public segment.v3.Segment.KeyStringValuePair.Builder addTagsBuilder(
          int index) {
        return getTagsFieldBuilder().addBuilder(
            index, segment.v3.Segment.KeyStringValuePair.getDefaultInstance());
      }
      /**
       * <pre>
       * String key, String value pair.
       * Tags provides more information, includes parameters.
       * In the OAP backend analysis, some special tag or tag combination could provide other advanced features.
       * https://github.com/apache/skywalking/blob/master/docs/en/guides/Java-Plugin-Development-Guide.md#special-span-tags
       * </pre>
       *
       * <code>repeated .segment.v3.KeyStringValuePair tags = 12;</code>
       */
      public java.util.List<segment.v3.Segment.KeyStringValuePair.Builder> 
           getTagsBuilderList() {
        return getTagsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          segment.v3.Segment.KeyStringValuePair, segment.v3.Segment.KeyStringValuePair.Builder, segment.v3.Segment.KeyStringValuePairOrBuilder> 
          getTagsFieldBuilder() {
        if (tagsBuilder_ == null) {
          tagsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              segment.v3.Segment.KeyStringValuePair, segment.v3.Segment.KeyStringValuePair.Builder, segment.v3.Segment.KeyStringValuePairOrBuilder>(
                  tags_,
                  ((bitField0_ & 0x00000002) != 0),
                  getParentForChildren(),
                  isClean());
          tags_ = null;
        }
        return tagsBuilder_;
      }

      private java.util.List<segment.v3.Segment.Log> logs_ =
        java.util.Collections.emptyList();
      private void ensureLogsIsMutable() {
        if (!((bitField0_ & 0x00000004) != 0)) {
          logs_ = new java.util.ArrayList<segment.v3.Segment.Log>(logs_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          segment.v3.Segment.Log, segment.v3.Segment.Log.Builder, segment.v3.Segment.LogOrBuilder> logsBuilder_;

      /**
       * <pre>
       * String key, String value pair with an accurate timestamp.
       * Logging some events happening in the context of the span duration.
       * </pre>
       *
       * <code>repeated .segment.v3.Log logs = 13;</code>
       */
      public java.util.List<segment.v3.Segment.Log> getLogsList() {
        if (logsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(logs_);
        } else {
          return logsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * String key, String value pair with an accurate timestamp.
       * Logging some events happening in the context of the span duration.
       * </pre>
       *
       * <code>repeated .segment.v3.Log logs = 13;</code>
       */
      public int getLogsCount() {
        if (logsBuilder_ == null) {
          return logs_.size();
        } else {
          return logsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * String key, String value pair with an accurate timestamp.
       * Logging some events happening in the context of the span duration.
       * </pre>
       *
       * <code>repeated .segment.v3.Log logs = 13;</code>
       */
      public segment.v3.Segment.Log getLogs(int index) {
        if (logsBuilder_ == null) {
          return logs_.get(index);
        } else {
          return logsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * String key, String value pair with an accurate timestamp.
       * Logging some events happening in the context of the span duration.
       * </pre>
       *
       * <code>repeated .segment.v3.Log logs = 13;</code>
       */
      public Builder setLogs(
          int index, segment.v3.Segment.Log value) {
        if (logsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLogsIsMutable();
          logs_.set(index, value);
          onChanged();
        } else {
          logsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * String key, String value pair with an accurate timestamp.
       * Logging some events happening in the context of the span duration.
       * </pre>
       *
       * <code>repeated .segment.v3.Log logs = 13;</code>
       */
      public Builder setLogs(
          int index, segment.v3.Segment.Log.Builder builderForValue) {
        if (logsBuilder_ == null) {
          ensureLogsIsMutable();
          logs_.set(index, builderForValue.build());
          onChanged();
        } else {
          logsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * String key, String value pair with an accurate timestamp.
       * Logging some events happening in the context of the span duration.
       * </pre>
       *
       * <code>repeated .segment.v3.Log logs = 13;</code>
       */
      public Builder addLogs(segment.v3.Segment.Log value) {
        if (logsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLogsIsMutable();
          logs_.add(value);
          onChanged();
        } else {
          logsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * String key, String value pair with an accurate timestamp.
       * Logging some events happening in the context of the span duration.
       * </pre>
       *
       * <code>repeated .segment.v3.Log logs = 13;</code>
       */
      public Builder addLogs(
          int index, segment.v3.Segment.Log value) {
        if (logsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLogsIsMutable();
          logs_.add(index, value);
          onChanged();
        } else {
          logsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * String key, String value pair with an accurate timestamp.
       * Logging some events happening in the context of the span duration.
       * </pre>
       *
       * <code>repeated .segment.v3.Log logs = 13;</code>
       */
      public Builder addLogs(
          segment.v3.Segment.Log.Builder builderForValue) {
        if (logsBuilder_ == null) {
          ensureLogsIsMutable();
          logs_.add(builderForValue.build());
          onChanged();
        } else {
          logsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * String key, String value pair with an accurate timestamp.
       * Logging some events happening in the context of the span duration.
       * </pre>
       *
       * <code>repeated .segment.v3.Log logs = 13;</code>
       */
      public Builder addLogs(
          int index, segment.v3.Segment.Log.Builder builderForValue) {
        if (logsBuilder_ == null) {
          ensureLogsIsMutable();
          logs_.add(index, builderForValue.build());
          onChanged();
        } else {
          logsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * String key, String value pair with an accurate timestamp.
       * Logging some events happening in the context of the span duration.
       * </pre>
       *
       * <code>repeated .segment.v3.Log logs = 13;</code>
       */
      public Builder addAllLogs(
          java.lang.Iterable<? extends segment.v3.Segment.Log> values) {
        if (logsBuilder_ == null) {
          ensureLogsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, logs_);
          onChanged();
        } else {
          logsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * String key, String value pair with an accurate timestamp.
       * Logging some events happening in the context of the span duration.
       * </pre>
       *
       * <code>repeated .segment.v3.Log logs = 13;</code>
       */
      public Builder clearLogs() {
        if (logsBuilder_ == null) {
          logs_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          logsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * String key, String value pair with an accurate timestamp.
       * Logging some events happening in the context of the span duration.
       * </pre>
       *
       * <code>repeated .segment.v3.Log logs = 13;</code>
       */
      public Builder removeLogs(int index) {
        if (logsBuilder_ == null) {
          ensureLogsIsMutable();
          logs_.remove(index);
          onChanged();
        } else {
          logsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * String key, String value pair with an accurate timestamp.
       * Logging some events happening in the context of the span duration.
       * </pre>
       *
       * <code>repeated .segment.v3.Log logs = 13;</code>
       */
      public segment.v3.Segment.Log.Builder getLogsBuilder(
          int index) {
        return getLogsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * String key, String value pair with an accurate timestamp.
       * Logging some events happening in the context of the span duration.
       * </pre>
       *
       * <code>repeated .segment.v3.Log logs = 13;</code>
       */
      public segment.v3.Segment.LogOrBuilder getLogsOrBuilder(
          int index) {
        if (logsBuilder_ == null) {
          return logs_.get(index);  } else {
          return logsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * String key, String value pair with an accurate timestamp.
       * Logging some events happening in the context of the span duration.
       * </pre>
       *
       * <code>repeated .segment.v3.Log logs = 13;</code>
       */
      public java.util.List<? extends segment.v3.Segment.LogOrBuilder> 
           getLogsOrBuilderList() {
        if (logsBuilder_ != null) {
          return logsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(logs_);
        }
      }
      /**
       * <pre>
       * String key, String value pair with an accurate timestamp.
       * Logging some events happening in the context of the span duration.
       * </pre>
       *
       * <code>repeated .segment.v3.Log logs = 13;</code>
       */
      public segment.v3.Segment.Log.Builder addLogsBuilder() {
        return getLogsFieldBuilder().addBuilder(
            segment.v3.Segment.Log.getDefaultInstance());
      }
      /**
       * <pre>
       * String key, String value pair with an accurate timestamp.
       * Logging some events happening in the context of the span duration.
       * </pre>
       *
       * <code>repeated .segment.v3.Log logs = 13;</code>
       */
      public segment.v3.Segment.Log.Builder addLogsBuilder(
          int index) {
        return getLogsFieldBuilder().addBuilder(
            index, segment.v3.Segment.Log.getDefaultInstance());
      }
      /**
       * <pre>
       * String key, String value pair with an accurate timestamp.
       * Logging some events happening in the context of the span duration.
       * </pre>
       *
       * <code>repeated .segment.v3.Log logs = 13;</code>
       */
      public java.util.List<segment.v3.Segment.Log.Builder> 
           getLogsBuilderList() {
        return getLogsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          segment.v3.Segment.Log, segment.v3.Segment.Log.Builder, segment.v3.Segment.LogOrBuilder> 
          getLogsFieldBuilder() {
        if (logsBuilder_ == null) {
          logsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              segment.v3.Segment.Log, segment.v3.Segment.Log.Builder, segment.v3.Segment.LogOrBuilder>(
                  logs_,
                  ((bitField0_ & 0x00000004) != 0),
                  getParentForChildren(),
                  isClean());
          logs_ = null;
        }
        return logsBuilder_;
      }

      private boolean skipAnalysis_ ;
      /**
       * <pre>
       * Force the backend don't do analysis, if the value is TRUE.
       * The backend has its own configurations to follow or override this.
       * Use this mostly because the agent/SDK could know more context of the service role.
       * </pre>
       *
       * <code>bool skipAnalysis = 14;</code>
       * @return The skipAnalysis.
       */
      @java.lang.Override
      public boolean getSkipAnalysis() {
        return skipAnalysis_;
      }
      /**
       * <pre>
       * Force the backend don't do analysis, if the value is TRUE.
       * The backend has its own configurations to follow or override this.
       * Use this mostly because the agent/SDK could know more context of the service role.
       * </pre>
       *
       * <code>bool skipAnalysis = 14;</code>
       * @param value The skipAnalysis to set.
       * @return This builder for chaining.
       */
      public Builder setSkipAnalysis(boolean value) {
        
        skipAnalysis_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Force the backend don't do analysis, if the value is TRUE.
       * The backend has its own configurations to follow or override this.
       * Use this mostly because the agent/SDK could know more context of the service role.
       * </pre>
       *
       * <code>bool skipAnalysis = 14;</code>
       * @return This builder for chaining.
       */
      public Builder clearSkipAnalysis() {
        
        skipAnalysis_ = false;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:segment.v3.SpanObject)
    }

    // @@protoc_insertion_point(class_scope:segment.v3.SpanObject)
    private static final segment.v3.Segment.SpanObject DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new segment.v3.Segment.SpanObject();
    }

    public static segment.v3.Segment.SpanObject getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SpanObject>
        PARSER = new com.google.protobuf.AbstractParser<SpanObject>() {
      @java.lang.Override
      public SpanObject parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SpanObject(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SpanObject> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SpanObject> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public segment.v3.Segment.SpanObject getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface LogOrBuilder extends
      // @@protoc_insertion_point(interface_extends:segment.v3.Log)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The timestamp in milliseconds of this event.,
     * measured between the current time and midnight, January 1, 1970 UTC.
     * </pre>
     *
     * <code>int64 time = 1;</code>
     * @return The time.
     */
    long getTime();

    /**
     * <pre>
     * String key, String value pair.
     * </pre>
     *
     * <code>repeated .segment.v3.KeyStringValuePair data = 2;</code>
     */
    java.util.List<segment.v3.Segment.KeyStringValuePair> 
        getDataList();
    /**
     * <pre>
     * String key, String value pair.
     * </pre>
     *
     * <code>repeated .segment.v3.KeyStringValuePair data = 2;</code>
     */
    segment.v3.Segment.KeyStringValuePair getData(int index);
    /**
     * <pre>
     * String key, String value pair.
     * </pre>
     *
     * <code>repeated .segment.v3.KeyStringValuePair data = 2;</code>
     */
    int getDataCount();
    /**
     * <pre>
     * String key, String value pair.
     * </pre>
     *
     * <code>repeated .segment.v3.KeyStringValuePair data = 2;</code>
     */
    java.util.List<? extends segment.v3.Segment.KeyStringValuePairOrBuilder> 
        getDataOrBuilderList();
    /**
     * <pre>
     * String key, String value pair.
     * </pre>
     *
     * <code>repeated .segment.v3.KeyStringValuePair data = 2;</code>
     */
    segment.v3.Segment.KeyStringValuePairOrBuilder getDataOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code segment.v3.Log}
   */
  public static final class Log extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:segment.v3.Log)
      LogOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Log.newBuilder() to construct.
    private Log(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Log() {
      data_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Log();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Log(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              time_ = input.readInt64();
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                data_ = new java.util.ArrayList<segment.v3.Segment.KeyStringValuePair>();
                mutable_bitField0_ |= 0x00000001;
              }
              data_.add(
                  input.readMessage(segment.v3.Segment.KeyStringValuePair.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          data_ = java.util.Collections.unmodifiableList(data_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return segment.v3.Segment.internal_static_segment_v3_Log_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return segment.v3.Segment.internal_static_segment_v3_Log_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              segment.v3.Segment.Log.class, segment.v3.Segment.Log.Builder.class);
    }

    public static final int TIME_FIELD_NUMBER = 1;
    private long time_;
    /**
     * <pre>
     * The timestamp in milliseconds of this event.,
     * measured between the current time and midnight, January 1, 1970 UTC.
     * </pre>
     *
     * <code>int64 time = 1;</code>
     * @return The time.
     */
    @java.lang.Override
    public long getTime() {
      return time_;
    }

    public static final int DATA_FIELD_NUMBER = 2;
    private java.util.List<segment.v3.Segment.KeyStringValuePair> data_;
    /**
     * <pre>
     * String key, String value pair.
     * </pre>
     *
     * <code>repeated .segment.v3.KeyStringValuePair data = 2;</code>
     */
    @java.lang.Override
    public java.util.List<segment.v3.Segment.KeyStringValuePair> getDataList() {
      return data_;
    }
    /**
     * <pre>
     * String key, String value pair.
     * </pre>
     *
     * <code>repeated .segment.v3.KeyStringValuePair data = 2;</code>
     */
    @java.lang.Override
    public java.util.List<? extends segment.v3.Segment.KeyStringValuePairOrBuilder> 
        getDataOrBuilderList() {
      return data_;
    }
    /**
     * <pre>
     * String key, String value pair.
     * </pre>
     *
     * <code>repeated .segment.v3.KeyStringValuePair data = 2;</code>
     */
    @java.lang.Override
    public int getDataCount() {
      return data_.size();
    }
    /**
     * <pre>
     * String key, String value pair.
     * </pre>
     *
     * <code>repeated .segment.v3.KeyStringValuePair data = 2;</code>
     */
    @java.lang.Override
    public segment.v3.Segment.KeyStringValuePair getData(int index) {
      return data_.get(index);
    }
    /**
     * <pre>
     * String key, String value pair.
     * </pre>
     *
     * <code>repeated .segment.v3.KeyStringValuePair data = 2;</code>
     */
    @java.lang.Override
    public segment.v3.Segment.KeyStringValuePairOrBuilder getDataOrBuilder(
        int index) {
      return data_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (time_ != 0L) {
        output.writeInt64(1, time_);
      }
      for (int i = 0; i < data_.size(); i++) {
        output.writeMessage(2, data_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (time_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, time_);
      }
      for (int i = 0; i < data_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, data_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof segment.v3.Segment.Log)) {
        return super.equals(obj);
      }
      segment.v3.Segment.Log other = (segment.v3.Segment.Log) obj;

      if (getTime()
          != other.getTime()) return false;
      if (!getDataList()
          .equals(other.getDataList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TIME_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getTime());
      if (getDataCount() > 0) {
        hash = (37 * hash) + DATA_FIELD_NUMBER;
        hash = (53 * hash) + getDataList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static segment.v3.Segment.Log parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static segment.v3.Segment.Log parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static segment.v3.Segment.Log parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static segment.v3.Segment.Log parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static segment.v3.Segment.Log parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static segment.v3.Segment.Log parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static segment.v3.Segment.Log parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static segment.v3.Segment.Log parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static segment.v3.Segment.Log parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static segment.v3.Segment.Log parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static segment.v3.Segment.Log parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static segment.v3.Segment.Log parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(segment.v3.Segment.Log prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code segment.v3.Log}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:segment.v3.Log)
        segment.v3.Segment.LogOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return segment.v3.Segment.internal_static_segment_v3_Log_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return segment.v3.Segment.internal_static_segment_v3_Log_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                segment.v3.Segment.Log.class, segment.v3.Segment.Log.Builder.class);
      }

      // Construct using segment.v3.Segment.Log.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getDataFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        time_ = 0L;

        if (dataBuilder_ == null) {
          data_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          dataBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return segment.v3.Segment.internal_static_segment_v3_Log_descriptor;
      }

      @java.lang.Override
      public segment.v3.Segment.Log getDefaultInstanceForType() {
        return segment.v3.Segment.Log.getDefaultInstance();
      }

      @java.lang.Override
      public segment.v3.Segment.Log build() {
        segment.v3.Segment.Log result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public segment.v3.Segment.Log buildPartial() {
        segment.v3.Segment.Log result = new segment.v3.Segment.Log(this);
        int from_bitField0_ = bitField0_;
        result.time_ = time_;
        if (dataBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            data_ = java.util.Collections.unmodifiableList(data_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.data_ = data_;
        } else {
          result.data_ = dataBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof segment.v3.Segment.Log) {
          return mergeFrom((segment.v3.Segment.Log)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(segment.v3.Segment.Log other) {
        if (other == segment.v3.Segment.Log.getDefaultInstance()) return this;
        if (other.getTime() != 0L) {
          setTime(other.getTime());
        }
        if (dataBuilder_ == null) {
          if (!other.data_.isEmpty()) {
            if (data_.isEmpty()) {
              data_ = other.data_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureDataIsMutable();
              data_.addAll(other.data_);
            }
            onChanged();
          }
        } else {
          if (!other.data_.isEmpty()) {
            if (dataBuilder_.isEmpty()) {
              dataBuilder_.dispose();
              dataBuilder_ = null;
              data_ = other.data_;
              bitField0_ = (bitField0_ & ~0x00000001);
              dataBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getDataFieldBuilder() : null;
            } else {
              dataBuilder_.addAllMessages(other.data_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        segment.v3.Segment.Log parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (segment.v3.Segment.Log) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private long time_ ;
      /**
       * <pre>
       * The timestamp in milliseconds of this event.,
       * measured between the current time and midnight, January 1, 1970 UTC.
       * </pre>
       *
       * <code>int64 time = 1;</code>
       * @return The time.
       */
      @java.lang.Override
      public long getTime() {
        return time_;
      }
      /**
       * <pre>
       * The timestamp in milliseconds of this event.,
       * measured between the current time and midnight, January 1, 1970 UTC.
       * </pre>
       *
       * <code>int64 time = 1;</code>
       * @param value The time to set.
       * @return This builder for chaining.
       */
      public Builder setTime(long value) {
        
        time_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The timestamp in milliseconds of this event.,
       * measured between the current time and midnight, January 1, 1970 UTC.
       * </pre>
       *
       * <code>int64 time = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearTime() {
        
        time_ = 0L;
        onChanged();
        return this;
      }

      private java.util.List<segment.v3.Segment.KeyStringValuePair> data_ =
        java.util.Collections.emptyList();
      private void ensureDataIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          data_ = new java.util.ArrayList<segment.v3.Segment.KeyStringValuePair>(data_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          segment.v3.Segment.KeyStringValuePair, segment.v3.Segment.KeyStringValuePair.Builder, segment.v3.Segment.KeyStringValuePairOrBuilder> dataBuilder_;

      /**
       * <pre>
       * String key, String value pair.
       * </pre>
       *
       * <code>repeated .segment.v3.KeyStringValuePair data = 2;</code>
       */
      public java.util.List<segment.v3.Segment.KeyStringValuePair> getDataList() {
        if (dataBuilder_ == null) {
          return java.util.Collections.unmodifiableList(data_);
        } else {
          return dataBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * String key, String value pair.
       * </pre>
       *
       * <code>repeated .segment.v3.KeyStringValuePair data = 2;</code>
       */
      public int getDataCount() {
        if (dataBuilder_ == null) {
          return data_.size();
        } else {
          return dataBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * String key, String value pair.
       * </pre>
       *
       * <code>repeated .segment.v3.KeyStringValuePair data = 2;</code>
       */
      public segment.v3.Segment.KeyStringValuePair getData(int index) {
        if (dataBuilder_ == null) {
          return data_.get(index);
        } else {
          return dataBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * String key, String value pair.
       * </pre>
       *
       * <code>repeated .segment.v3.KeyStringValuePair data = 2;</code>
       */
      public Builder setData(
          int index, segment.v3.Segment.KeyStringValuePair value) {
        if (dataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDataIsMutable();
          data_.set(index, value);
          onChanged();
        } else {
          dataBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * String key, String value pair.
       * </pre>
       *
       * <code>repeated .segment.v3.KeyStringValuePair data = 2;</code>
       */
      public Builder setData(
          int index, segment.v3.Segment.KeyStringValuePair.Builder builderForValue) {
        if (dataBuilder_ == null) {
          ensureDataIsMutable();
          data_.set(index, builderForValue.build());
          onChanged();
        } else {
          dataBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * String key, String value pair.
       * </pre>
       *
       * <code>repeated .segment.v3.KeyStringValuePair data = 2;</code>
       */
      public Builder addData(segment.v3.Segment.KeyStringValuePair value) {
        if (dataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDataIsMutable();
          data_.add(value);
          onChanged();
        } else {
          dataBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * String key, String value pair.
       * </pre>
       *
       * <code>repeated .segment.v3.KeyStringValuePair data = 2;</code>
       */
      public Builder addData(
          int index, segment.v3.Segment.KeyStringValuePair value) {
        if (dataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDataIsMutable();
          data_.add(index, value);
          onChanged();
        } else {
          dataBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * String key, String value pair.
       * </pre>
       *
       * <code>repeated .segment.v3.KeyStringValuePair data = 2;</code>
       */
      public Builder addData(
          segment.v3.Segment.KeyStringValuePair.Builder builderForValue) {
        if (dataBuilder_ == null) {
          ensureDataIsMutable();
          data_.add(builderForValue.build());
          onChanged();
        } else {
          dataBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * String key, String value pair.
       * </pre>
       *
       * <code>repeated .segment.v3.KeyStringValuePair data = 2;</code>
       */
      public Builder addData(
          int index, segment.v3.Segment.KeyStringValuePair.Builder builderForValue) {
        if (dataBuilder_ == null) {
          ensureDataIsMutable();
          data_.add(index, builderForValue.build());
          onChanged();
        } else {
          dataBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * String key, String value pair.
       * </pre>
       *
       * <code>repeated .segment.v3.KeyStringValuePair data = 2;</code>
       */
      public Builder addAllData(
          java.lang.Iterable<? extends segment.v3.Segment.KeyStringValuePair> values) {
        if (dataBuilder_ == null) {
          ensureDataIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, data_);
          onChanged();
        } else {
          dataBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * String key, String value pair.
       * </pre>
       *
       * <code>repeated .segment.v3.KeyStringValuePair data = 2;</code>
       */
      public Builder clearData() {
        if (dataBuilder_ == null) {
          data_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          dataBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * String key, String value pair.
       * </pre>
       *
       * <code>repeated .segment.v3.KeyStringValuePair data = 2;</code>
       */
      public Builder removeData(int index) {
        if (dataBuilder_ == null) {
          ensureDataIsMutable();
          data_.remove(index);
          onChanged();
        } else {
          dataBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * String key, String value pair.
       * </pre>
       *
       * <code>repeated .segment.v3.KeyStringValuePair data = 2;</code>
       */
      public segment.v3.Segment.KeyStringValuePair.Builder getDataBuilder(
          int index) {
        return getDataFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * String key, String value pair.
       * </pre>
       *
       * <code>repeated .segment.v3.KeyStringValuePair data = 2;</code>
       */
      public segment.v3.Segment.KeyStringValuePairOrBuilder getDataOrBuilder(
          int index) {
        if (dataBuilder_ == null) {
          return data_.get(index);  } else {
          return dataBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * String key, String value pair.
       * </pre>
       *
       * <code>repeated .segment.v3.KeyStringValuePair data = 2;</code>
       */
      public java.util.List<? extends segment.v3.Segment.KeyStringValuePairOrBuilder> 
           getDataOrBuilderList() {
        if (dataBuilder_ != null) {
          return dataBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(data_);
        }
      }
      /**
       * <pre>
       * String key, String value pair.
       * </pre>
       *
       * <code>repeated .segment.v3.KeyStringValuePair data = 2;</code>
       */
      public segment.v3.Segment.KeyStringValuePair.Builder addDataBuilder() {
        return getDataFieldBuilder().addBuilder(
            segment.v3.Segment.KeyStringValuePair.getDefaultInstance());
      }
      /**
       * <pre>
       * String key, String value pair.
       * </pre>
       *
       * <code>repeated .segment.v3.KeyStringValuePair data = 2;</code>
       */
      public segment.v3.Segment.KeyStringValuePair.Builder addDataBuilder(
          int index) {
        return getDataFieldBuilder().addBuilder(
            index, segment.v3.Segment.KeyStringValuePair.getDefaultInstance());
      }
      /**
       * <pre>
       * String key, String value pair.
       * </pre>
       *
       * <code>repeated .segment.v3.KeyStringValuePair data = 2;</code>
       */
      public java.util.List<segment.v3.Segment.KeyStringValuePair.Builder> 
           getDataBuilderList() {
        return getDataFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          segment.v3.Segment.KeyStringValuePair, segment.v3.Segment.KeyStringValuePair.Builder, segment.v3.Segment.KeyStringValuePairOrBuilder> 
          getDataFieldBuilder() {
        if (dataBuilder_ == null) {
          dataBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              segment.v3.Segment.KeyStringValuePair, segment.v3.Segment.KeyStringValuePair.Builder, segment.v3.Segment.KeyStringValuePairOrBuilder>(
                  data_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          data_ = null;
        }
        return dataBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:segment.v3.Log)
    }

    // @@protoc_insertion_point(class_scope:segment.v3.Log)
    private static final segment.v3.Segment.Log DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new segment.v3.Segment.Log();
    }

    public static segment.v3.Segment.Log getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Log>
        PARSER = new com.google.protobuf.AbstractParser<Log>() {
      @java.lang.Override
      public Log parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Log(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Log> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Log> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public segment.v3.Segment.Log getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface IDOrBuilder extends
      // @@protoc_insertion_point(interface_extends:segment.v3.ID)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated string id = 1;</code>
     * @return A list containing the id.
     */
    java.util.List<java.lang.String>
        getIdList();
    /**
     * <code>repeated string id = 1;</code>
     * @return The count of id.
     */
    int getIdCount();
    /**
     * <code>repeated string id = 1;</code>
     * @param index The index of the element to return.
     * @return The id at the given index.
     */
    java.lang.String getId(int index);
    /**
     * <code>repeated string id = 1;</code>
     * @param index The index of the value to return.
     * @return The bytes of the id at the given index.
     */
    com.google.protobuf.ByteString
        getIdBytes(int index);
  }
  /**
   * <pre>
   * A ID could be represented by multiple string sections.
   * </pre>
   *
   * Protobuf type {@code segment.v3.ID}
   */
  public static final class ID extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:segment.v3.ID)
      IDOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ID.newBuilder() to construct.
    private ID(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ID() {
      id_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ID();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ID(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                id_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000001;
              }
              id_.add(s);
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          id_ = id_.getUnmodifiableView();
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return segment.v3.Segment.internal_static_segment_v3_ID_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return segment.v3.Segment.internal_static_segment_v3_ID_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              segment.v3.Segment.ID.class, segment.v3.Segment.ID.Builder.class);
    }

    public static final int ID_FIELD_NUMBER = 1;
    private com.google.protobuf.LazyStringList id_;
    /**
     * <code>repeated string id = 1;</code>
     * @return A list containing the id.
     */
    public com.google.protobuf.ProtocolStringList
        getIdList() {
      return id_;
    }
    /**
     * <code>repeated string id = 1;</code>
     * @return The count of id.
     */
    public int getIdCount() {
      return id_.size();
    }
    /**
     * <code>repeated string id = 1;</code>
     * @param index The index of the element to return.
     * @return The id at the given index.
     */
    public java.lang.String getId(int index) {
      return id_.get(index);
    }
    /**
     * <code>repeated string id = 1;</code>
     * @param index The index of the value to return.
     * @return The bytes of the id at the given index.
     */
    public com.google.protobuf.ByteString
        getIdBytes(int index) {
      return id_.getByteString(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < id_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, id_.getRaw(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < id_.size(); i++) {
          dataSize += computeStringSizeNoTag(id_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getIdList().size();
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof segment.v3.Segment.ID)) {
        return super.equals(obj);
      }
      segment.v3.Segment.ID other = (segment.v3.Segment.ID) obj;

      if (!getIdList()
          .equals(other.getIdList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getIdCount() > 0) {
        hash = (37 * hash) + ID_FIELD_NUMBER;
        hash = (53 * hash) + getIdList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static segment.v3.Segment.ID parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static segment.v3.Segment.ID parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static segment.v3.Segment.ID parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static segment.v3.Segment.ID parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static segment.v3.Segment.ID parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static segment.v3.Segment.ID parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static segment.v3.Segment.ID parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static segment.v3.Segment.ID parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static segment.v3.Segment.ID parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static segment.v3.Segment.ID parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static segment.v3.Segment.ID parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static segment.v3.Segment.ID parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(segment.v3.Segment.ID prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * A ID could be represented by multiple string sections.
     * </pre>
     *
     * Protobuf type {@code segment.v3.ID}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:segment.v3.ID)
        segment.v3.Segment.IDOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return segment.v3.Segment.internal_static_segment_v3_ID_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return segment.v3.Segment.internal_static_segment_v3_ID_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                segment.v3.Segment.ID.class, segment.v3.Segment.ID.Builder.class);
      }

      // Construct using segment.v3.Segment.ID.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        id_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return segment.v3.Segment.internal_static_segment_v3_ID_descriptor;
      }

      @java.lang.Override
      public segment.v3.Segment.ID getDefaultInstanceForType() {
        return segment.v3.Segment.ID.getDefaultInstance();
      }

      @java.lang.Override
      public segment.v3.Segment.ID build() {
        segment.v3.Segment.ID result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public segment.v3.Segment.ID buildPartial() {
        segment.v3.Segment.ID result = new segment.v3.Segment.ID(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) != 0)) {
          id_ = id_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.id_ = id_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof segment.v3.Segment.ID) {
          return mergeFrom((segment.v3.Segment.ID)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(segment.v3.Segment.ID other) {
        if (other == segment.v3.Segment.ID.getDefaultInstance()) return this;
        if (!other.id_.isEmpty()) {
          if (id_.isEmpty()) {
            id_ = other.id_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureIdIsMutable();
            id_.addAll(other.id_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        segment.v3.Segment.ID parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (segment.v3.Segment.ID) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.LazyStringList id_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureIdIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          id_ = new com.google.protobuf.LazyStringArrayList(id_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <code>repeated string id = 1;</code>
       * @return A list containing the id.
       */
      public com.google.protobuf.ProtocolStringList
          getIdList() {
        return id_.getUnmodifiableView();
      }
      /**
       * <code>repeated string id = 1;</code>
       * @return The count of id.
       */
      public int getIdCount() {
        return id_.size();
      }
      /**
       * <code>repeated string id = 1;</code>
       * @param index The index of the element to return.
       * @return The id at the given index.
       */
      public java.lang.String getId(int index) {
        return id_.get(index);
      }
      /**
       * <code>repeated string id = 1;</code>
       * @param index The index of the value to return.
       * @return The bytes of the id at the given index.
       */
      public com.google.protobuf.ByteString
          getIdBytes(int index) {
        return id_.getByteString(index);
      }
      /**
       * <code>repeated string id = 1;</code>
       * @param index The index to set the value at.
       * @param value The id to set.
       * @return This builder for chaining.
       */
      public Builder setId(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureIdIsMutable();
        id_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string id = 1;</code>
       * @param value The id to add.
       * @return This builder for chaining.
       */
      public Builder addId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureIdIsMutable();
        id_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string id = 1;</code>
       * @param values The id to add.
       * @return This builder for chaining.
       */
      public Builder addAllId(
          java.lang.Iterable<java.lang.String> values) {
        ensureIdIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, id_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearId() {
        id_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string id = 1;</code>
       * @param value The bytes of the id to add.
       * @return This builder for chaining.
       */
      public Builder addIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        ensureIdIsMutable();
        id_.add(value);
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:segment.v3.ID)
    }

    // @@protoc_insertion_point(class_scope:segment.v3.ID)
    private static final segment.v3.Segment.ID DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new segment.v3.Segment.ID();
    }

    public static segment.v3.Segment.ID getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ID>
        PARSER = new com.google.protobuf.AbstractParser<ID>() {
      @java.lang.Override
      public ID parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ID(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ID> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ID> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public segment.v3.Segment.ID getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SegmentCollectionOrBuilder extends
      // @@protoc_insertion_point(interface_extends:segment.v3.SegmentCollection)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .segment.v3.SegmentObject segments = 1;</code>
     */
    java.util.List<segment.v3.Segment.SegmentObject> 
        getSegmentsList();
    /**
     * <code>repeated .segment.v3.SegmentObject segments = 1;</code>
     */
    segment.v3.Segment.SegmentObject getSegments(int index);
    /**
     * <code>repeated .segment.v3.SegmentObject segments = 1;</code>
     */
    int getSegmentsCount();
    /**
     * <code>repeated .segment.v3.SegmentObject segments = 1;</code>
     */
    java.util.List<? extends segment.v3.Segment.SegmentObjectOrBuilder> 
        getSegmentsOrBuilderList();
    /**
     * <code>repeated .segment.v3.SegmentObject segments = 1;</code>
     */
    segment.v3.Segment.SegmentObjectOrBuilder getSegmentsOrBuilder(
        int index);
  }
  /**
   * <pre>
   * The segment collections for trace report in batch and sync mode.
   * </pre>
   *
   * Protobuf type {@code segment.v3.SegmentCollection}
   */
  public static final class SegmentCollection extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:segment.v3.SegmentCollection)
      SegmentCollectionOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SegmentCollection.newBuilder() to construct.
    private SegmentCollection(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SegmentCollection() {
      segments_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new SegmentCollection();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private SegmentCollection(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                segments_ = new java.util.ArrayList<segment.v3.Segment.SegmentObject>();
                mutable_bitField0_ |= 0x00000001;
              }
              segments_.add(
                  input.readMessage(segment.v3.Segment.SegmentObject.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          segments_ = java.util.Collections.unmodifiableList(segments_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return segment.v3.Segment.internal_static_segment_v3_SegmentCollection_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return segment.v3.Segment.internal_static_segment_v3_SegmentCollection_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              segment.v3.Segment.SegmentCollection.class, segment.v3.Segment.SegmentCollection.Builder.class);
    }

    public static final int SEGMENTS_FIELD_NUMBER = 1;
    private java.util.List<segment.v3.Segment.SegmentObject> segments_;
    /**
     * <code>repeated .segment.v3.SegmentObject segments = 1;</code>
     */
    @java.lang.Override
    public java.util.List<segment.v3.Segment.SegmentObject> getSegmentsList() {
      return segments_;
    }
    /**
     * <code>repeated .segment.v3.SegmentObject segments = 1;</code>
     */
    @java.lang.Override
    public java.util.List<? extends segment.v3.Segment.SegmentObjectOrBuilder> 
        getSegmentsOrBuilderList() {
      return segments_;
    }
    /**
     * <code>repeated .segment.v3.SegmentObject segments = 1;</code>
     */
    @java.lang.Override
    public int getSegmentsCount() {
      return segments_.size();
    }
    /**
     * <code>repeated .segment.v3.SegmentObject segments = 1;</code>
     */
    @java.lang.Override
    public segment.v3.Segment.SegmentObject getSegments(int index) {
      return segments_.get(index);
    }
    /**
     * <code>repeated .segment.v3.SegmentObject segments = 1;</code>
     */
    @java.lang.Override
    public segment.v3.Segment.SegmentObjectOrBuilder getSegmentsOrBuilder(
        int index) {
      return segments_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < segments_.size(); i++) {
        output.writeMessage(1, segments_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < segments_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, segments_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof segment.v3.Segment.SegmentCollection)) {
        return super.equals(obj);
      }
      segment.v3.Segment.SegmentCollection other = (segment.v3.Segment.SegmentCollection) obj;

      if (!getSegmentsList()
          .equals(other.getSegmentsList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getSegmentsCount() > 0) {
        hash = (37 * hash) + SEGMENTS_FIELD_NUMBER;
        hash = (53 * hash) + getSegmentsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static segment.v3.Segment.SegmentCollection parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static segment.v3.Segment.SegmentCollection parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static segment.v3.Segment.SegmentCollection parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static segment.v3.Segment.SegmentCollection parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static segment.v3.Segment.SegmentCollection parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static segment.v3.Segment.SegmentCollection parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static segment.v3.Segment.SegmentCollection parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static segment.v3.Segment.SegmentCollection parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static segment.v3.Segment.SegmentCollection parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static segment.v3.Segment.SegmentCollection parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static segment.v3.Segment.SegmentCollection parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static segment.v3.Segment.SegmentCollection parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(segment.v3.Segment.SegmentCollection prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * The segment collections for trace report in batch and sync mode.
     * </pre>
     *
     * Protobuf type {@code segment.v3.SegmentCollection}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:segment.v3.SegmentCollection)
        segment.v3.Segment.SegmentCollectionOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return segment.v3.Segment.internal_static_segment_v3_SegmentCollection_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return segment.v3.Segment.internal_static_segment_v3_SegmentCollection_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                segment.v3.Segment.SegmentCollection.class, segment.v3.Segment.SegmentCollection.Builder.class);
      }

      // Construct using segment.v3.Segment.SegmentCollection.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getSegmentsFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (segmentsBuilder_ == null) {
          segments_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          segmentsBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return segment.v3.Segment.internal_static_segment_v3_SegmentCollection_descriptor;
      }

      @java.lang.Override
      public segment.v3.Segment.SegmentCollection getDefaultInstanceForType() {
        return segment.v3.Segment.SegmentCollection.getDefaultInstance();
      }

      @java.lang.Override
      public segment.v3.Segment.SegmentCollection build() {
        segment.v3.Segment.SegmentCollection result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public segment.v3.Segment.SegmentCollection buildPartial() {
        segment.v3.Segment.SegmentCollection result = new segment.v3.Segment.SegmentCollection(this);
        int from_bitField0_ = bitField0_;
        if (segmentsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            segments_ = java.util.Collections.unmodifiableList(segments_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.segments_ = segments_;
        } else {
          result.segments_ = segmentsBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof segment.v3.Segment.SegmentCollection) {
          return mergeFrom((segment.v3.Segment.SegmentCollection)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(segment.v3.Segment.SegmentCollection other) {
        if (other == segment.v3.Segment.SegmentCollection.getDefaultInstance()) return this;
        if (segmentsBuilder_ == null) {
          if (!other.segments_.isEmpty()) {
            if (segments_.isEmpty()) {
              segments_ = other.segments_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureSegmentsIsMutable();
              segments_.addAll(other.segments_);
            }
            onChanged();
          }
        } else {
          if (!other.segments_.isEmpty()) {
            if (segmentsBuilder_.isEmpty()) {
              segmentsBuilder_.dispose();
              segmentsBuilder_ = null;
              segments_ = other.segments_;
              bitField0_ = (bitField0_ & ~0x00000001);
              segmentsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getSegmentsFieldBuilder() : null;
            } else {
              segmentsBuilder_.addAllMessages(other.segments_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        segment.v3.Segment.SegmentCollection parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (segment.v3.Segment.SegmentCollection) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<segment.v3.Segment.SegmentObject> segments_ =
        java.util.Collections.emptyList();
      private void ensureSegmentsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          segments_ = new java.util.ArrayList<segment.v3.Segment.SegmentObject>(segments_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          segment.v3.Segment.SegmentObject, segment.v3.Segment.SegmentObject.Builder, segment.v3.Segment.SegmentObjectOrBuilder> segmentsBuilder_;

      /**
       * <code>repeated .segment.v3.SegmentObject segments = 1;</code>
       */
      public java.util.List<segment.v3.Segment.SegmentObject> getSegmentsList() {
        if (segmentsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(segments_);
        } else {
          return segmentsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .segment.v3.SegmentObject segments = 1;</code>
       */
      public int getSegmentsCount() {
        if (segmentsBuilder_ == null) {
          return segments_.size();
        } else {
          return segmentsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .segment.v3.SegmentObject segments = 1;</code>
       */
      public segment.v3.Segment.SegmentObject getSegments(int index) {
        if (segmentsBuilder_ == null) {
          return segments_.get(index);
        } else {
          return segmentsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .segment.v3.SegmentObject segments = 1;</code>
       */
      public Builder setSegments(
          int index, segment.v3.Segment.SegmentObject value) {
        if (segmentsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSegmentsIsMutable();
          segments_.set(index, value);
          onChanged();
        } else {
          segmentsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .segment.v3.SegmentObject segments = 1;</code>
       */
      public Builder setSegments(
          int index, segment.v3.Segment.SegmentObject.Builder builderForValue) {
        if (segmentsBuilder_ == null) {
          ensureSegmentsIsMutable();
          segments_.set(index, builderForValue.build());
          onChanged();
        } else {
          segmentsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .segment.v3.SegmentObject segments = 1;</code>
       */
      public Builder addSegments(segment.v3.Segment.SegmentObject value) {
        if (segmentsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSegmentsIsMutable();
          segments_.add(value);
          onChanged();
        } else {
          segmentsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .segment.v3.SegmentObject segments = 1;</code>
       */
      public Builder addSegments(
          int index, segment.v3.Segment.SegmentObject value) {
        if (segmentsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSegmentsIsMutable();
          segments_.add(index, value);
          onChanged();
        } else {
          segmentsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .segment.v3.SegmentObject segments = 1;</code>
       */
      public Builder addSegments(
          segment.v3.Segment.SegmentObject.Builder builderForValue) {
        if (segmentsBuilder_ == null) {
          ensureSegmentsIsMutable();
          segments_.add(builderForValue.build());
          onChanged();
        } else {
          segmentsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .segment.v3.SegmentObject segments = 1;</code>
       */
      public Builder addSegments(
          int index, segment.v3.Segment.SegmentObject.Builder builderForValue) {
        if (segmentsBuilder_ == null) {
          ensureSegmentsIsMutable();
          segments_.add(index, builderForValue.build());
          onChanged();
        } else {
          segmentsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .segment.v3.SegmentObject segments = 1;</code>
       */
      public Builder addAllSegments(
          java.lang.Iterable<? extends segment.v3.Segment.SegmentObject> values) {
        if (segmentsBuilder_ == null) {
          ensureSegmentsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, segments_);
          onChanged();
        } else {
          segmentsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .segment.v3.SegmentObject segments = 1;</code>
       */
      public Builder clearSegments() {
        if (segmentsBuilder_ == null) {
          segments_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          segmentsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .segment.v3.SegmentObject segments = 1;</code>
       */
      public Builder removeSegments(int index) {
        if (segmentsBuilder_ == null) {
          ensureSegmentsIsMutable();
          segments_.remove(index);
          onChanged();
        } else {
          segmentsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .segment.v3.SegmentObject segments = 1;</code>
       */
      public segment.v3.Segment.SegmentObject.Builder getSegmentsBuilder(
          int index) {
        return getSegmentsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .segment.v3.SegmentObject segments = 1;</code>
       */
      public segment.v3.Segment.SegmentObjectOrBuilder getSegmentsOrBuilder(
          int index) {
        if (segmentsBuilder_ == null) {
          return segments_.get(index);  } else {
          return segmentsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .segment.v3.SegmentObject segments = 1;</code>
       */
      public java.util.List<? extends segment.v3.Segment.SegmentObjectOrBuilder> 
           getSegmentsOrBuilderList() {
        if (segmentsBuilder_ != null) {
          return segmentsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(segments_);
        }
      }
      /**
       * <code>repeated .segment.v3.SegmentObject segments = 1;</code>
       */
      public segment.v3.Segment.SegmentObject.Builder addSegmentsBuilder() {
        return getSegmentsFieldBuilder().addBuilder(
            segment.v3.Segment.SegmentObject.getDefaultInstance());
      }
      /**
       * <code>repeated .segment.v3.SegmentObject segments = 1;</code>
       */
      public segment.v3.Segment.SegmentObject.Builder addSegmentsBuilder(
          int index) {
        return getSegmentsFieldBuilder().addBuilder(
            index, segment.v3.Segment.SegmentObject.getDefaultInstance());
      }
      /**
       * <code>repeated .segment.v3.SegmentObject segments = 1;</code>
       */
      public java.util.List<segment.v3.Segment.SegmentObject.Builder> 
           getSegmentsBuilderList() {
        return getSegmentsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          segment.v3.Segment.SegmentObject, segment.v3.Segment.SegmentObject.Builder, segment.v3.Segment.SegmentObjectOrBuilder> 
          getSegmentsFieldBuilder() {
        if (segmentsBuilder_ == null) {
          segmentsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              segment.v3.Segment.SegmentObject, segment.v3.Segment.SegmentObject.Builder, segment.v3.Segment.SegmentObjectOrBuilder>(
                  segments_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          segments_ = null;
        }
        return segmentsBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:segment.v3.SegmentCollection)
    }

    // @@protoc_insertion_point(class_scope:segment.v3.SegmentCollection)
    private static final segment.v3.Segment.SegmentCollection DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new segment.v3.Segment.SegmentCollection();
    }

    public static segment.v3.Segment.SegmentCollection getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SegmentCollection>
        PARSER = new com.google.protobuf.AbstractParser<SegmentCollection>() {
      @java.lang.Override
      public SegmentCollection parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SegmentCollection(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SegmentCollection> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SegmentCollection> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public segment.v3.Segment.SegmentCollection getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface KeyStringValuePairOrBuilder extends
      // @@protoc_insertion_point(interface_extends:segment.v3.KeyStringValuePair)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string key = 1;</code>
     * @return The key.
     */
    java.lang.String getKey();
    /**
     * <code>string key = 1;</code>
     * @return The bytes for key.
     */
    com.google.protobuf.ByteString
        getKeyBytes();

    /**
     * <code>string value = 2;</code>
     * @return The value.
     */
    java.lang.String getValue();
    /**
     * <code>string value = 2;</code>
     * @return The bytes for value.
     */
    com.google.protobuf.ByteString
        getValueBytes();
  }
  /**
   * Protobuf type {@code segment.v3.KeyStringValuePair}
   */
  public static final class KeyStringValuePair extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:segment.v3.KeyStringValuePair)
      KeyStringValuePairOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use KeyStringValuePair.newBuilder() to construct.
    private KeyStringValuePair(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private KeyStringValuePair() {
      key_ = "";
      value_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new KeyStringValuePair();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private KeyStringValuePair(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              key_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              value_ = s;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return segment.v3.Segment.internal_static_segment_v3_KeyStringValuePair_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return segment.v3.Segment.internal_static_segment_v3_KeyStringValuePair_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              segment.v3.Segment.KeyStringValuePair.class, segment.v3.Segment.KeyStringValuePair.Builder.class);
    }

    public static final int KEY_FIELD_NUMBER = 1;
    private volatile java.lang.Object key_;
    /**
     * <code>string key = 1;</code>
     * @return The key.
     */
    @java.lang.Override
    public java.lang.String getKey() {
      java.lang.Object ref = key_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        key_ = s;
        return s;
      }
    }
    /**
     * <code>string key = 1;</code>
     * @return The bytes for key.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getKeyBytes() {
      java.lang.Object ref = key_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        key_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int VALUE_FIELD_NUMBER = 2;
    private volatile java.lang.Object value_;
    /**
     * <code>string value = 2;</code>
     * @return The value.
     */
    @java.lang.Override
    public java.lang.String getValue() {
      java.lang.Object ref = value_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        value_ = s;
        return s;
      }
    }
    /**
     * <code>string value = 2;</code>
     * @return The bytes for value.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getValueBytes() {
      java.lang.Object ref = value_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        value_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(key_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, key_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(value_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, value_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(key_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, key_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(value_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, value_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof segment.v3.Segment.KeyStringValuePair)) {
        return super.equals(obj);
      }
      segment.v3.Segment.KeyStringValuePair other = (segment.v3.Segment.KeyStringValuePair) obj;

      if (!getKey()
          .equals(other.getKey())) return false;
      if (!getValue()
          .equals(other.getValue())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + KEY_FIELD_NUMBER;
      hash = (53 * hash) + getKey().hashCode();
      hash = (37 * hash) + VALUE_FIELD_NUMBER;
      hash = (53 * hash) + getValue().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static segment.v3.Segment.KeyStringValuePair parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static segment.v3.Segment.KeyStringValuePair parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static segment.v3.Segment.KeyStringValuePair parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static segment.v3.Segment.KeyStringValuePair parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static segment.v3.Segment.KeyStringValuePair parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static segment.v3.Segment.KeyStringValuePair parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static segment.v3.Segment.KeyStringValuePair parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static segment.v3.Segment.KeyStringValuePair parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static segment.v3.Segment.KeyStringValuePair parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static segment.v3.Segment.KeyStringValuePair parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static segment.v3.Segment.KeyStringValuePair parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static segment.v3.Segment.KeyStringValuePair parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(segment.v3.Segment.KeyStringValuePair prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code segment.v3.KeyStringValuePair}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:segment.v3.KeyStringValuePair)
        segment.v3.Segment.KeyStringValuePairOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return segment.v3.Segment.internal_static_segment_v3_KeyStringValuePair_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return segment.v3.Segment.internal_static_segment_v3_KeyStringValuePair_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                segment.v3.Segment.KeyStringValuePair.class, segment.v3.Segment.KeyStringValuePair.Builder.class);
      }

      // Construct using segment.v3.Segment.KeyStringValuePair.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        key_ = "";

        value_ = "";

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return segment.v3.Segment.internal_static_segment_v3_KeyStringValuePair_descriptor;
      }

      @java.lang.Override
      public segment.v3.Segment.KeyStringValuePair getDefaultInstanceForType() {
        return segment.v3.Segment.KeyStringValuePair.getDefaultInstance();
      }

      @java.lang.Override
      public segment.v3.Segment.KeyStringValuePair build() {
        segment.v3.Segment.KeyStringValuePair result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public segment.v3.Segment.KeyStringValuePair buildPartial() {
        segment.v3.Segment.KeyStringValuePair result = new segment.v3.Segment.KeyStringValuePair(this);
        result.key_ = key_;
        result.value_ = value_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof segment.v3.Segment.KeyStringValuePair) {
          return mergeFrom((segment.v3.Segment.KeyStringValuePair)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(segment.v3.Segment.KeyStringValuePair other) {
        if (other == segment.v3.Segment.KeyStringValuePair.getDefaultInstance()) return this;
        if (!other.getKey().isEmpty()) {
          key_ = other.key_;
          onChanged();
        }
        if (!other.getValue().isEmpty()) {
          value_ = other.value_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        segment.v3.Segment.KeyStringValuePair parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (segment.v3.Segment.KeyStringValuePair) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object key_ = "";
      /**
       * <code>string key = 1;</code>
       * @return The key.
       */
      public java.lang.String getKey() {
        java.lang.Object ref = key_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          key_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string key = 1;</code>
       * @return The bytes for key.
       */
      public com.google.protobuf.ByteString
          getKeyBytes() {
        java.lang.Object ref = key_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          key_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string key = 1;</code>
       * @param value The key to set.
       * @return This builder for chaining.
       */
      public Builder setKey(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        key_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string key = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearKey() {
        
        key_ = getDefaultInstance().getKey();
        onChanged();
        return this;
      }
      /**
       * <code>string key = 1;</code>
       * @param value The bytes for key to set.
       * @return This builder for chaining.
       */
      public Builder setKeyBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        key_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object value_ = "";
      /**
       * <code>string value = 2;</code>
       * @return The value.
       */
      public java.lang.String getValue() {
        java.lang.Object ref = value_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          value_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string value = 2;</code>
       * @return The bytes for value.
       */
      public com.google.protobuf.ByteString
          getValueBytes() {
        java.lang.Object ref = value_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          value_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string value = 2;</code>
       * @param value The value to set.
       * @return This builder for chaining.
       */
      public Builder setValue(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        value_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string value = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearValue() {
        
        value_ = getDefaultInstance().getValue();
        onChanged();
        return this;
      }
      /**
       * <code>string value = 2;</code>
       * @param value The bytes for value to set.
       * @return This builder for chaining.
       */
      public Builder setValueBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        value_ = value;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:segment.v3.KeyStringValuePair)
    }

    // @@protoc_insertion_point(class_scope:segment.v3.KeyStringValuePair)
    private static final segment.v3.Segment.KeyStringValuePair DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new segment.v3.Segment.KeyStringValuePair();
    }

    public static segment.v3.Segment.KeyStringValuePair getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<KeyStringValuePair>
        PARSER = new com.google.protobuf.AbstractParser<KeyStringValuePair>() {
      @java.lang.Override
      public KeyStringValuePair parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new KeyStringValuePair(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<KeyStringValuePair> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<KeyStringValuePair> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public segment.v3.Segment.KeyStringValuePair getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface KeyIntValuePairOrBuilder extends
      // @@protoc_insertion_point(interface_extends:segment.v3.KeyIntValuePair)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string key = 1;</code>
     * @return The key.
     */
    java.lang.String getKey();
    /**
     * <code>string key = 1;</code>
     * @return The bytes for key.
     */
    com.google.protobuf.ByteString
        getKeyBytes();

    /**
     * <code>int64 value = 2;</code>
     * @return The value.
     */
    long getValue();
  }
  /**
   * <pre>
   * since v3.1
   * An extension of KeyStringValuePair represents a kind of metric value for the key.
   * </pre>
   *
   * Protobuf type {@code segment.v3.KeyIntValuePair}
   */
  public static final class KeyIntValuePair extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:segment.v3.KeyIntValuePair)
      KeyIntValuePairOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use KeyIntValuePair.newBuilder() to construct.
    private KeyIntValuePair(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private KeyIntValuePair() {
      key_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new KeyIntValuePair();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private KeyIntValuePair(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              key_ = s;
              break;
            }
            case 16: {

              value_ = input.readInt64();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return segment.v3.Segment.internal_static_segment_v3_KeyIntValuePair_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return segment.v3.Segment.internal_static_segment_v3_KeyIntValuePair_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              segment.v3.Segment.KeyIntValuePair.class, segment.v3.Segment.KeyIntValuePair.Builder.class);
    }

    public static final int KEY_FIELD_NUMBER = 1;
    private volatile java.lang.Object key_;
    /**
     * <code>string key = 1;</code>
     * @return The key.
     */
    @java.lang.Override
    public java.lang.String getKey() {
      java.lang.Object ref = key_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        key_ = s;
        return s;
      }
    }
    /**
     * <code>string key = 1;</code>
     * @return The bytes for key.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getKeyBytes() {
      java.lang.Object ref = key_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        key_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int VALUE_FIELD_NUMBER = 2;
    private long value_;
    /**
     * <code>int64 value = 2;</code>
     * @return The value.
     */
    @java.lang.Override
    public long getValue() {
      return value_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(key_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, key_);
      }
      if (value_ != 0L) {
        output.writeInt64(2, value_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(key_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, key_);
      }
      if (value_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, value_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof segment.v3.Segment.KeyIntValuePair)) {
        return super.equals(obj);
      }
      segment.v3.Segment.KeyIntValuePair other = (segment.v3.Segment.KeyIntValuePair) obj;

      if (!getKey()
          .equals(other.getKey())) return false;
      if (getValue()
          != other.getValue()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + KEY_FIELD_NUMBER;
      hash = (53 * hash) + getKey().hashCode();
      hash = (37 * hash) + VALUE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getValue());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static segment.v3.Segment.KeyIntValuePair parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static segment.v3.Segment.KeyIntValuePair parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static segment.v3.Segment.KeyIntValuePair parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static segment.v3.Segment.KeyIntValuePair parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static segment.v3.Segment.KeyIntValuePair parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static segment.v3.Segment.KeyIntValuePair parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static segment.v3.Segment.KeyIntValuePair parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static segment.v3.Segment.KeyIntValuePair parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static segment.v3.Segment.KeyIntValuePair parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static segment.v3.Segment.KeyIntValuePair parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static segment.v3.Segment.KeyIntValuePair parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static segment.v3.Segment.KeyIntValuePair parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(segment.v3.Segment.KeyIntValuePair prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * since v3.1
     * An extension of KeyStringValuePair represents a kind of metric value for the key.
     * </pre>
     *
     * Protobuf type {@code segment.v3.KeyIntValuePair}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:segment.v3.KeyIntValuePair)
        segment.v3.Segment.KeyIntValuePairOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return segment.v3.Segment.internal_static_segment_v3_KeyIntValuePair_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return segment.v3.Segment.internal_static_segment_v3_KeyIntValuePair_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                segment.v3.Segment.KeyIntValuePair.class, segment.v3.Segment.KeyIntValuePair.Builder.class);
      }

      // Construct using segment.v3.Segment.KeyIntValuePair.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        key_ = "";

        value_ = 0L;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return segment.v3.Segment.internal_static_segment_v3_KeyIntValuePair_descriptor;
      }

      @java.lang.Override
      public segment.v3.Segment.KeyIntValuePair getDefaultInstanceForType() {
        return segment.v3.Segment.KeyIntValuePair.getDefaultInstance();
      }

      @java.lang.Override
      public segment.v3.Segment.KeyIntValuePair build() {
        segment.v3.Segment.KeyIntValuePair result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public segment.v3.Segment.KeyIntValuePair buildPartial() {
        segment.v3.Segment.KeyIntValuePair result = new segment.v3.Segment.KeyIntValuePair(this);
        result.key_ = key_;
        result.value_ = value_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof segment.v3.Segment.KeyIntValuePair) {
          return mergeFrom((segment.v3.Segment.KeyIntValuePair)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(segment.v3.Segment.KeyIntValuePair other) {
        if (other == segment.v3.Segment.KeyIntValuePair.getDefaultInstance()) return this;
        if (!other.getKey().isEmpty()) {
          key_ = other.key_;
          onChanged();
        }
        if (other.getValue() != 0L) {
          setValue(other.getValue());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        segment.v3.Segment.KeyIntValuePair parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (segment.v3.Segment.KeyIntValuePair) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object key_ = "";
      /**
       * <code>string key = 1;</code>
       * @return The key.
       */
      public java.lang.String getKey() {
        java.lang.Object ref = key_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          key_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string key = 1;</code>
       * @return The bytes for key.
       */
      public com.google.protobuf.ByteString
          getKeyBytes() {
        java.lang.Object ref = key_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          key_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string key = 1;</code>
       * @param value The key to set.
       * @return This builder for chaining.
       */
      public Builder setKey(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        key_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string key = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearKey() {
        
        key_ = getDefaultInstance().getKey();
        onChanged();
        return this;
      }
      /**
       * <code>string key = 1;</code>
       * @param value The bytes for key to set.
       * @return This builder for chaining.
       */
      public Builder setKeyBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        key_ = value;
        onChanged();
        return this;
      }

      private long value_ ;
      /**
       * <code>int64 value = 2;</code>
       * @return The value.
       */
      @java.lang.Override
      public long getValue() {
        return value_;
      }
      /**
       * <code>int64 value = 2;</code>
       * @param value The value to set.
       * @return This builder for chaining.
       */
      public Builder setValue(long value) {
        
        value_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int64 value = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearValue() {
        
        value_ = 0L;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:segment.v3.KeyIntValuePair)
    }

    // @@protoc_insertion_point(class_scope:segment.v3.KeyIntValuePair)
    private static final segment.v3.Segment.KeyIntValuePair DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new segment.v3.Segment.KeyIntValuePair();
    }

    public static segment.v3.Segment.KeyIntValuePair getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<KeyIntValuePair>
        PARSER = new com.google.protobuf.AbstractParser<KeyIntValuePair>() {
      @java.lang.Override
      public KeyIntValuePair parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new KeyIntValuePair(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<KeyIntValuePair> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<KeyIntValuePair> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public segment.v3.Segment.KeyIntValuePair getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CPUOrBuilder extends
      // @@protoc_insertion_point(interface_extends:segment.v3.CPU)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>double usagePercent = 2;</code>
     * @return The usagePercent.
     */
    double getUsagePercent();
  }
  /**
   * Protobuf type {@code segment.v3.CPU}
   */
  public static final class CPU extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:segment.v3.CPU)
      CPUOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CPU.newBuilder() to construct.
    private CPU(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CPU() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new CPU();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CPU(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 17: {

              usagePercent_ = input.readDouble();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return segment.v3.Segment.internal_static_segment_v3_CPU_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return segment.v3.Segment.internal_static_segment_v3_CPU_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              segment.v3.Segment.CPU.class, segment.v3.Segment.CPU.Builder.class);
    }

    public static final int USAGEPERCENT_FIELD_NUMBER = 2;
    private double usagePercent_;
    /**
     * <code>double usagePercent = 2;</code>
     * @return The usagePercent.
     */
    @java.lang.Override
    public double getUsagePercent() {
      return usagePercent_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (java.lang.Double.doubleToRawLongBits(usagePercent_) != 0) {
        output.writeDouble(2, usagePercent_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (java.lang.Double.doubleToRawLongBits(usagePercent_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(2, usagePercent_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof segment.v3.Segment.CPU)) {
        return super.equals(obj);
      }
      segment.v3.Segment.CPU other = (segment.v3.Segment.CPU) obj;

      if (java.lang.Double.doubleToLongBits(getUsagePercent())
          != java.lang.Double.doubleToLongBits(
              other.getUsagePercent())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + USAGEPERCENT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getUsagePercent()));
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static segment.v3.Segment.CPU parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static segment.v3.Segment.CPU parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static segment.v3.Segment.CPU parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static segment.v3.Segment.CPU parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static segment.v3.Segment.CPU parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static segment.v3.Segment.CPU parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static segment.v3.Segment.CPU parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static segment.v3.Segment.CPU parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static segment.v3.Segment.CPU parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static segment.v3.Segment.CPU parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static segment.v3.Segment.CPU parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static segment.v3.Segment.CPU parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(segment.v3.Segment.CPU prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code segment.v3.CPU}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:segment.v3.CPU)
        segment.v3.Segment.CPUOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return segment.v3.Segment.internal_static_segment_v3_CPU_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return segment.v3.Segment.internal_static_segment_v3_CPU_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                segment.v3.Segment.CPU.class, segment.v3.Segment.CPU.Builder.class);
      }

      // Construct using segment.v3.Segment.CPU.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        usagePercent_ = 0D;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return segment.v3.Segment.internal_static_segment_v3_CPU_descriptor;
      }

      @java.lang.Override
      public segment.v3.Segment.CPU getDefaultInstanceForType() {
        return segment.v3.Segment.CPU.getDefaultInstance();
      }

      @java.lang.Override
      public segment.v3.Segment.CPU build() {
        segment.v3.Segment.CPU result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public segment.v3.Segment.CPU buildPartial() {
        segment.v3.Segment.CPU result = new segment.v3.Segment.CPU(this);
        result.usagePercent_ = usagePercent_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof segment.v3.Segment.CPU) {
          return mergeFrom((segment.v3.Segment.CPU)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(segment.v3.Segment.CPU other) {
        if (other == segment.v3.Segment.CPU.getDefaultInstance()) return this;
        if (other.getUsagePercent() != 0D) {
          setUsagePercent(other.getUsagePercent());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        segment.v3.Segment.CPU parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (segment.v3.Segment.CPU) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private double usagePercent_ ;
      /**
       * <code>double usagePercent = 2;</code>
       * @return The usagePercent.
       */
      @java.lang.Override
      public double getUsagePercent() {
        return usagePercent_;
      }
      /**
       * <code>double usagePercent = 2;</code>
       * @param value The usagePercent to set.
       * @return This builder for chaining.
       */
      public Builder setUsagePercent(double value) {
        
        usagePercent_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double usagePercent = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearUsagePercent() {
        
        usagePercent_ = 0D;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:segment.v3.CPU)
    }

    // @@protoc_insertion_point(class_scope:segment.v3.CPU)
    private static final segment.v3.Segment.CPU DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new segment.v3.Segment.CPU();
    }

    public static segment.v3.Segment.CPU getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CPU>
        PARSER = new com.google.protobuf.AbstractParser<CPU>() {
      @java.lang.Override
      public CPU parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CPU(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CPU> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CPU> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public segment.v3.Segment.CPU getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface InstantOrBuilder extends
      // @@protoc_insertion_point(interface_extends:segment.v3.Instant)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The number of seconds from the epoch of 1970-01-01T00:00:00Z.
     * </pre>
     *
     * <code>int64 seconds = 1;</code>
     * @return The seconds.
     */
    long getSeconds();

    /**
     * <pre>
     * The number of nanoseconds, later along the time-line, from the seconds field.
     * This is always positive, and never exceeds 999,999,999.
     * </pre>
     *
     * <code>int32 nanos = 2;</code>
     * @return The nanos.
     */
    int getNanos();
  }
  /**
   * <pre>
   * since v3.1
   * An instantaneous point on the time-line.
   * An instant represents a data point accurate to the nanosecond.
   * It is constituted by a long representing epoch-seconds and an int representing nanosecond-of-second,
   * which will always be between 0 and 999,999,999
   * </pre>
   *
   * Protobuf type {@code segment.v3.Instant}
   */
  public static final class Instant extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:segment.v3.Instant)
      InstantOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Instant.newBuilder() to construct.
    private Instant(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Instant() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Instant();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Instant(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              seconds_ = input.readInt64();
              break;
            }
            case 16: {

              nanos_ = input.readInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return segment.v3.Segment.internal_static_segment_v3_Instant_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return segment.v3.Segment.internal_static_segment_v3_Instant_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              segment.v3.Segment.Instant.class, segment.v3.Segment.Instant.Builder.class);
    }

    public static final int SECONDS_FIELD_NUMBER = 1;
    private long seconds_;
    /**
     * <pre>
     * The number of seconds from the epoch of 1970-01-01T00:00:00Z.
     * </pre>
     *
     * <code>int64 seconds = 1;</code>
     * @return The seconds.
     */
    @java.lang.Override
    public long getSeconds() {
      return seconds_;
    }

    public static final int NANOS_FIELD_NUMBER = 2;
    private int nanos_;
    /**
     * <pre>
     * The number of nanoseconds, later along the time-line, from the seconds field.
     * This is always positive, and never exceeds 999,999,999.
     * </pre>
     *
     * <code>int32 nanos = 2;</code>
     * @return The nanos.
     */
    @java.lang.Override
    public int getNanos() {
      return nanos_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (seconds_ != 0L) {
        output.writeInt64(1, seconds_);
      }
      if (nanos_ != 0) {
        output.writeInt32(2, nanos_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (seconds_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, seconds_);
      }
      if (nanos_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, nanos_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof segment.v3.Segment.Instant)) {
        return super.equals(obj);
      }
      segment.v3.Segment.Instant other = (segment.v3.Segment.Instant) obj;

      if (getSeconds()
          != other.getSeconds()) return false;
      if (getNanos()
          != other.getNanos()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + SECONDS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getSeconds());
      hash = (37 * hash) + NANOS_FIELD_NUMBER;
      hash = (53 * hash) + getNanos();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static segment.v3.Segment.Instant parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static segment.v3.Segment.Instant parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static segment.v3.Segment.Instant parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static segment.v3.Segment.Instant parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static segment.v3.Segment.Instant parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static segment.v3.Segment.Instant parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static segment.v3.Segment.Instant parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static segment.v3.Segment.Instant parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static segment.v3.Segment.Instant parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static segment.v3.Segment.Instant parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static segment.v3.Segment.Instant parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static segment.v3.Segment.Instant parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(segment.v3.Segment.Instant prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * since v3.1
     * An instantaneous point on the time-line.
     * An instant represents a data point accurate to the nanosecond.
     * It is constituted by a long representing epoch-seconds and an int representing nanosecond-of-second,
     * which will always be between 0 and 999,999,999
     * </pre>
     *
     * Protobuf type {@code segment.v3.Instant}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:segment.v3.Instant)
        segment.v3.Segment.InstantOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return segment.v3.Segment.internal_static_segment_v3_Instant_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return segment.v3.Segment.internal_static_segment_v3_Instant_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                segment.v3.Segment.Instant.class, segment.v3.Segment.Instant.Builder.class);
      }

      // Construct using segment.v3.Segment.Instant.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        seconds_ = 0L;

        nanos_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return segment.v3.Segment.internal_static_segment_v3_Instant_descriptor;
      }

      @java.lang.Override
      public segment.v3.Segment.Instant getDefaultInstanceForType() {
        return segment.v3.Segment.Instant.getDefaultInstance();
      }

      @java.lang.Override
      public segment.v3.Segment.Instant build() {
        segment.v3.Segment.Instant result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public segment.v3.Segment.Instant buildPartial() {
        segment.v3.Segment.Instant result = new segment.v3.Segment.Instant(this);
        result.seconds_ = seconds_;
        result.nanos_ = nanos_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof segment.v3.Segment.Instant) {
          return mergeFrom((segment.v3.Segment.Instant)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(segment.v3.Segment.Instant other) {
        if (other == segment.v3.Segment.Instant.getDefaultInstance()) return this;
        if (other.getSeconds() != 0L) {
          setSeconds(other.getSeconds());
        }
        if (other.getNanos() != 0) {
          setNanos(other.getNanos());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        segment.v3.Segment.Instant parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (segment.v3.Segment.Instant) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private long seconds_ ;
      /**
       * <pre>
       * The number of seconds from the epoch of 1970-01-01T00:00:00Z.
       * </pre>
       *
       * <code>int64 seconds = 1;</code>
       * @return The seconds.
       */
      @java.lang.Override
      public long getSeconds() {
        return seconds_;
      }
      /**
       * <pre>
       * The number of seconds from the epoch of 1970-01-01T00:00:00Z.
       * </pre>
       *
       * <code>int64 seconds = 1;</code>
       * @param value The seconds to set.
       * @return This builder for chaining.
       */
      public Builder setSeconds(long value) {
        
        seconds_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The number of seconds from the epoch of 1970-01-01T00:00:00Z.
       * </pre>
       *
       * <code>int64 seconds = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearSeconds() {
        
        seconds_ = 0L;
        onChanged();
        return this;
      }

      private int nanos_ ;
      /**
       * <pre>
       * The number of nanoseconds, later along the time-line, from the seconds field.
       * This is always positive, and never exceeds 999,999,999.
       * </pre>
       *
       * <code>int32 nanos = 2;</code>
       * @return The nanos.
       */
      @java.lang.Override
      public int getNanos() {
        return nanos_;
      }
      /**
       * <pre>
       * The number of nanoseconds, later along the time-line, from the seconds field.
       * This is always positive, and never exceeds 999,999,999.
       * </pre>
       *
       * <code>int32 nanos = 2;</code>
       * @param value The nanos to set.
       * @return This builder for chaining.
       */
      public Builder setNanos(int value) {
        
        nanos_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The number of nanoseconds, later along the time-line, from the seconds field.
       * This is always positive, and never exceeds 999,999,999.
       * </pre>
       *
       * <code>int32 nanos = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearNanos() {
        
        nanos_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:segment.v3.Instant)
    }

    // @@protoc_insertion_point(class_scope:segment.v3.Instant)
    private static final segment.v3.Segment.Instant DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new segment.v3.Segment.Instant();
    }

    public static segment.v3.Segment.Instant getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Instant>
        PARSER = new com.google.protobuf.AbstractParser<Instant>() {
      @java.lang.Override
      public Instant parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Instant(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Instant> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Instant> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public segment.v3.Segment.Instant getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_segment_v3_SegmentObject_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_segment_v3_SegmentObject_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_segment_v3_SegmentReference_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_segment_v3_SegmentReference_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_segment_v3_SpanObject_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_segment_v3_SpanObject_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_segment_v3_Log_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_segment_v3_Log_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_segment_v3_ID_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_segment_v3_ID_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_segment_v3_SegmentCollection_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_segment_v3_SegmentCollection_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_segment_v3_KeyStringValuePair_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_segment_v3_KeyStringValuePair_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_segment_v3_KeyIntValuePair_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_segment_v3_KeyIntValuePair_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_segment_v3_CPU_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_segment_v3_CPU_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_segment_v3_Instant_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_segment_v3_Instant_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\023proto/segment.proto\022\nsegment.v3\"\240\001\n\rSe" +
      "gmentObject\022\017\n\007traceId\030\001 \001(\t\022\026\n\016traceSeg" +
      "mentId\030\002 \001(\t\022%\n\005spans\030\003 \003(\0132\026.segment.v3" +
      ".SpanObject\022\017\n\007service\030\004 \001(\t\022\027\n\017serviceI" +
      "nstance\030\005 \001(\t\022\025\n\risSizeLimited\030\006 \001(\010\"\355\001\n" +
      "\020SegmentReference\022$\n\007refType\030\001 \001(\0162\023.seg" +
      "ment.v3.RefType\022\017\n\007traceId\030\002 \001(\t\022\034\n\024pare" +
      "ntTraceSegmentId\030\003 \001(\t\022\024\n\014parentSpanId\030\004" +
      " \001(\005\022\025\n\rparentService\030\005 \001(\t\022\035\n\025parentSer" +
      "viceInstance\030\006 \001(\t\022\026\n\016parentEndpoint\030\007 \001" +
      "(\t\022 \n\030networkAddressUsedAtPeer\030\010 \001(\t\"\202\003\n" +
      "\nSpanObject\022\016\n\006spanId\030\001 \001(\005\022\024\n\014parentSpa" +
      "nId\030\002 \001(\005\022\021\n\tstartTime\030\003 \001(\003\022\017\n\007endTime\030" +
      "\004 \001(\003\022*\n\004refs\030\005 \003(\0132\034.segment.v3.Segment" +
      "Reference\022\025\n\roperationName\030\006 \001(\t\022\014\n\004peer" +
      "\030\007 \001(\t\022&\n\010spanType\030\010 \001(\0162\024.segment.v3.Sp" +
      "anType\022(\n\tspanLayer\030\t \001(\0162\025.segment.v3.S" +
      "panLayer\022\023\n\013componentId\030\n \001(\005\022\017\n\007isError" +
      "\030\013 \001(\010\022,\n\004tags\030\014 \003(\0132\036.segment.v3.KeyStr" +
      "ingValuePair\022\035\n\004logs\030\r \003(\0132\017.segment.v3." +
      "Log\022\024\n\014skipAnalysis\030\016 \001(\010\"A\n\003Log\022\014\n\004time" +
      "\030\001 \001(\003\022,\n\004data\030\002 \003(\0132\036.segment.v3.KeyStr" +
      "ingValuePair\"\020\n\002ID\022\n\n\002id\030\001 \003(\t\"@\n\021Segmen" +
      "tCollection\022+\n\010segments\030\001 \003(\0132\031.segment." +
      "v3.SegmentObject\"0\n\022KeyStringValuePair\022\013" +
      "\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t\"-\n\017KeyIntValu" +
      "ePair\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\003\"\033\n\003CPU" +
      "\022\024\n\014usagePercent\030\002 \001(\001\")\n\007Instant\022\017\n\007sec" +
      "onds\030\001 \001(\003\022\r\n\005nanos\030\002 \001(\005**\n\010SpanType\022\t\n" +
      "\005Entry\020\000\022\010\n\004Exit\020\001\022\t\n\005Local\020\002*,\n\007RefType" +
      "\022\020\n\014CrossProcess\020\000\022\017\n\013CrossThread\020\001*U\n\tS" +
      "panLayer\022\013\n\007Unknown\020\000\022\014\n\010Database\020\001\022\020\n\014R" +
      "PCFramework\020\002\022\010\n\004Http\020\003\022\006\n\002MQ\020\004\022\t\n\005Cache" +
      "\020\005*0\n\013DetectPoint\022\n\n\006client\020\000\022\n\n\006server\020" +
      "\001\022\t\n\005proxy\020\002b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_segment_v3_SegmentObject_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_segment_v3_SegmentObject_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_segment_v3_SegmentObject_descriptor,
        new java.lang.String[] { "TraceId", "TraceSegmentId", "Spans", "Service", "ServiceInstance", "IsSizeLimited", });
    internal_static_segment_v3_SegmentReference_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_segment_v3_SegmentReference_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_segment_v3_SegmentReference_descriptor,
        new java.lang.String[] { "RefType", "TraceId", "ParentTraceSegmentId", "ParentSpanId", "ParentService", "ParentServiceInstance", "ParentEndpoint", "NetworkAddressUsedAtPeer", });
    internal_static_segment_v3_SpanObject_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_segment_v3_SpanObject_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_segment_v3_SpanObject_descriptor,
        new java.lang.String[] { "SpanId", "ParentSpanId", "StartTime", "EndTime", "Refs", "OperationName", "Peer", "SpanType", "SpanLayer", "ComponentId", "IsError", "Tags", "Logs", "SkipAnalysis", });
    internal_static_segment_v3_Log_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_segment_v3_Log_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_segment_v3_Log_descriptor,
        new java.lang.String[] { "Time", "Data", });
    internal_static_segment_v3_ID_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_segment_v3_ID_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_segment_v3_ID_descriptor,
        new java.lang.String[] { "Id", });
    internal_static_segment_v3_SegmentCollection_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_segment_v3_SegmentCollection_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_segment_v3_SegmentCollection_descriptor,
        new java.lang.String[] { "Segments", });
    internal_static_segment_v3_KeyStringValuePair_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_segment_v3_KeyStringValuePair_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_segment_v3_KeyStringValuePair_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_segment_v3_KeyIntValuePair_descriptor =
      getDescriptor().getMessageTypes().get(7);
    internal_static_segment_v3_KeyIntValuePair_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_segment_v3_KeyIntValuePair_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_segment_v3_CPU_descriptor =
      getDescriptor().getMessageTypes().get(8);
    internal_static_segment_v3_CPU_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_segment_v3_CPU_descriptor,
        new java.lang.String[] { "UsagePercent", });
    internal_static_segment_v3_Instant_descriptor =
      getDescriptor().getMessageTypes().get(9);
    internal_static_segment_v3_Instant_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_segment_v3_Instant_descriptor,
        new java.lang.String[] { "Seconds", "Nanos", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
