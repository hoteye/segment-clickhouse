services:
  # Elasticsearch 7.x for SkyWalking storage
  elasticsearch:
    image: elasticsearch:7.8.0
    container_name: elasticsearch
    restart: unless-stopped
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      - discovery.type=single-node
      - cluster.name=CollectorDBCluster
      - node.name=elasticsearch-node
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms1g -Xmx1g"
      - xpack.security.enabled=false
      - xpack.monitoring.enabled=false
      - xpack.watcher.enabled=false
      - xpack.ml.enabled=false
      - TZ=Asia/Shanghai
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
      - elasticsearch_logs:/usr/share/elasticsearch/logs
    networks:
      - kafka-net
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9200/_cluster/health?wait_for_status=yellow&timeout=30s || exit 1"]
      interval: 15s
      timeout: 10s
      retries: 12
      start_period: 120s

  # ZooKeeper for Kafka
  zookeeper:
    image: zookeeper:latest
    container_name: zookeeper
    restart: unless-stopped
    ports:
      - "2181:2181"
    environment:
      ZOO_MY_ID: 1
      ZOO_SERVERS: server.1=0.0.0.0:2888:3888;2181
      TZ: Asia/Shanghai
    volumes:
      - zookeeper_data:/data
      - zookeeper_logs:/datalog
    networks:
      - kafka-net

  # Kafka for Agent data transmission
  kafka:
    image: wurstmeister/kafka:latest
    container_name: kafka
    restart: unless-stopped
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:29092,OUTSIDE://192.168.100.6:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:29092,OUTSIDE://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      TZ: Asia/Shanghai
    volumes:
      - kafka_data:/kafka
    networks:
      - kafka-net
    healthcheck:
      test: ["CMD", "kafka-topics.sh", "--list", "--bootstrap-server", "localhost:29092"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # SkyWalking OAP Server 8.7.0 with ES7 storage
  skywalking-oap:
    image: apache/skywalking-oap-server:8.7.0-es7
    container_name: skywalking-oap
    restart: unless-stopped
    depends_on:
      elasticsearch:
        condition: service_healthy
      kafka:
        condition: service_healthy
    ports:
      - "11800:11800"  # gRPC port for agents
      - "12800:12800"  # HTTP port for UI
    environment:
      - SW_STORAGE=elasticsearch7
      - SW_STORAGE_ES_CLUSTER_NODES=elasticsearch:9200
      - SW_STORAGE_ES_INDEX_SHARDS_NUMBER=2
      - SW_STORAGE_ES_INDEX_REPLICAS_NUMBER=0
      # Kafka Fetcher 配置
      - SW_KAFKA_FETCHER=default
      - SW_KAFKA_FETCHER_SERVERS=kafka:29092
      - SW_KAFKA_NAMESPACE=topic-dics-long
      - SW_KAFKA_FETCHER_PARTITIONS=3
      - SW_KAFKA_FETCHER_PARTITIONS_FACTOR=1
      - SW_KAFKA_FETCHER_CONSUMER_GROUP_ID=skywalking-consumer
      - SW_KAFKA_FETCHER_CONSUMER_THREADS=3
      - SW_NAMESPACE=topic-dics-long
      - JAVA_OPTS=-Xms1g -Xmx2g
      - TZ=Asia/Shanghai
    volumes:
      - skywalking_oap_logs:/opt/skywalking/logs
    networks:
      - kafka-net
# healthcheck:
      #   test: ["CMD-SHELL", "curl -f http://localhost:12800/internal/l7check || exit 1"]
      #   interval: 30s
      #   timeout: 10s
      #   retries: 5
      #   start_period: 180s

  skywalking-ui:
    image: apache/skywalking-ui:8.8.1
    container_name: skywalking-ui
    restart: unless-stopped
    depends_on:
      - skywalking-oap
    ports:
      - "8080:8080"
    environment:
      - SW_OAP_ADDRESS=http://skywalking-oap:12800
      - TZ=Asia/Shanghai
    networks:
      - kafka-net


  # ClickHouse for other data storage
  clickhouse-server:
    image: clickhouse/clickhouse-server:latest
    container_name: clickhouse-server
    restart: unless-stopped
    ports:
      - "8123:8123"  # HTTP interface
      - "9000:9000"  # Native client port
    environment:
      CLICKHOUSE_USER: root
      CLICKHOUSE_PASSWORD: 123456
      TZ: Asia/Shanghai
    ulimits:
      nofile:
        soft: 262144
        hard: 262144
    volumes:
      - clickhouse-data:/var/lib/clickhouse
      - clickhouse_logs:/var/log/clickhouse-server
    networks:
      - kafka-net
    healthcheck:
      test: ["CMD", "clickhouse-client", "--user", "root", "--password", "123456", "--query", "SELECT 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

volumes:
  zookeeper_data:
    driver: local
  zookeeper_logs:
    driver: local
  kafka_data:
    driver: local
  elasticsearch_data:
    driver: local
  elasticsearch_logs:
    driver: local
  skywalking_oap_logs:
    driver: local
  clickhouse-data:
    external: true
  clickhouse_logs:
    driver: local

networks:
  kafka-net:
    driver: bridge
    name: observability-network
    external: false 